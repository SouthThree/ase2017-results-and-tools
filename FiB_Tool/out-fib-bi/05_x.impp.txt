Loading grammar file /home/spencerxiao/Experiments/tacas17/FiB_Tool/IMP_Program.cgt succesfully
verifying assertion: (j >= i)
find an inductive invaraint in forward interpolation  based on concrete reachables!
invariant size: 450
interp: (let ((.def_207 (+ (* (- 1) j) i))) (let ((.def_209 (+ x (+ (* (- 1) y) .def_207)))) (let ((.def_604 (<= x y))) (let ((.def_641 (<= y x))) (let ((.def_1409 (not .def_604))) (let ((.def_1483 (not (<= (+ (* 2 x) (+ (* (- 2) y) .def_207)) (- 3))))) (let ((.def_1910 (<= .def_209 (- 4)))) (let ((.def_2575 (and .def_604 .def_641))) (let ((.def_4088 (not .def_2575))) (let ((.def_5530 (+ (* 6 x) (+ (* (- 6) y) .def_207)))) (let ((.def_5967 (<= .def_5530 (- 6)))) (let ((.def_5968 (not .def_5967))) (let ((.def_5969 (<= .def_5530 0))) (let ((.def_5970 (not .def_5969))) (let ((.def_5973 (not (<= .def_5530 (- 1))))) (let ((.def_5980 (not (<= .def_5530 (- 3))))) (let ((.def_5983 (not (<= .def_5530 (- 4))))) (let ((.def_5986 (not (<= .def_5530 (- 2))))) (let ((.def_6025 (<= .def_5530 (- 5)))) (let ((.def_6026 (not .def_6025))) (let ((.def_8459 (not .def_641))) (let ((.def_12285 (<= .def_209 (- 6)))) (let ((.def_14240 (<= 6 (+ j (* (- 1) i))))) (let ((.def_18662 (<= (+ (* 9 x) (+ (* (- 9) y) .def_207)) (- 6)))) (let ((.def_24806 (<= (+ (* 10 x) (+ (* (- 10) y) .def_207)) (- 6)))) (let ((.def_24822 (<= (+ (* 10 x) (+ (* (- 10) y) .def_207)) (- 4)))) (let ((.def_29061 (+ (* 11 x) (+ (* (- 11) y) .def_207)))) (let ((.def_30097 (<= .def_29061 (- 2)))) (let ((.def_30098 (not .def_30097))) (let ((.def_30106 (<= .def_29061 (- 1)))) (let ((.def_30112 (<= .def_29061 (- 5)))) (let ((.def_30119 (<= .def_29061 0))) (let ((.def_30120 (not .def_30119))) (let ((.def_34724 (or .def_1910 .def_12285))) (let ((.def_35183 (not (<= .def_5530 (- 9))))) (let ((.def_35185 (not (<= .def_5530 (- 10))))) (let ((.def_35189 (not (<= .def_5530 (- 7))))) (let ((.def_35196 (not (<= .def_5530 (- 8))))) (let ((.def_35204 (and .def_35196 (and .def_35189 (and .def_5968 (and .def_6026 (and .def_5983 (and .def_5980 (and .def_35183 (and (and .def_35189 (and .def_5968 (and .def_6026 (and .def_5983 (and .def_5970 (and (and .def_5968 (and .def_6026 (and (and (and (and .def_5970 .def_5973) .def_5986) .def_35183) .def_35185))) .def_35189)))))) .def_35196)))))))))) (let ((.def_35229 (and .def_2575 (not (and .def_5973 (and .def_5970 (and .def_6026 (and .def_35185 (and .def_35183 (and .def_5986 (and .def_5968 (and .def_6026 (and .def_5983 (and .def_5970 (and .def_35189 (and .def_5968 (and .def_35189 (and .def_35196 (and .def_5980 (and .def_5968 (and .def_35183 (and .def_5983 (and .def_6026 (and .def_5968 (and .def_35189 (and .def_5970 .def_35196)))))))))))))))))))))))))) (let ((.def_35255 (not (and (<= .def_29061 (- 9)) (and (<= (+ (* 10 x) (+ (* (- 10) y) .def_207)) (- 9)) (and (<= (+ (* 9 x) (+ (* (- 9) y) .def_207)) (- 9)) (and (<= (+ (* 8 x) (+ (* (- 8) y) .def_207)) (- 9)) (and (<= (+ (* 7 x) (+ (* (- 7) y) .def_207)) (- 9)) (and (<= (+ (* 5 x) (+ (* (- 5) y) .def_207)) (- 9)) (and (<= (+ (* 4 x) (+ (* (- 4) y) .def_207)) (- 9)) (and (<= (+ (* 3 x) (+ (* (- 3) y) .def_207)) (- 9)) (and (<= (+ (* 2 x) (+ (* (- 2) y) .def_207)) (- 9)) (and (<= 9 (+ j (* (- 1) i))) (<= .def_209 (- 9))))))))))))))) (let ((.def_35258 (not (and .def_4088 (and (and .def_8459 (and .def_4088 (and (not (and (and .def_1910 (<= 4 (+ j (* (- 1) i)))) .def_24822)) (not (and (and .def_12285 .def_14240) .def_24806))))) .def_35255))))) (let ((.def_35277 (and .def_8459 (and .def_4088 (and .def_35255 (and .def_8459 (and .def_4088 (not (and .def_34724 (or (and .def_24822 (and .def_641 .def_35258)) (and .def_24806 (and .def_12285 (and .def_14240 (and .def_18662 (and (<= (+ (* 8 x) (+ (* (- 8) y) .def_207)) (- 6)) (and (<= (+ (* 7 x) (+ (* (- 7) y) .def_207)) (- 6)) (and (<= (+ (* 5 x) (+ (* (- 5) y) .def_207)) (- 6)) (and (<= (+ (* 4 x) (+ (* (- 4) y) .def_207)) (- 6)) (and (<= (+ (* 2 x) (+ (* (- 2) y) .def_207)) (- 6)) (<= (+ (* 3 x) (+ (* (- 3) y) .def_207)) (- 6))))))))))))))))))))) (let ((.def_35292 (or .def_35277 (and .def_35277 (or .def_35277 (and .def_8459 (and .def_4088 (and .def_35255 (and .def_8459 (and .def_4088 (not (and .def_34724 .def_35258)))))))))))) (let ((.def_35304 (not (and .def_4088 (and .def_35255 (and .def_4088 (or (and .def_1409 (and (not (<= (to_real j) (to_real i))) (and .def_1409 (not (and .def_604 .def_18662))))) (and .def_35292 (or .def_35277 (and .def_35277 .def_35292)))))))))) (let ((.def_35310 (and .def_35304 (not (and .def_1409 (and .def_4088 (not (and (or .def_604 .def_35229) .def_35304)))))))) (let ((.def_35334 (and .def_35310 (not (and .def_35196 (and .def_35189 (and .def_5968 (and .def_6026 (and .def_5983 (and .def_5980 (and .def_35183 (and .def_6026 (and .def_5983 (and .def_5970 (and .def_35189 (and .def_5968 (and .def_6026 (and .def_35185 (and .def_35183 (and .def_5986 (and .def_5973 (and .def_5970 (and (not (and (not .def_35204) .def_35310)) (and .def_5970 (not .def_35229))))))))))))))))))))))))) (let ((.def_35335 (not .def_35334))) (let ((.def_35338 (and .def_35310 (or .def_5967 .def_35334)))) (let ((.def_35339 (not .def_35338))) (let ((.def_35347 (and .def_35310 (not (and .def_5968 (and .def_8459 (and .def_1483 (and .def_8459 .def_35335)))))))) (let ((.def_35356 (and .def_641 .def_35347))) (let ((.def_35369 (or (and .def_35310 (and .def_35347 (not (and .def_8459 (and .def_1483 (and .def_8459 (and (not (and (or .def_641 .def_35338) (and .def_35310 (or .def_5967 (and .def_35347 (or .def_641 .def_35334)))))) (not .def_35356)))))))) (and .def_35310 .def_35356)))) (let ((.def_35371 (not (and (<= .def_29061 (- 4)) .def_35369)))) (let ((.def_35374 (not (and .def_6025 .def_35310)))) (let ((.def_35376 (and .def_35335 .def_35374))) (let ((.def_35387 (not (and .def_30106 .def_35369)))) (let ((.def_35418 (not (and .def_35310 (not (and .def_35196 (and .def_35189 (and .def_5968 (and .def_6026 (and .def_5983 (and .def_5980 (and .def_5968 (and .def_35183 (and .def_35196 (and .def_35189 (and .def_5968 (and .def_6026 (and .def_5983 (and .def_5970 (and .def_35189 (and .def_5968 (and .def_6026 (and .def_35185 (and .def_35183 (and .def_5986 (and .def_5973 (and .def_5970 (not (and .def_35369 (not (and .def_35339 (and .def_5970 (and .def_30098 .def_35387))))))))))))))))))))))))))))))))) (let ((.def_35425 (not (and .def_30112 .def_35369)))) (let ((.def_35449 (not (and .def_30119 .def_35369)))) (let ((.def_35450 (and (not (and .def_35369 (not (and .def_35371 (and (and (and (and .def_35339 .def_35371) .def_35374) (not (and .def_604 (not (and (not .def_30112) (and .def_30098 (and (not .def_30106) (and .def_30120 (and (not .def_12285) .def_35376))))))))) (and .def_35371 (and .def_35418 (not (and .def_35310 (or .def_5967 (and .def_35369 (not (and .def_35374 (and .def_35418 (not (and (not (and (not (<= .def_209 (- 3))) (and (and (and .def_35387 (and .def_30120 .def_35376)) (not (and .def_30097 .def_35369))) .def_35425))) (and .def_604 .def_35369))))))))))))))))) .def_35449))) (let ((.def_35453 (and .def_5973 .def_5986))) (let ((.def_35455 (not (<= .def_5530 (- 11))))) (let ((.def_35456 (and (and (and .def_5980 (and .def_5970 .def_35450)) .def_35453) .def_35455))) (or (and .def_35310 (not (and .def_5968 (and .def_35449 (and .def_35387 (and .def_35449 (and .def_5980 (and .def_35425 (and .def_5986 (and .def_5970 (and .def_5980 (and (and (and .def_5970 (and .def_5986 (and .def_5973 (and .def_5986 (and .def_5970 (and .def_35449 (and .def_5970 (and .def_35449 (and .def_5970 (and (and (and .def_35456 (and .def_5973 (and .def_5970 .def_35456))) (and .def_5980 .def_35418)) (not (and .def_35369 (not (and .def_35371 (and .def_35450 (and .def_30120 (and .def_35376 .def_35449))))))))))))))))) (and .def_5983 (and .def_35374 (and .def_35371 (and .def_35449 (and .def_5980 (and .def_35455 (and .def_35453 (and (not (<= (to_real .def_5530) (to_real (- 1)))) (and .def_35204 (not (<= (to_real .def_5530) (to_real 0))))))))))))) (not (<= (to_real .def_5530) (to_real (- 4)))))))))))))))) (and .def_5969 .def_35310))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))))
forward [22] times, backtrack [11] times
backward [22] times, backtrack [11] times
