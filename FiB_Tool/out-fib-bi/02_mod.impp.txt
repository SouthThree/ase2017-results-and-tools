Loading grammar file /home/spencerxiao/Experiments/tacas17/FiB_Tool/IMP_Program.cgt succesfully
verifying assertion: (x = y)
find an inductive invaraint in backward interpolation  based on concrete reachables!
invariant size: 150
interp: (let ((.def_32 (= x y))) (let ((.def_2643 (<= (- 4) (+ z (+ (* 5 x) (+ (* (- 1) y) (+ (* 2 w) (* (- 2) (to_int (* (/ 1 2) (to_real (+ (+ w 2) (+ (+ y 1) (+ (+ w (+ y (+ z x))) (+ x 1))))))))))))))) (not (or (and (not .def_32) (or (<= 1 (+ x (* (- 1) y))) (<= (+ x (* (- 1) y)) (- 1)))) (and (and .def_32 (or (and (<= (to_real (+ z (+ (* 5 x) (+ (* (- 1) y) (+ (* 2 w) (* (- 2) (to_int (* (/ 1 2) (to_real (+ (+ w 2) (+ (+ y 1) (+ (+ w (+ y (+ z x))) (+ x 1))))))))))))) (to_real (- 4))) (<= (- 4) (+ z (+ (* 6 x) (+ (* (- 2) y) (+ (* 2 w) (* (- 2) (to_int (* (/ 1 2) (to_real (+ (+ w 2) (+ (+ y 1) (+ (+ w (+ y (+ z x))) (+ x 1)))))))))))))) (and (<= (to_real 0) (to_real (+ z (+ (* 4 x) (+ (* (- 2) y) (+ w (* (- 2) (to_int (* (/ 1 2) (to_real (+ w (+ y (+ z x))))))))))))) (<= (to_real (+ z (+ (* 4 x) (+ (* (- 2) y) (+ w (* (- 2) (to_int (* (/ 1 2) (to_real (+ w (+ y (+ z x)))))))))))) (to_real 0))))) (and (or (<= (to_real (+ z (+ w (* (- 2) (to_int (* (/ 1 2) (to_real (+ (* 1 w) (* 1 z))))))))) (to_real 0)) (<= (to_real (+ z (* (- 2) (to_int (* (/ 1 2) (to_real (* 1 z))))))) (to_real 0))) (and (not (and (and (not (<= (to_real (+ z (+ (* 2 x) w))) (to_real 4))) (not (<= (to_real 6) (to_real (+ z (+ (* 2 x) w)))))) (not (<= (to_real 0) (to_real (+ z (+ (* (- 1) x) (+ y (* 2 (to_int (* (/ 1 2) (to_real (* (- 1) z))))))))))))) (not (and (and (not (and .def_2643 (<= (+ z (+ (* 5 x) (+ (* (- 1) y) (+ (* 2 w) (* (- 2) (to_int (* (/ 1 2) (to_real (+ (+ w 2) (+ (+ y 1) (+ (+ w (+ y (+ z x))) (+ x 1)))))))))))) (- 4)))) (not (and (<= (to_real (- 3)) (to_real (+ (* 2 x) (+ (* (- 1) w) (+ (* 2 (to_int (* (/ 1 2) (to_real (+ w (+ y (+ z x))))))) (* 2 (to_int (* (/ 1 2) (to_real (+ (+ (+ (* 1 y) (* (- 5) x)) (* (- 1) z)) (- 3))))))))))) (<= (to_real (+ (* 2 x) (+ (* (- 1) w) (+ (* 2 (to_int (* (/ 1 2) (to_real (+ w (+ y (+ z x))))))) (* (- 2) (to_int (* (/ 1 2) (to_real (+ (+ (+ (* (- 1) y) (* 5 x)) (* 1 z)) 3))))))))) (to_real (- 3)))))) (not (and .def_2643 (<= (to_real (+ (* 2 z) (+ (* 4 x) (+ (* 3 w) (+ (* (- 2) (to_int (* (/ 1 2) (to_real (+ (+ w 2) (+ (+ y 1) (+ (+ w (+ y (+ z x))) (+ x 1)))))))) (* (- 2) (to_int (* (/ 1 2) (to_real (+ (+ (* 1 w) (* 1 z)) (- 1))))))))))) (to_real (- 3))))))))))))))
The assertion is satisfied!
forward [4] times, backtrack [2] times
backward [4] times, backtrack [2] times
