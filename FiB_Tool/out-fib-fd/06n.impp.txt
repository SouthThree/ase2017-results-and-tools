Loading grammar file /home/spencerxiao/Experiments/tacas17/FiB_Tool/IMP_Program.cgt succesfully
verifying assertion: (x = y)
find an inductive invaraint based on concrete reachables
invariant size: 85
interp: (let ((.def_26 (= turn 0))) (let ((.def_28 (= x y))) (let ((.def_44 (= turn 1))) (let ((.def_1287 (<= x y))) (let ((.def_1288 (<= y x))) (let ((.def_4133 (<= (+ z (* (- 2) (to_int (* (/ 1 2) (to_real (+ (* 1 z) (- 1))))))) 1))) (let ((.def_4142 (<= (+ w (* (- 2) (to_int (* (/ 1 2) (to_real (* 1 w)))))) 0))) (let ((.def_4159 (<= (to_real (+ z (* (- 2) (to_int (* (/ 1 2) (to_real (* 1 z))))))) (to_real 0)))) (let ((.def_4168 (<= (to_real 1) (to_real (+ w (* 2 (to_int (* (/ 1 2) (to_real (+ (* (- 1) w) 1)))))))))) (let ((.def_4169 (and .def_28 .def_4168))) (not (and (and (not (and .def_1287 (and .def_1288 (and .def_26 (and .def_4133 .def_4142))))) (not (and .def_26 (and .def_4142 (and .def_28 .def_4133))))) (and (not (and .def_26 (and .def_4159 .def_4169))) (and (not (and .def_4159 (and .def_26 .def_4169))) (and (not (and .def_4159 (not (and (and (not (and .def_1287 (and .def_1288 (and .def_44 .def_4168)))) (not (and (and .def_1287 .def_1288) .def_4168))) (not (and .def_1288 (and .def_1287 (and (= turn 2) .def_4168)))))))) (not (and .def_4159 (and .def_4168 (and .def_1287 (and .def_44 .def_1288))))))))))))))))))))
The assertion is satisfied!
forward [2] times, backtracks [1] times
backward [1] times
