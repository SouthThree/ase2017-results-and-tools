Loading grammar file /home/spencerxiao/Experiments/tacas17/FiB_Tool/IMP_Program.cgt succesfully
verifying assertion: (x = y)
find an inductive invaraint based on concrete reachables
invariant size: 135
interp: (let ((.def_619 (<= x y))) (let ((.def_620 (<= y x))) (let ((.def_1200 (* 2 x))) (let ((.def_1220 (* (- 1) z))) (not (and (and (not (and (or (= x y) (and .def_619 .def_620)) (or (and (and (<= (to_real 25) (to_real (+ z (+ (* 3 x) (+ (* (- 1) y) w))))) (<= (+ z (+ (* 4 x) (+ (* (- 2) y) w))) 25)) (and (<= (to_real 37) (to_real (+ z (+ (* 5 x) (+ (* (- 1) y) (* 2 w)))))) (<= (to_real (+ (* 6 x) (+ (* (- 2) y) (+ (* 5 w) (* (- 2) (to_int (* (/ 1 2) (to_real (+ (+ (* 3 w) .def_1220) (- 23)))))))))) (to_real 60)))) (and (<= (to_real 1) (to_real (+ z (+ x (+ (* (- 1) y) (+ w (* 2 (to_int (* (/ 1 2) (to_real (+ (+ (* (- 1) w) .def_1220) 1))))))))))) (<= (to_real 1) (to_real (+ z (+ .def_1200 (+ (* (- 2) y) (* 2 (to_int (* (/ 1 2) (to_real (+ .def_1220 1)))))))))))))) (not (and .def_619 (and .def_620 (and (and (<= (+ z (+ (* 3 x) (+ (* (- 1) y) w))) 13) (<= (to_real 13) (to_real (+ z (+ .def_1200 w))))) (and (<= (+ z (+ (* 5 x) (+ (* (- 1) y) (* 2 w)))) 21) (<= 21 (+ z (+ (* 5 x) (+ (* (- 1) y) (* 2 w))))))))))) (not (and .def_619 (and .def_620 (and (<= (to_real 5) (to_real (+ z (+ (* (- 2) x) (+ (* 2 y) (* 2 (to_int (* (/ 1 2) (to_real (+ .def_1220 5)))))))))) (and (<= (to_real (+ .def_1200 (+ w (+ (* (- 1) (to_int (* (/ 1 2) (to_real (+ .def_1220 1))))) (* (- 1) (to_int (* (/ 1 2) (to_real (+ .def_1220 9))))))))) (to_real 0)) (<= (to_real 0) (to_real (+ .def_1200 (+ w (+ (to_int (* (/ 1 2) (to_real (+ (* 1 z) (- 1))))) (to_int (* (/ 1 2) (to_real (+ (* 1 z) (- 9)))))))))))))))))))))
The assertion is satisfied!
forward [4] times, backtracks [2] times
backward [2] times
