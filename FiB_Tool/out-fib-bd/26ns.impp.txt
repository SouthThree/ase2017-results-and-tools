Loading grammar file /home/spencerxiao/Experiments/tacas17/FiB_Tool/IMP_Program.cgt succesfully
verifying assertion: (x = y)
find an inductive invaraint  based on abstractions
invariant size: 209
interp: (let ((.def_26 (= turn 0))) (let ((.def_28 (= x y))) (let ((.def_29 (not .def_26))) (let ((.def_44 (= turn 1))) (let ((.def_1278 (* (- 1) z))) (let ((.def_1805 (not .def_28))) (let ((.def_1807 (<= x y))) (let ((.def_1808 (<= y x))) (let ((.def_1813 (<= 1 (+ x (* (- 1) y))))) (let ((.def_1817 (<= (+ x (* (- 1) y)) (- 1)))) (let ((.def_1818 (or .def_1813 .def_1817))) (let ((.def_1819 (and .def_1805 .def_1818))) (let ((.def_1824 (and (not .def_1813) (not .def_1817)))) (let ((.def_5536 (and .def_28 .def_1808))) (let ((.def_5546 (and .def_28 .def_1807))) (let ((.def_5547 (and .def_1807 .def_1808))) (let ((.def_5548 (and .def_5546 .def_5547))) (let ((.def_5593 (<= (to_real 0) (to_real (+ w (+ .def_1278 (+ (* (- 2) (to_int (* (/ 1 2) (to_real w)))) (* 2 (to_int (* (/ 1 2) (to_real (+ (+ (* (- 1) y) (* 1 x)) (* 1 z))))))))))))) (let ((.def_5607 (and .def_5593 (<= (to_real (+ w (+ .def_1278 (+ (* (- 2) (to_int (* (/ 1 2) (to_real w)))) (* (- 2) (to_int (* (/ 1 2) (to_real .def_1278)))))))) (to_real 0))))) (let ((.def_5636 (<= (to_real (+ w (* (- 2) (to_int (* (/ 1 2) (to_real (* 1 w))))))) (to_real 0)))) (let ((.def_5648 (<= (to_real 1) (to_real (+ z (* 2 (to_int (* (/ 1 2) (to_real (+ .def_1278 1)))))))))) (let ((.def_5653 (or .def_26 .def_44))) (let ((.def_5710 (<= (to_real 1) (to_real (+ z (+ (* (- 1) x) (+ y (* 2 (to_int (* (/ 1 2) (to_real (+ .def_1278 1)))))))))))) (let ((.def_5712 (and .def_1808 (and .def_5547 .def_5710)))) (let ((.def_5721 (and .def_1808 .def_5710))) (let ((.def_5747 (not (and .def_29 .def_44)))) (let ((.def_5751 (not (and .def_29 (and .def_1824 .def_5747))))) (let ((.def_5754 (and .def_1818 (and .def_1805 (and .def_1818 .def_5751))))) (let ((.def_5761 (and .def_1819 .def_5754))) (let ((.def_5764 (and .def_1819 (and .def_1818 (and (and .def_1805 (and .def_1819 (and .def_1818 (and .def_5754 (and .def_1819 (and .def_1805 .def_5754)))))) .def_5761))))) (let ((.def_5765 (not .def_5764))) (let ((.def_5772 (and .def_5546 (and .def_28 (and .def_1808 .def_5653))))) (let ((.def_5773 (and .def_5548 .def_5772))) (let ((.def_5776 (and .def_5546 (and .def_1808 (and .def_5547 .def_5773))))) (let ((.def_5788 (or .def_5764 (and .def_1808 (and .def_28 (and .def_1808 (and (and .def_1808 (and .def_1807 .def_5536)) (and .def_5548 (and .def_5776 (and .def_5772 (and .def_5547 (and .def_5653 .def_5776)))))))))))) (let ((.def_5798 (not (and .def_1824 (not .def_5648))))) (let ((.def_5820 (and (not (and .def_5798 (and .def_5761 (and .def_1805 .def_5798)))) (not (and (and (and .def_5546 .def_5653) (and .def_5536 (and .def_1808 (and (and .def_5653 (and (<= (to_real (+ z (+ x (+ (* (- 1) y) (* (- 2) (to_int (* (/ 1 2) (to_real z)))))))) (to_real 1)) (<= (to_real 1) (to_real (+ z (+ x (+ (* (- 1) y) (* (- 2) (to_int (* (/ 1 2) (to_real z))))))))))) (and (<= 1 (+ z (+ x (+ (* (- 1) y) (* (- 2) (to_int (* (/ 1 2) (to_real z)))))))) (<= (to_real 0) (to_real (+ w (+ .def_1278 (+ (* 2 (to_int (* (/ 1 2) (to_real z)))) (* 2 (to_int (* (/ 1 2) (to_real (+ (* (- 1) w) 1))))))))))))))) (and .def_5546 (and .def_5721 (and (and .def_5712 (and (and (and .def_5712 .def_5773) (and .def_1808 (and .def_1807 .def_5710))) (and .def_5648 .def_5773))) (and .def_1808 (and (and .def_1807 .def_5721) .def_5776)))))))))) (let ((.def_5839 (not (and .def_5820 (not .def_5636))))) (not (and .def_5839 (and (not (and (and .def_5765 (not (and .def_5636 (and (and .def_1808 (and .def_5607 (and .def_5593 (<= (to_real (+ w (+ .def_1278 (+ (* (- 2) (to_int (* (/ 1 2) (to_real w)))) (* (- 2) (to_int (* (/ 1 2) (to_real (+ (+ (* 1 y) (* (- 1) x)) .def_1278))))))))) (to_real 0))))) (and (and .def_1808 .def_5607) (and .def_5653 (and (and .def_5751 (not (and (and (not (and .def_26 .def_5536)) .def_5747) .def_5765))) .def_5788))))))) .def_5820)) (and (and (and .def_5788 (or .def_5764 (and .def_28 (and .def_5548 (and .def_1808 (and .def_5773 (and .def_5751 (and .def_1807 .def_5776)))))))) (or .def_1808 .def_5764)) .def_5839))))))))))))))))))))))))))))))))))))))))))
The assertion is satisfied!
forward [1] times
backward [1] times, backtracks [0] times
