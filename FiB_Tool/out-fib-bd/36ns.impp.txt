Loading grammar file /home/spencerxiao/Experiments/tacas17/FiB_Tool/IMP_Program.cgt succesfully
verifying assertion: ((w >= z) & (a = b))
find an inductive invaraint  based on abstractions
invariant size: 85
interp: (let ((.def_47 (= turn 0))) (let ((.def_50 (= a b))) (let ((.def_2234 (= turn 5))) (let ((.def_2236 (not .def_2234))) (let ((.def_2402 (not (= turn 6)))) (let ((.def_4410 (= turn 7))) (let ((.def_5233 (<= 1 (+ z (* (- 1) w))))) (let ((.def_5235 (not .def_5233))) (let ((.def_10369 (and .def_47 .def_5235))) (let ((.def_10371 (not (and .def_50 .def_10369)))) (let ((.def_10377 (not (and .def_50 (not (and (and (and (not (and (not .def_4410) (and .def_2402 (and (<= j i) (and (= turn 4) .def_5235))))) (not (and .def_2402 (and .def_5235 (and (not (<= (+ a (+ (* (- 1) b) (+ (* (- 1) c) d))) (- 1))) (and (not (<= 1 (+ a (+ (* (- 1) b) (+ (* (- 1) c) d))))) (and .def_4410 (and (not .def_47) .def_2236)))))))) .def_10371) (not .def_10369))))))) (and (and .def_50 (not (and (and (or .def_4410 (and (not (= turn 3)) .def_2234)) (not (and .def_2236 (and (not (<= 1 (+ c (* (- 1) d)))) (not (<= (+ c (* (- 1) d)) (- 1))))))) .def_10377))) (not (and .def_5233 (and .def_10371 (and .def_5233 .def_10377))))))))))))))))
The assertion is satisfied!
forward [1] times
backward [1] times, backtracks [0] times
