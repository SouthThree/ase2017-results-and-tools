Loading grammar file /home/spencerxiao/Experiments/tacas17/FiB_Tool/IMP_Program.cgt succesfully
verifying assertion: ((i != m) | (x = (2 * y)))
find an inductive invaraint  based on abstractions
invariant size: 242
interp: (let ((.def_30 (+ x (* (- 2) y)))) (let ((.def_33 (<= m i))) (let ((.def_34 (not .def_33))) (let ((.def_213 (+ i (* (- 1) m)))) (let ((.def_736 (not (<= (- 2) .def_213)))) (let ((.def_744 (not (<= (- 3) .def_213)))) (let ((.def_1010 (not (<= (- 4) .def_213)))) (let ((.def_1103 (not (<= (- 5) .def_213)))) (let ((.def_1370 (<= .def_30 (- 1)))) (let ((.def_1373 (<= 1 .def_30))) (let ((.def_1764 (<= .def_213 (- 2)))) (let ((.def_1782 (not .def_1370))) (let ((.def_1783 (not .def_1373))) (let ((.def_2125 (not (<= .def_30 0)))) (let ((.def_2126 (not (<= 2 .def_30)))) (let ((.def_2207 (not (<= .def_213 (- 4))))) (let ((.def_2726 (not (<= .def_213 (- 5))))) (let ((.def_3079 (<= (to_real (- 1)) (to_real (+ x (* 2 (to_int (* (/ 1 2) (to_real (+ (* (- 1) x) (- 1))))))))))) (let ((.def_3137 (not (<= .def_213 (- 6))))) (let ((.def_3141 (not (and (<= (+ x (* (- 2) (to_int (* (/ 1 2) (to_real (+ x 1)))))) 0) (<= 0 (+ x (* (- 2) (to_int (* (/ 1 2) (to_real (+ x 1))))))))))) (let ((.def_3144 (not .def_3079))) (let ((.def_3269 (and (<= (- 1) (+ x (* (- 2) (to_int (* (/ 1 2) (to_real (+ 1 (+ x 1)))))))) (<= (+ x (* (- 2) (to_int (* (/ 1 2) (to_real (+ 1 (+ x 1))))))) (- 1))))) (let ((.def_3383 (<= .def_213 (- 7)))) (let ((.def_3384 (not .def_3383))) (let ((.def_3394 (<= (- 6) .def_213))) (let ((.def_3939 (not (<= .def_213 (- 8))))) (let ((.def_3959 (<= (- 7) .def_213))) (let ((.def_3960 (not .def_3959))) (let ((.def_5051 (not (<= (- 8) .def_213)))) (let ((.def_5495 (not (<= .def_213 (- 9))))) (let ((.def_6274 (not (<= .def_213 (- 10))))) (not (and (and (not (and .def_34 (and (not (<= (- 1) .def_213)) (not (and (and (or (and .def_3079 (and .def_3269 (and (and .def_3269 (and (not (and .def_2126 (and .def_2125 (and .def_1010 (and .def_3384 (and .def_3137 (and .def_736 (and .def_744 .def_3141)))))))) (not (and .def_2126 (and .def_1103 (and .def_1010 (and (not .def_3394) (and .def_5495 (and .def_3939 (and .def_6274 (and .def_2125 (and .def_744 (and .def_736 .def_3141))))))))))))) (not (and .def_2125 (and .def_3384 (and .def_2207 (and .def_3137 (and .def_2726 (and .def_5495 (and .def_3939 (and .def_2126 (and .def_736 (and .def_3141 (not (and (<= 0 (+ x (* 2 (to_int (* (/ 1 2) (to_real (* (- 1) x))))))) (<= (+ x (* 2 (to_int (* (/ 1 2) (to_real (* (- 1) x)))))) 0))))))))))))))))) (and (<= (to_real (+ x (* (- 2) (to_int (* (/ 1 2) (to_real (* 1 x))))))) (to_real 0)) (not (and (not (<= (to_real (- 3)) (to_real (+ x (* 2 (to_int (* (/ 1 2) (to_real (+ (* (- 1) x) (- 3)))))))))) (or (and .def_1783 (and (and (not (and .def_3383 .def_3959)) (not (and .def_3394 (not (and (and .def_744 (and .def_736 (and .def_1103 (and .def_1010 .def_1782)))) (and .def_1782 (and .def_744 (and .def_736 (and .def_1010 .def_1103))))))))) (not (and .def_3383 (not (and .def_1782 (and (not (<= .def_30 (- 2))) .def_5495))))))) (and .def_3384 (and .def_3137 (and .def_2726 (and .def_5495 (and .def_3939 (and .def_1782 (and .def_744 (and .def_736 .def_1783))))))))))))) (not (and .def_1783 (and .def_1782 (and .def_3384 (and .def_2207 (and (not (<= .def_213 (- 3))) (and .def_3137 (and .def_2726 (and .def_5495 (and .def_3144 .def_3939))))))))))) (not (and .def_3960 (and .def_5051 (and .def_6274 (and .def_1782 (and .def_2125 (and .def_2126 (and (not (= (+ x (* (- 2) (to_int (* (/ 1 2) (to_real (+ 1 (+ x 1))))))) (- 2))) (not (<= (to_real 0) (to_real (+ x (* 2 (to_int (* (/ 1 2) (to_real (* (- 1) x)))))))))))))))))))))) (and (or (<= .def_213 (- 1)) (and .def_33 (or .def_1764 (and .def_33 (or .def_1370 .def_1373))))) (not (and .def_3141 (and .def_34 (and .def_2125 (and .def_2126 (not .def_1764)))))))) (not (and .def_3960 (and .def_5051 (and (not (<= (- 9) .def_213)) (and (not (<= .def_213 (- 11))) (and .def_1782 (and .def_1783 (and (not (= (+ x (* (- 2) (to_int (* (/ 1 2) (to_real (+ x 1)))))) (- 1))) .def_3144)))))))))))))))))))))))))))))))))))))))))
The assertion is satisfied!
forward [16] times
backward [20] times, backtracks [4] times
