Loading grammar file /home/spencerxiao/Experiments/tacas17/FiB_Tool/IMP_Program.cgt succesfully
verifying assertion: (i = j)
find an inductive invaraint  based on abstractions
invariant size: 126
interp: (let ((.def_20 (= i j))) (let ((.def_25 (= b 1))) (let ((.def_37 (not .def_25))) (let ((.def_63 (= (+ i (* (- 1) j)) 1))) (let ((.def_121 (= (+ i (* (- 1) j)) (- 1)))) (let ((.def_358 (not .def_20))) (let ((.def_367 (<= (+ (* 2 k) (* (- 1) n)) 1))) (let ((.def_374 (not .def_63))) (let ((.def_676 (and .def_37 .def_63))) (let ((.def_1069 (not (<= (to_real 0) (to_real (+ n (* 2 (to_int (* (/ 1 2) (to_real (* (- 1) n))))))))))) (let ((.def_1077 (and .def_37 .def_374))) (let ((.def_1083 (not (<= (to_real (- 1)) (to_real (+ n (* 2 (to_int (* (/ 1 2) (to_real (+ (* (- 1) n) (- 1)))))))))))) (let ((.def_1084 (not (<= (to_real (+ n (* (- 2) (to_int (* (/ 1 2) (to_real (+ (* 1 n) 1))))))) (to_real (- 1)))))) (let ((.def_1641 (not (<= (to_real (+ n (* (- 2) (to_int (* (/ 1 2) (to_real (* 1 n))))))) (to_real 0))))) (let ((.def_1649 (and .def_25 .def_358))) (let ((.def_1677 (and (not (<= (+ i (* (- 1) j)) (- 1))) .def_374))) (not (or (and .def_358 (and (<= (+ (* 2 k) (* (- 1) n)) 0) (<= k (to_int (* (/ 1 2) (to_real (* 1 n))))))) (and (and (and (not (and .def_1069 (and (and .def_676 .def_1069) .def_1641))) (not (and .def_1069 (and .def_676 .def_1641)))) (not (and .def_25 (or (and .def_121 (and .def_1069 (and .def_1641 .def_1649))) (and .def_121 (and .def_1069 (and .def_1641 (and .def_1069 .def_1649)))))))) (and (and (not (and .def_37 (and .def_1077 (and .def_1083 (and .def_20 (not (and .def_367 (not (and .def_1084 (and .def_1083 (and .def_20 .def_1084))))))))))) (not (and .def_25 (not (and (and (not (and .def_1083 (and .def_1084 (and .def_20 (and (and .def_20 (and .def_25 .def_1083)) .def_1677))))) (not (and .def_1083 (and .def_20 (and .def_1677 (and .def_20 (and .def_1083 (and .def_25 .def_1084)))))))) (not (and .def_25 (and (not .def_367) (and .def_25 (and .def_20 .def_1083)))))))))) (not (and .def_1083 (and .def_1084 (and .def_37 (and .def_20 .def_1077)))))))))))))))))))))))))
The assertion is satisfied!
forward [3] times
backward [3] times, backtracks [0] times
