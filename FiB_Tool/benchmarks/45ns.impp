MODULE main
	int x;
	int y;
	int i;
	int j;
	int c;
	int d;
	int flag;

	int w;
	int z;

	int turn;

	assume(x == 0);
	assume(y == 0);
	assume(i == 0);
	assume(j == 0);
	assume(c == 0);
	assume(d == 1);
	assume(turn == 0);

	while(turn != 6){
		if(turn == 0){
			if(*){
				turn = 1;
			}
			else{
				turn = 2;
			}
		}
		else{
			skip;		
		}


		if(turn == 1){
			x = x + 1;
			y = y + 1;
			i = i + x;
			j = j + y;

			if(flag > 0){
				j = j + 1;
			}
			else{
				skip;
			}			

			if(*){
				turn = 1;
			}
			else{
				turn = 2;
			}
		}
		else{
			if(turn == 2){
				if(j >= i){
					x = y;
				}
				else{
					x = y + 1;
				}

				w = 1;
				z = 0;

				turn = 3;
			}
			else{
				skip;
			}
		}

		if(turn == 3){
			turn = 4;
		}
		else{
			if(turn == 4){
				if(w % 2 == 1){
					x = x + 1;
				}
				else{
					skip;
				}

				if(z % 2 == 0){
					y = y + 1;
				}
				else{
					skip;
				}
				
				if(*){
					turn = 4;
				}
				else{
					turn = 5;
				}
			}
			else{
				if(turn == 5){
					z = x + y;
					w = z + 1;

					if(*){
						turn = 3;
					}
					else{
						turn = 6;
					}
				}
				else{
					skip;
				}
			}
		}
	}

	assert(x == y);	

END MODULE
