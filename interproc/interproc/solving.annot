"solving.ml" 27 927 931 "solving.ml" 27 927 945
type(
  fmt:Format.formatter ->
  output:(Spl_syn.point, int, 'a Apron.Abstract1.t, unit) Fixpoint.output
         option ->
  debug:int ->
  graph:Equation.graph ->
  man:'a Apron.Manager.t ->
  abstract_init:(Spl_syn.point -> 'a Apron.Abstract1.t) ->
  apply:(Equation.graph ->
         output:(Spl_syn.point, int, 'a Apron.Abstract1.t, unit)
                Fixpoint.output option ->
         'a Apron.Manager.t ->
         int -> 'a Apron.Abstract1.t array -> unit * 'a Apron.Abstract1.t) ->
  (Spl_syn.point, int, 'a Apron.Abstract1.t, unit) Fixpoint.manager
)
ident(
  def make_fpmanager "solving.ml" 103 3641 3641 "solving.ml" 1 0 -1
)
"solving.ml" 28 946 952 "solving.ml" 28 946 955
type(
  Format.formatter
)
ident(
  def fmt "solving.ml" 29 976 980 "solving.ml" 100 3573 3576
)
"solving.ml" 29 976 982 "solving.ml" 29 976 988
type(
  (Spl_syn.point, int, 'a Apron.Abstract1.t, unit) Fixpoint.output option
)
ident(
  def output "solving.ml" 30 1064 1068 "solving.ml" 100 3573 3576
)
"solving.ml" 30 1064 1070 "solving.ml" 30 1064 1075
type(
  int
)
ident(
  def debug "solving.ml" 31 1081 1085 "solving.ml" 100 3573 3576
)
"solving.ml" 31 1081 1087 "solving.ml" 31 1081 1092
type(
  Equation.graph
)
ident(
  def graph "solving.ml" 32 1110 1114 "solving.ml" 100 3573 3576
)
"solving.ml" 32 1110 1116 "solving.ml" 32 1110 1119
type(
  'a Apron.Manager.t
)
ident(
  def man "solving.ml" 33 1147 1151 "solving.ml" 100 3573 3576
)
"solving.ml" 33 1147 1153 "solving.ml" 33 1147 1166
type(
  Spl_syn.point -> 'a Apron.Abstract1.t
)
ident(
  def abstract_init "solving.ml" 34 1208 1212 "solving.ml" 100 3573 3576
)
"solving.ml" 34 1208 1214 "solving.ml" 34 1208 1219
type(
  Equation.graph ->
  output:(Spl_syn.point, int, 'a Apron.Abstract1.t, unit) Fixpoint.output
         option ->
  'a Apron.Manager.t ->
  int -> 'a Apron.Abstract1.t array -> unit * 'a Apron.Abstract1.t
)
ident(
  def apply "solving.ml" 39 1434 1438 "solving.ml" 100 3573 3576
)
"solving.ml" 42 1516 1522 "solving.ml" 42 1516 1526
type(
  Equation.info
)
ident(
  def info "solving.ml" 43 1552 1554 "solving.ml" 100 3573 3576
)
"solving.ml" 42 1516 1529 "solving.ml" 42 1516 1542
type(
  Equation.graph -> Equation.info
)
ident(
  ext_ref PSHGraph.info
)
"solving.ml" 42 1516 1543 "solving.ml" 42 1516 1548
type(
  Equation.graph
)
ident(
  int_ref graph "solving.ml" 31 1081 1087 "solving.ml" 31 1081 1092
)
"solving.ml" 42 1516 1529 "solving.ml" 42 1516 1548
call(
  stack
)
type(
  Equation.info
)
"solving.ml" 45 1584 1616 "solving.ml" 45 1584 1619
type(
  Spl_syn.point
)
ident(
  def vtx "solving.ml" 46 1623 1629 "solving.ml" 46 1623 1696
)
"solving.ml" 46 1623 1629 "solving.ml" 46 1623 1651
type(
  'a Apron.Manager.t -> Apron.Environment.t -> 'a Apron.Abstract1.t
)
ident(
  ext_ref Apron.Abstract1.bottom
)
"solving.ml" 46 1623 1652 "solving.ml" 46 1623 1655
type(
  'a Apron.Manager.t
)
ident(
  int_ref man "solving.ml" 32 1110 1116 "solving.ml" 32 1110 1119
)
"solving.ml" 46 1623 1657 "solving.ml" 46 1623 1668
type(
  (Spl_syn.point, Apron.Environment.t) Hashhe.t ->
  Spl_syn.point -> Apron.Environment.t
)
ident(
  ext_ref Hashhe.find
)
"solving.ml" 46 1623 1669 "solving.ml" 46 1623 1673
type(
  Equation.info
)
ident(
  int_ref info "solving.ml" 42 1516 1522 "solving.ml" 42 1516 1526
)
"solving.ml" 46 1623 1669 "solving.ml" 46 1623 1691
type(
  (Spl_syn.point, Apron.Environment.t) Hashhe.t
)
"solving.ml" 46 1623 1692 "solving.ml" 46 1623 1695
type(
  Spl_syn.point
)
ident(
  int_ref vtx "solving.ml" 45 1584 1616 "solving.ml" 45 1584 1619
)
"solving.ml" 46 1623 1656 "solving.ml" 46 1623 1696
call(
  stack
)
type(
  Apron.Environment.t
)
"solving.ml" 46 1623 1629 "solving.ml" 46 1623 1696
type(
  'a Apron.Abstract1.t
)
"solving.ml" 45 1584 1606 "solving.ml" 47 1697 1704
type(
  Spl_syn.point -> 'a Apron.Abstract1.t
)
"solving.ml" 48 1706 1741 "solving.ml" 48 1706 1744
type(
  Spl_syn.point
)
ident(
  def vtx "solving.ml" 48 1706 1745 "solving.ml" 48 1706 1754
)
"solving.ml" 48 1706 1745 "solving.ml" 48 1706 1748
type(
  'a Apron.Abstract1.t
)
ident(
  def abs "solving.ml" 48 1706 1752 "solving.ml" 48 1706 1754
)
"solving.ml" 48 1706 1752 "solving.ml" 48 1706 1754
type(
  unit
)
"solving.ml" 48 1706 1731 "solving.ml" 50 1804 1811
type(
  Spl_syn.point -> 'a Apron.Abstract1.t -> unit
)
"solving.ml" 51 1813 1848 "solving.ml" 51 1813 1851
type(
  Spl_syn.point
)
ident(
  def vtx "solving.ml" 51 1813 1852 "solving.ml" 52 1859 1898
)
"solving.ml" 51 1813 1852 "solving.ml" 51 1813 1855
type(
  'a Apron.Abstract1.t
)
ident(
  def abs "solving.ml" 52 1859 1865 "solving.ml" 52 1859 1898
)
"solving.ml" 52 1859 1865 "solving.ml" 52 1859 1890
type(
  'a Apron.Manager.t -> 'a Apron.Abstract1.t -> bool
)
ident(
  ext_ref Apron.Abstract1.is_bottom
)
"solving.ml" 52 1859 1891 "solving.ml" 52 1859 1894
type(
  'a Apron.Manager.t
)
ident(
  int_ref man "solving.ml" 32 1110 1116 "solving.ml" 32 1110 1119
)
"solving.ml" 52 1859 1895 "solving.ml" 52 1859 1898
type(
  'a Apron.Abstract1.t
)
ident(
  int_ref abs "solving.ml" 51 1813 1852 "solving.ml" 51 1813 1855
)
"solving.ml" 52 1859 1865 "solving.ml" 52 1859 1898
call(
  tail
)
type(
  bool
)
"solving.ml" 51 1813 1838 "solving.ml" 53 1899 1906
type(
  Spl_syn.point -> 'a Apron.Abstract1.t -> bool
)
"solving.ml" 54 1908 1940 "solving.ml" 54 1908 1943
type(
  Spl_syn.point
)
ident(
  def vtx "solving.ml" 54 1908 1944 "solving.ml" 55 1957 1999
)
"solving.ml" 54 1908 1944 "solving.ml" 54 1908 1948
type(
  'a Apron.Abstract1.t
)
ident(
  def abs1 "solving.ml" 54 1908 1949 "solving.ml" 55 1957 1999
)
"solving.ml" 54 1908 1949 "solving.ml" 54 1908 1953
type(
  'a Apron.Abstract1.t
)
ident(
  def abs2 "solving.ml" 55 1957 1963 "solving.ml" 55 1957 1999
)
"solving.ml" 55 1957 1963 "solving.ml" 55 1957 1985
type(
  'a Apron.Manager.t -> 'a Apron.Abstract1.t -> 'a Apron.Abstract1.t -> bool
)
ident(
  ext_ref Apron.Abstract1.is_leq
)
"solving.ml" 55 1957 1986 "solving.ml" 55 1957 1989
type(
  'a Apron.Manager.t
)
ident(
  int_ref man "solving.ml" 32 1110 1116 "solving.ml" 32 1110 1119
)
"solving.ml" 55 1957 1990 "solving.ml" 55 1957 1994
type(
  'a Apron.Abstract1.t
)
ident(
  int_ref abs1 "solving.ml" 54 1908 1944 "solving.ml" 54 1908 1948
)
"solving.ml" 55 1957 1995 "solving.ml" 55 1957 1999
type(
  'a Apron.Abstract1.t
)
ident(
  int_ref abs2 "solving.ml" 54 1908 1949 "solving.ml" 54 1908 1953
)
"solving.ml" 55 1957 1963 "solving.ml" 55 1957 1999
type(
  bool
)
"solving.ml" 54 1908 1930 "solving.ml" 56 2000 2007
type(
  Spl_syn.point -> 'a Apron.Abstract1.t -> 'a Apron.Abstract1.t -> bool
)
"solving.ml" 57 2009 2039 "solving.ml" 57 2009 2042
type(
  Spl_syn.point
)
ident(
  def vtx "solving.ml" 57 2009 2043 "solving.ml" 58 2056 2096
)
"solving.ml" 57 2009 2043 "solving.ml" 57 2009 2047
type(
  'a Apron.Abstract1.t
)
ident(
  def abs1 "solving.ml" 57 2009 2048 "solving.ml" 58 2056 2096
)
"solving.ml" 57 2009 2048 "solving.ml" 57 2009 2052
type(
  'a Apron.Abstract1.t
)
ident(
  def abs2 "solving.ml" 58 2056 2062 "solving.ml" 58 2056 2096
)
"solving.ml" 58 2056 2062 "solving.ml" 58 2056 2082
type(
  'a Apron.Manager.t ->
  'a Apron.Abstract1.t -> 'a Apron.Abstract1.t -> 'a Apron.Abstract1.t
)
ident(
  ext_ref Apron.Abstract1.join
)
"solving.ml" 58 2056 2083 "solving.ml" 58 2056 2086
type(
  'a Apron.Manager.t
)
ident(
  int_ref man "solving.ml" 32 1110 1116 "solving.ml" 32 1110 1119
)
"solving.ml" 58 2056 2087 "solving.ml" 58 2056 2091
type(
  'a Apron.Abstract1.t
)
ident(
  int_ref abs1 "solving.ml" 57 2009 2043 "solving.ml" 57 2009 2047
)
"solving.ml" 58 2056 2092 "solving.ml" 58 2056 2096
type(
  'a Apron.Abstract1.t
)
ident(
  int_ref abs2 "solving.ml" 57 2009 2048 "solving.ml" 57 2009 2052
)
"solving.ml" 58 2056 2062 "solving.ml" 58 2056 2096
type(
  'a Apron.Abstract1.t
)
"solving.ml" 57 2009 2029 "solving.ml" 59 2097 2104
type(
  Spl_syn.point ->
  'a Apron.Abstract1.t -> 'a Apron.Abstract1.t -> 'a Apron.Abstract1.t
)
"solving.ml" 60 2106 2141 "solving.ml" 60 2106 2144
type(
  Spl_syn.point
)
ident(
  def vtx "solving.ml" 60 2106 2145 "solving.ml" 61 2153 2210
)
"solving.ml" 60 2106 2145 "solving.ml" 60 2106 2149
type(
  'a Apron.Abstract1.t list
)
ident(
  def labs "solving.ml" 61 2153 2159 "solving.ml" 61 2153 2210
)
"solving.ml" 61 2153 2159 "solving.ml" 61 2153 2185
type(
  'a Apron.Manager.t -> 'a Apron.Abstract1.t array -> 'a Apron.Abstract1.t
)
ident(
  ext_ref Apron.Abstract1.join_array
)
"solving.ml" 61 2153 2186 "solving.ml" 61 2153 2189
type(
  'a Apron.Manager.t
)
ident(
  int_ref man "solving.ml" 32 1110 1116 "solving.ml" 32 1110 1119
)
"solving.ml" 61 2153 2191 "solving.ml" 61 2153 2204
type(
  'a Apron.Abstract1.t list -> 'a Apron.Abstract1.t array
)
ident(
  ext_ref Array.of_list
)
"solving.ml" 61 2153 2205 "solving.ml" 61 2153 2209
type(
  'a Apron.Abstract1.t list
)
ident(
  int_ref labs "solving.ml" 60 2106 2145 "solving.ml" 60 2106 2149
)
"solving.ml" 61 2153 2190 "solving.ml" 61 2153 2210
call(
  stack
)
type(
  'a Apron.Abstract1.t array
)
"solving.ml" 61 2153 2159 "solving.ml" 61 2153 2210
type(
  'a Apron.Abstract1.t
)
"solving.ml" 60 2106 2131 "solving.ml" 62 2211 2218
type(
  Spl_syn.point -> 'a Apron.Abstract1.t list -> 'a Apron.Abstract1.t
)
"solving.ml" 63 2220 2241 "solving.ml" 63 2220 2245
type(
  (Spl_syn.point ->
   'a Apron.Abstract1.t -> 'a Apron.Abstract1.t -> 'a Apron.Abstract1.t)
  option
)
"solving.ml" 64 2247 2281 "solving.ml" 64 2247 2284
type(
  Spl_syn.point
)
ident(
  def vtx "solving.ml" 64 2247 2285 "solving.ml" 65 2298 2342
)
"solving.ml" 64 2247 2285 "solving.ml" 64 2247 2289
type(
  'a Apron.Abstract1.t
)
ident(
  def abs1 "solving.ml" 64 2247 2290 "solving.ml" 65 2298 2342
)
"solving.ml" 64 2247 2290 "solving.ml" 64 2247 2294
type(
  'a Apron.Abstract1.t
)
ident(
  def abs2 "solving.ml" 65 2298 2304 "solving.ml" 65 2298 2342
)
"solving.ml" 65 2298 2304 "solving.ml" 65 2298 2328
type(
  'a Apron.Manager.t ->
  'a Apron.Abstract1.t -> 'a Apron.Abstract1.t -> 'a Apron.Abstract1.t
)
ident(
  ext_ref Apron.Abstract1.widening
)
"solving.ml" 65 2298 2329 "solving.ml" 65 2298 2332
type(
  'a Apron.Manager.t
)
ident(
  int_ref man "solving.ml" 32 1110 1116 "solving.ml" 32 1110 1119
)
"solving.ml" 65 2298 2333 "solving.ml" 65 2298 2337
type(
  'a Apron.Abstract1.t
)
ident(
  int_ref abs1 "solving.ml" 64 2247 2285 "solving.ml" 64 2247 2289
)
"solving.ml" 65 2298 2338 "solving.ml" 65 2298 2342
type(
  'a Apron.Abstract1.t
)
ident(
  int_ref abs2 "solving.ml" 64 2247 2290 "solving.ml" 64 2247 2294
)
"solving.ml" 65 2298 2304 "solving.ml" 65 2298 2342
type(
  'a Apron.Abstract1.t
)
"solving.ml" 64 2247 2271 "solving.ml" 66 2343 2350
type(
  Spl_syn.point ->
  'a Apron.Abstract1.t -> 'a Apron.Abstract1.t -> 'a Apron.Abstract1.t
)
"solving.ml" 68 2390 2419 "solving.ml" 68 2390 2432
type(
  Spl_syn.point -> 'a Apron.Abstract1.t
)
ident(
  int_ref abstract_init "solving.ml" 33 1147 1153 "solving.ml" 33 1147 1166
)
"solving.ml" 69 2434 2468 "solving.ml" 69 2434 2473
type(
  int
)
ident(
  def hedge "solving.ml" 69 2434 2477 "solving.ml" 69 2434 2479
)
"solving.ml" 69 2434 2477 "solving.ml" 69 2434 2479
type(
  unit
)
"solving.ml" 69 2434 2458 "solving.ml" 69 2434 2483
type(
  int -> unit
)
"solving.ml" 71 2519 2550 "solving.ml" 71 2519 2555
type(
  int
)
ident(
  def hedge "solving.ml" 71 2519 2556 "solving.ml" 72 2562 2600
)
"solving.ml" 71 2519 2556 "solving.ml" 71 2519 2558
type(
  'a Apron.Abstract1.t array
)
ident(
  def tx "solving.ml" 72 2562 2568 "solving.ml" 72 2562 2600
)
"solving.ml" 72 2562 2568 "solving.ml" 72 2562 2573
type(
  Equation.graph ->
  output:(Spl_syn.point, int, 'a Apron.Abstract1.t, unit) Fixpoint.output
         option ->
  'a Apron.Manager.t ->
  int -> 'a Apron.Abstract1.t array -> unit * 'a Apron.Abstract1.t
)
ident(
  int_ref apply "solving.ml" 34 1208 1214 "solving.ml" 34 1208 1219
)
"solving.ml" 72 2562 2574 "solving.ml" 72 2562 2579
type(
  Equation.graph
)
ident(
  int_ref graph "solving.ml" 31 1081 1087 "solving.ml" 31 1081 1092
)
"solving.ml" 72 2562 2581 "solving.ml" 72 2562 2587
type(
  (Spl_syn.point, int, 'a Apron.Abstract1.t, unit) Fixpoint.output option
)
ident(
  int_ref output "solving.ml" 29 976 982 "solving.ml" 29 976 988
)
"solving.ml" 72 2562 2588 "solving.ml" 72 2562 2591
type(
  'a Apron.Manager.t
)
ident(
  int_ref man "solving.ml" 32 1110 1116 "solving.ml" 32 1110 1119
)
"solving.ml" 72 2562 2592 "solving.ml" 72 2562 2597
type(
  int
)
ident(
  int_ref hedge "solving.ml" 71 2519 2550 "solving.ml" 71 2519 2555
)
"solving.ml" 72 2562 2598 "solving.ml" 72 2562 2600
type(
  'a Apron.Abstract1.t array
)
ident(
  int_ref tx "solving.ml" 71 2519 2556 "solving.ml" 71 2519 2558
)
"solving.ml" 72 2562 2568 "solving.ml" 72 2562 2600
call(
  tail
)
type(
  unit * 'a Apron.Abstract1.t
)
"solving.ml" 71 2519 2540 "solving.ml" 73 2601 2608
type(
  int -> 'a Apron.Abstract1.t array -> unit * 'a Apron.Abstract1.t
)
"solving.ml" 75 2639 2665 "solving.ml" 75 2639 2685
type(
  Format.formatter -> Spl_syn.point -> unit
)
ident(
  ext_ref PSpl_syn.print_point
)
"solving.ml" 76 2687 2712 "solving.ml" 76 2687 2724
type(
  Format.formatter -> int -> unit
)
ident(
  ext_ref Format.pp_print_int
)
"solving.ml" 77 2726 2756 "solving.ml" 77 2726 2777
type(
  Format.formatter -> 'a Apron.Abstract1.t -> unit
)
ident(
  ext_ref Apron.Abstract1.print
)
"solving.ml" 78 2779 2814 "solving.ml" 78 2779 2817
type(
  Format.formatter
)
ident(
  def fmt "solving.ml" 78 2779 2818 "solving.ml" 78 2779 2848
)
"solving.ml" 78 2779 2818 "solving.ml" 78 2779 2820
type(
  unit
)
"solving.ml" 78 2779 2824 "solving.ml" 78 2779 2839
type(
  Format.formatter -> string -> unit
)
ident(
  ext_ref Format.pp_print_string
)
"solving.ml" 78 2779 2840 "solving.ml" 78 2779 2843
type(
  Format.formatter
)
ident(
  int_ref fmt "solving.ml" 78 2779 2814 "solving.ml" 78 2779 2817
)
"solving.ml" 78 2779 2844 "solving.ml" 78 2779 2848
type(
  string
)
"solving.ml" 78 2779 2824 "solving.ml" 78 2779 2848
call(
  tail
)
type(
  unit
)
"solving.ml" 78 2779 2804 "solving.ml" 78 2779 2852
type(
  Format.formatter -> unit -> unit
)
"solving.ml" 80 2881 2907 "solving.ml" 80 2881 2912
type(
  bool
)
"solving.ml" 82 2941 2966 "solving.ml" 82 2941 2969
type(
  Format.formatter
)
ident(
  int_ref fmt "solving.ml" 28 946 952 "solving.ml" 28 946 955
)
"solving.ml" 83 2971 2999 "solving.ml" 83 2971 3004
type(
  int
)
ident(
  int_ref debug "solving.ml" 30 1064 1070 "solving.ml" 30 1064 1075
)
"solving.ml" 83 2971 3004 "solving.ml" 83 2971 3006
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( >= )
)
"solving.ml" 83 2971 3006 "solving.ml" 83 2971 3007
type(
  int
)
"solving.ml" 83 2971 2999 "solving.ml" 83 2971 3007
type(
  bool
)
"solving.ml" 84 3009 3038 "solving.ml" 84 3009 3043
type(
  int
)
ident(
  int_ref debug "solving.ml" 30 1064 1070 "solving.ml" 30 1064 1075
)
"solving.ml" 84 3009 3043 "solving.ml" 84 3009 3045
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( >= )
)
"solving.ml" 84 3009 3045 "solving.ml" 84 3009 3046
type(
  int
)
"solving.ml" 84 3009 3038 "solving.ml" 84 3009 3046
type(
  bool
)
"solving.ml" 85 3048 3072 "solving.ml" 85 3048 3077
type(
  int
)
ident(
  int_ref debug "solving.ml" 30 1064 1070 "solving.ml" 30 1064 1075
)
"solving.ml" 85 3048 3077 "solving.ml" 85 3048 3079
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( >= )
)
"solving.ml" 85 3048 3079 "solving.ml" 85 3048 3080
type(
  int
)
"solving.ml" 85 3048 3072 "solving.ml" 85 3048 3080
type(
  bool
)
"solving.ml" 86 3082 3107 "solving.ml" 86 3082 3112
type(
  int
)
ident(
  int_ref debug "solving.ml" 30 1064 1070 "solving.ml" 30 1064 1075
)
"solving.ml" 86 3082 3112 "solving.ml" 86 3082 3114
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( >= )
)
"solving.ml" 86 3082 3114 "solving.ml" 86 3082 3115
type(
  int
)
"solving.ml" 86 3082 3107 "solving.ml" 86 3082 3115
type(
  bool
)
"solving.ml" 87 3117 3144 "solving.ml" 87 3117 3149
type(
  int
)
ident(
  int_ref debug "solving.ml" 30 1064 1070 "solving.ml" 30 1064 1075
)
"solving.ml" 87 3117 3149 "solving.ml" 87 3117 3151
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( >= )
)
"solving.ml" 87 3117 3151 "solving.ml" 87 3117 3152
type(
  int
)
"solving.ml" 87 3117 3144 "solving.ml" 87 3117 3152
type(
  bool
)
"solving.ml" 88 3154 3185 "solving.ml" 88 3154 3190
type(
  int
)
ident(
  int_ref debug "solving.ml" 30 1064 1070 "solving.ml" 30 1064 1075
)
"solving.ml" 88 3154 3190 "solving.ml" 88 3154 3192
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( >= )
)
"solving.ml" 88 3154 3192 "solving.ml" 88 3154 3193
type(
  int
)
"solving.ml" 88 3154 3185 "solving.ml" 88 3154 3193
type(
  bool
)
"solving.ml" 90 3217 3240 "solving.ml" 90 3217 3241
type(
  Format.formatter option ref -> Format.formatter option
)
ident(
  ext_ref Pervasives.( ! )
)
"solving.ml" 90 3217 3241 "solving.ml" 90 3217 3255
type(
  Format.formatter option ref
)
ident(
  ext_ref Option.dot_fmt
)
"solving.ml" 90 3217 3240 "solving.ml" 90 3217 3255
type(
  Format.formatter option
)
"solving.ml" 91 3257 3281 "solving.ml" 91 3257 3301
type(
  Format.formatter -> Spl_syn.point -> unit
)
ident(
  ext_ref PSpl_syn.print_point
)
"solving.ml" 92 3303 3326 "solving.ml" 92 3303 3338
type(
  Format.formatter -> int -> unit
)
ident(
  ext_ref Format.pp_print_int
)
"solving.ml" 93 3340 3368 "solving.ml" 93 3340 3388
type(
  Format.formatter -> Spl_syn.point -> unit
)
ident(
  ext_ref PSpl_syn.print_point
)
"solving.ml" 94 3390 3428 "solving.ml" 94 3390 3431
type(
  Format.formatter
)
ident(
  def fmt "solving.ml" 94 3390 3432 "solving.ml" 98 3530 3563
)
"solving.ml" 94 3390 3432 "solving.ml" 94 3390 3437
type(
  Equation.hedge
)
ident(
  def hedge "solving.ml" 95 3441 3447 "solving.ml" 98 3530 3563
)
"solving.ml" 95 3441 3451 "solving.ml" 95 3441 3459
type(
  Equation.transfer
)
ident(
  def transfer "solving.ml" 96 3496 3502 "solving.ml" 98 3530 3563
)
"solving.ml" 95 3441 3462 "solving.ml" 95 3441 3480
type(
  Equation.graph -> Equation.hedge -> Equation.transfer
)
ident(
  ext_ref PSHGraph.attrhedge
)
"solving.ml" 95 3441 3481 "solving.ml" 95 3441 3486
type(
  Equation.graph
)
ident(
  int_ref graph "solving.ml" 31 1081 1087 "solving.ml" 31 1081 1092
)
"solving.ml" 95 3441 3487 "solving.ml" 95 3441 3492
type(
  Equation.hedge
)
ident(
  int_ref hedge "solving.ml" 94 3390 3432 "solving.ml" 94 3390 3437
)
"solving.ml" 95 3441 3462 "solving.ml" 95 3441 3492
call(
  stack
)
type(
  Equation.transfer
)
"solving.ml" 96 3496 3502 "solving.ml" 96 3496 3509
type(
  Format.formatter ->
  (Equation.hedge ->
   (Format.formatter -> Equation.transfer -> unit) ->
   Equation.transfer -> unit, Format.formatter, unit)
  format ->
  Equation.hedge ->
  (Format.formatter -> Equation.transfer -> unit) ->
  Equation.transfer -> unit
)
ident(
  ext_ref Format.fprintf
)
"solving.ml" 96 3496 3510 "solving.ml" 96 3496 3513
type(
  Format.formatter
)
ident(
  int_ref fmt "solving.ml" 94 3390 3428 "solving.ml" 94 3390 3431
)
"solving.ml" 96 3496 3514 "solving.ml" 96 3496 3522
type(
  (Equation.hedge ->
   (Format.formatter -> Equation.transfer -> unit) ->
   Equation.transfer -> unit, Format.formatter, unit)
  format
)
"solving.ml" 97 3523 3524 "solving.ml" 97 3523 3529
type(
  Equation.hedge
)
ident(
  int_ref hedge "solving.ml" 94 3390 3432 "solving.ml" 94 3390 3437
)
"solving.ml" 98 3530 3531 "solving.ml" 98 3530 3554
type(
  Format.formatter -> Equation.transfer -> unit
)
ident(
  ext_ref Equation.print_transfer
)
"solving.ml" 98 3530 3555 "solving.ml" 98 3530 3563
type(
  Equation.transfer
)
ident(
  int_ref transfer "solving.ml" 95 3441 3451 "solving.ml" 95 3441 3459
)
"solving.ml" 96 3496 3502 "solving.ml" 98 3530 3563
call(
  tail
)
type(
  unit
)
"solving.ml" 95 3441 3447 "solving.ml" 98 3530 3563
type(
  unit
)
"solving.ml" 94 3390 3418 "solving.ml" 99 3564 3571
type(
  Format.formatter -> Equation.hedge -> unit
)
"solving.ml" 43 1552 1554 "solving.ml" 100 3573 3576
type(
  (Spl_syn.point, int, 'a Apron.Abstract1.t, unit) Fixpoint.manager
)
"solving.ml" 42 1516 1518 "solving.ml" 100 3573 3576
type(
  (Spl_syn.point, int, 'a Apron.Abstract1.t, unit) Fixpoint.manager
)
type(
  (Spl_syn.point, int, 'a Apron.Abstract1.t, unit) Fixpoint.manager
)
"solving.ml" 103 3641 3645 "solving.ml" 103 3641 3661
type(
  (Spl_syn.point, int, 'a, 'b, Equation.info) PSHGraph.t ->
  'abstract Apron.Manager.t ->
  (Spl_syn.point, int, 'abstract Apron.Abstract1.t, unit) Fixpoint.output
)
ident(
  def make_emptyoutput "solving.ml" 123 4272 4272 "solving.ml" 1 0 -1
)
"solving.ml" 104 3662 3665 "solving.ml" 104 3662 3670
type(
  (Spl_syn.point, int, 'a, 'b, Equation.info) PSHGraph.t
)
ident(
  def graph "solving.ml" 105 3714 3716 "solving.ml" 121 4262 4270
)
"solving.ml" 105 3714 3717 "solving.ml" 105 3714 3724
type(
  'abstract Apron.Manager.t
)
ident(
  def manager "solving.ml" 106 3754 3756 "solving.ml" 121 4262 4270
)
"solving.ml" 109 3835 3841 "solving.ml" 109 3835 3845
type(
  Equation.info
)
ident(
  def info "solving.ml" 110 3871 3873 "solving.ml" 121 4262 4270
)
"solving.ml" 109 3835 3848 "solving.ml" 109 3835 3861
type(
  (Spl_syn.point, int, 'a, 'b, Equation.info) PSHGraph.t -> Equation.info
)
ident(
  ext_ref PSHGraph.info
)
"solving.ml" 109 3835 3862 "solving.ml" 109 3835 3867
type(
  (Spl_syn.point, int, 'a, 'b, Equation.info) PSHGraph.t
)
ident(
  int_ref graph "solving.ml" 104 3662 3665 "solving.ml" 104 3662 3670
)
"solving.ml" 109 3835 3848 "solving.ml" 109 3835 3867
call(
  stack
)
type(
  Equation.info
)
"solving.ml" 110 3871 3873 "solving.ml" 110 3871 3885
type(
  (Spl_syn.point, int, 'a, 'b, Equation.info) PSHGraph.t ->
  (Spl_syn.point -> 'a -> 'abstract Apron.Abstract1.t) ->
  (int -> 'b -> unit) ->
  (Equation.info -> Fixpoint.stat) ->
  (Spl_syn.point, int, 'abstract Apron.Abstract1.t, unit) Fixpoint.output
)
ident(
  ext_ref PSHGraph.map
)
"solving.ml" 110 3871 3886 "solving.ml" 110 3871 3891
type(
  (Spl_syn.point, int, 'a, 'b, Equation.info) PSHGraph.t
)
ident(
  int_ref graph "solving.ml" 104 3662 3665 "solving.ml" 104 3662 3670
)
"solving.ml" 111 3892 3907 "solving.ml" 111 3892 3913
type(
  Spl_syn.point
)
ident(
  def vertex "solving.ml" 111 3892 3914 "solving.ml" 112 3922 4002
)
"solving.ml" 111 3892 3914 "solving.ml" 111 3892 3918
type(
  'a
)
ident(
  def attr "solving.ml" 112 3922 3928 "solving.ml" 112 3922 4002
)
"solving.ml" 112 3922 3928 "solving.ml" 112 3922 3950
type(
  'abstract Apron.Manager.t ->
  Apron.Environment.t -> 'abstract Apron.Abstract1.t
)
ident(
  ext_ref Apron.Abstract1.bottom
)
"solving.ml" 112 3922 3951 "solving.ml" 112 3922 3958
type(
  'abstract Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 105 3714 3717 "solving.ml" 105 3714 3724
)
"solving.ml" 112 3922 3960 "solving.ml" 112 3922 3971
type(
  (Spl_syn.point, Apron.Environment.t) Hashhe.t ->
  Spl_syn.point -> Apron.Environment.t
)
ident(
  ext_ref Hashhe.find
)
"solving.ml" 112 3922 3972 "solving.ml" 112 3922 3976
type(
  Equation.info
)
ident(
  int_ref info "solving.ml" 109 3835 3841 "solving.ml" 109 3835 3845
)
"solving.ml" 112 3922 3972 "solving.ml" 112 3922 3994
type(
  (Spl_syn.point, Apron.Environment.t) Hashhe.t
)
"solving.ml" 112 3922 3995 "solving.ml" 112 3922 4001
type(
  Spl_syn.point
)
ident(
  int_ref vertex "solving.ml" 111 3892 3907 "solving.ml" 111 3892 3913
)
"solving.ml" 112 3922 3959 "solving.ml" 112 3922 4002
call(
  stack
)
type(
  Apron.Environment.t
)
"solving.ml" 112 3922 3928 "solving.ml" 112 3922 4002
type(
  'abstract Apron.Abstract1.t
)
"solving.ml" 111 3892 3896 "solving.ml" 113 4003 4011
type(
  Spl_syn.point -> 'a -> 'abstract Apron.Abstract1.t
)
"solving.ml" 114 4012 4027 "solving.ml" 114 4012 4032
type(
  int
)
ident(
  def hedge "solving.ml" 114 4012 4033 "solving.ml" 114 4012 4042
)
"solving.ml" 114 4012 4033 "solving.ml" 114 4012 4036
type(
  'b
)
ident(
  def arc "solving.ml" 114 4012 4040 "solving.ml" 114 4012 4042
)
"solving.ml" 114 4012 4040 "solving.ml" 114 4012 4042
type(
  unit
)
"solving.ml" 114 4012 4016 "solving.ml" 114 4012 4047
type(
  int -> 'b -> unit
)
"solving.ml" 115 4048 4063 "solving.ml" 115 4048 4067
type(
  Equation.info
)
ident(
  def info "solving.ml" 116 4071 4077 "solving.ml" 120 4254 4261
)
"solving.ml" 117 4079 4096 "solving.ml" 117 4079 4099
type(
  float
)
"solving.ml" 118 4101 4154 "solving.ml" 118 4101 4155
type(
  int
)
"solving.ml" 118 4101 4164 "solving.ml" 118 4101 4169
type(
  bool
)
"solving.ml" 118 4101 4149 "solving.ml" 118 4101 4171
type(
  Fixpoint.stat_iteration
)
"solving.ml" 118 4101 4173 "solving.ml" 118 4101 4175
type(
  (Fixpoint.stat_iteration, unit) Ilist.el list
)
"solving.ml" 118 4101 4123 "solving.ml" 118 4101 4175
type(
  (Fixpoint.stat_iteration, unit) Ilist.t
)
"solving.ml" 119 4177 4231 "solving.ml" 119 4177 4232
type(
  int
)
"solving.ml" 119 4177 4241 "solving.ml" 119 4177 4246
type(
  bool
)
"solving.ml" 119 4177 4226 "solving.ml" 119 4177 4248
type(
  Fixpoint.stat_iteration
)
"solving.ml" 119 4177 4250 "solving.ml" 119 4177 4252
type(
  (Fixpoint.stat_iteration, unit) Ilist.el list
)
"solving.ml" 119 4177 4200 "solving.ml" 119 4177 4252
type(
  (Fixpoint.stat_iteration, unit) Ilist.t
)
"solving.ml" 116 4071 4077 "solving.ml" 120 4254 4261
type(
  Fixpoint.stat
)
"solving.ml" 115 4048 4052 "solving.ml" 121 4262 4270
type(
  Equation.info -> Fixpoint.stat
)
"solving.ml" 110 3871 3873 "solving.ml" 121 4262 4270
call(
  tail
)
type(
  (Spl_syn.point, int, 'abstract Apron.Abstract1.t, unit) Fixpoint.output
)
"solving.ml" 109 3835 3837 "solving.ml" 121 4262 4270
type(
  (Spl_syn.point, int, 'abstract Apron.Abstract1.t, unit) Fixpoint.output
)
type(
  (Spl_syn.point, int, 'abstract Apron.Abstract1.t, unit) Fixpoint.output
)
"solving.ml" 125 4280 4284 "solving.ml" 125 4280 4303
type(
  (Apron.Var.t -> Apron.Environment.typvar) ->
  Apron.Var.t array -> Apron.Environment.t
)
ident(
  def environment_of_tvar "solving.ml" 146 4853 4853 "solving.ml" 1 0 -1
)
"solving.ml" 126 4304 4307 "solving.ml" 126 4304 4317
type(
  Apron.Var.t -> Apron.Environment.typvar
)
ident(
  def typ_of_var "solving.ml" 127 4361 4363 "solving.ml" 143 4738 4773
)
"solving.ml" 127 4361 4364 "solving.ml" 127 4361 4368
type(
  Apron.Var.t array
)
ident(
  def tvar "solving.ml" 128 4390 4392 "solving.ml" 143 4738 4773
)
"solving.ml" 131 4420 4427 "solving.ml" 131 4420 4431
type(
  Apron.Var.t list
)
ident(
  def lint "solving.ml" 142 4671 4673 "solving.ml" 143 4738 4773
)
"solving.ml" 131 4420 4432 "solving.ml" 131 4420 4437
type(
  Apron.Var.t list
)
ident(
  def lreal "solving.ml" 142 4671 4673 "solving.ml" 143 4738 4773
)
"solving.ml" 131 4420 4426 "solving.ml" 131 4420 4438
type(
  Apron.Var.t list * Apron.Var.t list
)
"solving.ml" 132 4441 4445 "solving.ml" 132 4441 4461
type(
  (Apron.Var.t ->
   Apron.Var.t list * Apron.Var.t list -> Apron.Var.t list * Apron.Var.t list) ->
  Apron.Var.t array ->
  Apron.Var.t list * Apron.Var.t list -> Apron.Var.t list * Apron.Var.t list
)
ident(
  ext_ref Array.fold_right
)
"solving.ml" 133 4462 4479 "solving.ml" 133 4462 4482
type(
  Apron.Var.t
)
ident(
  def var "solving.ml" 133 4462 4483 "solving.ml" 137 4625 4629
)
"solving.ml" 133 4462 4484 "solving.ml" 133 4462 4488
type(
  Apron.Var.t list
)
ident(
  def lint "solving.ml" 134 4499 4500 "solving.ml" 137 4625 4629
)
"solving.ml" 133 4462 4489 "solving.ml" 133 4462 4494
type(
  Apron.Var.t list
)
ident(
  def lreal "solving.ml" 134 4499 4500 "solving.ml" 137 4625 4629
)
"solving.ml" 133 4462 4483 "solving.ml" 133 4462 4495
type(
  Apron.Var.t list * Apron.Var.t list
)
"solving.ml" 134 4499 4512 "solving.ml" 134 4499 4522
type(
  Apron.Var.t -> Apron.Environment.typvar
)
ident(
  int_ref typ_of_var "solving.ml" 126 4304 4307 "solving.ml" 126 4304 4317
)
"solving.ml" 134 4499 4523 "solving.ml" 134 4499 4526
type(
  Apron.Var.t
)
ident(
  int_ref var "solving.ml" 133 4462 4479 "solving.ml" 133 4462 4482
)
"solving.ml" 134 4499 4512 "solving.ml" 134 4499 4526
call(
  stack
)
type(
  Apron.Environment.typvar
)
"solving.ml" 135 4532 4535 "solving.ml" 135 4532 4556
type(
  Apron.Environment.typvar
)
"solving.ml" 135 4532 4561 "solving.ml" 135 4532 4564
type(
  Apron.Var.t
)
ident(
  int_ref var "solving.ml" 133 4462 4479 "solving.ml" 133 4462 4482
)
"solving.ml" 135 4532 4566 "solving.ml" 135 4532 4570
type(
  Apron.Var.t list
)
ident(
  int_ref lint "solving.ml" 133 4462 4484 "solving.ml" 133 4462 4488
)
"solving.ml" 135 4532 4561 "solving.ml" 135 4532 4570
type(
  Apron.Var.t list
)
"solving.ml" 135 4532 4571 "solving.ml" 135 4532 4576
type(
  Apron.Var.t list
)
ident(
  int_ref lreal "solving.ml" 133 4462 4489 "solving.ml" 133 4462 4494
)
"solving.ml" 135 4532 4560 "solving.ml" 135 4532 4577
type(
  Apron.Var.t list * Apron.Var.t list
)
"solving.ml" 136 4578 4581 "solving.ml" 136 4578 4603
type(
  Apron.Environment.typvar
)
"solving.ml" 136 4578 4608 "solving.ml" 136 4578 4612
type(
  Apron.Var.t list
)
ident(
  int_ref lint "solving.ml" 133 4462 4484 "solving.ml" 133 4462 4488
)
"solving.ml" 136 4578 4613 "solving.ml" 136 4578 4616
type(
  Apron.Var.t
)
ident(
  int_ref var "solving.ml" 133 4462 4479 "solving.ml" 133 4462 4482
)
"solving.ml" 136 4578 4618 "solving.ml" 136 4578 4623
type(
  Apron.Var.t list
)
ident(
  int_ref lreal "solving.ml" 133 4462 4489 "solving.ml" 133 4462 4494
)
"solving.ml" 136 4578 4613 "solving.ml" 136 4578 4623
type(
  Apron.Var.t list
)
"solving.ml" 136 4578 4607 "solving.ml" 136 4578 4624
type(
  Apron.Var.t list * Apron.Var.t list
)
"solving.ml" 134 4499 4500 "solving.ml" 137 4625 4629
type(
  Apron.Var.t list * Apron.Var.t list
)
"solving.ml" 133 4462 4468 "solving.ml" 138 4630 4640
type(
  Apron.Var.t ->
  Apron.Var.t list * Apron.Var.t list -> Apron.Var.t list * Apron.Var.t list
)
"solving.ml" 139 4641 4647 "solving.ml" 139 4641 4651
type(
  Apron.Var.t array
)
ident(
  int_ref tvar "solving.ml" 127 4361 4364 "solving.ml" 127 4361 4368
)
"solving.ml" 140 4652 4659 "solving.ml" 140 4652 4661
type(
  Apron.Var.t list
)
"solving.ml" 140 4652 4662 "solving.ml" 140 4652 4664
type(
  Apron.Var.t list
)
"solving.ml" 140 4652 4658 "solving.ml" 140 4652 4665
type(
  Apron.Var.t list * Apron.Var.t list
)
"solving.ml" 132 4441 4445 "solving.ml" 140 4652 4665
call(
  stack
)
type(
  Apron.Var.t list * Apron.Var.t list
)
"solving.ml" 142 4671 4677 "solving.ml" 142 4671 4681
type(
  Apron.Var.t array
)
ident(
  def tint "solving.ml" 143 4738 4740 "solving.ml" 143 4738 4773
)
"solving.ml" 142 4671 4684 "solving.ml" 142 4671 4697
type(
  Apron.Var.t list -> Apron.Var.t array
)
ident(
  ext_ref Array.of_list
)
"solving.ml" 142 4671 4698 "solving.ml" 142 4671 4702
type(
  Apron.Var.t list
)
ident(
  int_ref lint "solving.ml" 131 4420 4427 "solving.ml" 131 4420 4431
)
"solving.ml" 142 4671 4684 "solving.ml" 142 4671 4702
call(
  stack
)
type(
  Apron.Var.t array
)
"solving.ml" 142 4671 4707 "solving.ml" 142 4671 4712
type(
  Apron.Var.t array
)
ident(
  def treal "solving.ml" 143 4738 4740 "solving.ml" 143 4738 4773
)
"solving.ml" 142 4671 4715 "solving.ml" 142 4671 4728
type(
  Apron.Var.t list -> Apron.Var.t array
)
ident(
  ext_ref Array.of_list
)
"solving.ml" 142 4671 4729 "solving.ml" 142 4671 4734
type(
  Apron.Var.t list
)
ident(
  int_ref lreal "solving.ml" 131 4420 4432 "solving.ml" 131 4420 4437
)
"solving.ml" 142 4671 4715 "solving.ml" 142 4671 4734
call(
  stack
)
type(
  Apron.Var.t array
)
"solving.ml" 143 4738 4740 "solving.ml" 143 4738 4762
type(
  Apron.Var.t array -> Apron.Var.t array -> Apron.Environment.t
)
ident(
  ext_ref Apron.Environment.make
)
"solving.ml" 143 4738 4763 "solving.ml" 143 4738 4767
type(
  Apron.Var.t array
)
ident(
  int_ref tint "solving.ml" 142 4671 4677 "solving.ml" 142 4671 4681
)
"solving.ml" 143 4738 4768 "solving.ml" 143 4738 4773
type(
  Apron.Var.t array
)
ident(
  int_ref treal "solving.ml" 142 4671 4707 "solving.ml" 142 4671 4712
)
"solving.ml" 143 4738 4740 "solving.ml" 143 4738 4773
type(
  Apron.Environment.t
)
"solving.ml" 142 4671 4673 "solving.ml" 143 4738 4773
type(
  Apron.Environment.t
)
"solving.ml" 131 4420 4422 "solving.ml" 143 4738 4773
type(
  Apron.Environment.t
)
type(
  Apron.Environment.t
)
"solving.ml" 155 5176 5182 "solving.ml" 155 5176 5195
type(
  'a Apron.Manager.t ->
  'a Apron.Abstract1.t ->
  Apron.Var.t ->
  Apron.Texpr1.t -> 'a Apron.Abstract1.t option -> 'a Apron.Abstract1.t
)
ident(
  def apply_tassign "solving.ml" 176 5636 5638 "solving.ml" 413 12980 12983
)
"solving.ml" 156 5196 5201 "solving.ml" 156 5196 5208
type(
  'a Apron.Manager.t
)
ident(
  def manager "solving.ml" 157 5229 5233 "solving.ml" 174 5627 5634
)
"solving.ml" 157 5229 5234 "solving.ml" 157 5229 5242
type(
  'a Apron.Abstract1.t
)
ident(
  def abstract "solving.ml" 158 5265 5269 "solving.ml" 174 5627 5634
)
"solving.ml" 158 5265 5270 "solving.ml" 158 5265 5273
type(
  Apron.Var.t
)
ident(
  def var "solving.ml" 159 5288 5292 "solving.ml" 174 5627 5634
)
"solving.ml" 159 5288 5293 "solving.ml" 159 5288 5297
type(
  Apron.Texpr1.t
)
ident(
  def expr "solving.ml" 160 5314 5318 "solving.ml" 174 5627 5634
)
"solving.ml" 160 5314 5319 "solving.ml" 160 5314 5323
type(
  'a Apron.Abstract1.t option
)
ident(
  def dest "solving.ml" 162 5359 5363 "solving.ml" 174 5627 5634
)
"solving.ml" 162 5359 5367 "solving.ml" 162 5359 5370
type(
  'a Apron.Abstract1.t
)
ident(
  def res "solving.ml" 174 5627 5631 "solving.ml" 174 5627 5634
)
"solving.ml" 163 5373 5379 "solving.ml" 163 5373 5407
type(
  'a Apron.Manager.t ->
  'a Apron.Abstract1.t ->
  Apron.Var.t ->
  Apron.Texpr1.t -> 'a Apron.Abstract1.t option -> 'a Apron.Abstract1.t
)
ident(
  ext_ref Apron.Abstract1.assign_texpr
)
"solving.ml" 164 5408 5409 "solving.ml" 164 5408 5416
type(
  'a Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 156 5196 5201 "solving.ml" 156 5196 5208
)
"solving.ml" 164 5408 5417 "solving.ml" 164 5408 5425
type(
  'a Apron.Abstract1.t
)
ident(
  int_ref abstract "solving.ml" 157 5229 5234 "solving.ml" 157 5229 5242
)
"solving.ml" 165 5426 5427 "solving.ml" 165 5426 5430
type(
  Apron.Var.t
)
ident(
  int_ref var "solving.ml" 158 5265 5270 "solving.ml" 158 5265 5273
)
"solving.ml" 165 5426 5431 "solving.ml" 165 5426 5435
type(
  Apron.Texpr1.t
)
ident(
  int_ref expr "solving.ml" 159 5288 5293 "solving.ml" 159 5288 5297
)
"solving.ml" 165 5426 5436 "solving.ml" 165 5426 5440
type(
  'a Apron.Abstract1.t option
)
ident(
  int_ref dest "solving.ml" 160 5314 5319 "solving.ml" 160 5314 5323
)
"solving.ml" 163 5373 5379 "solving.ml" 165 5426 5440
call(
  tail
)
type(
  'a Apron.Abstract1.t
)
"solving.ml" 174 5627 5631 "solving.ml" 174 5627 5634
type(
  'a Apron.Abstract1.t
)
ident(
  int_ref res "solving.ml" 162 5359 5367 "solving.ml" 162 5359 5370
)
"solving.ml" 162 5359 5363 "solving.ml" 174 5627 5634
type(
  'a Apron.Abstract1.t
)
"solving.ml" 176 5636 5642 "solving.ml" 176 5636 5657
type(
  'a0 Apron.Manager.t ->
  'a0 Apron.Abstract1.t ->
  Apron.Tcons1.earray Boolexpr.t ->
  'a0 Apron.Abstract1.t option -> 'a0 Apron.Abstract1.t
)
ident(
  def apply_condition "solving.ml" 216 6700 6702 "solving.ml" 413 12980 12983
)
"solving.ml" 177 5658 5665 "solving.ml" 177 5658 5672
type(
  'a0 Apron.Manager.t
)
ident(
  def manager "solving.ml" 178 5693 5699 "solving.ml" 214 6691 6698
)
"solving.ml" 178 5693 5700 "solving.ml" 178 5693 5708
type(
  'a0 Apron.Abstract1.t
)
ident(
  def abstract "solving.ml" 179 5731 5737 "solving.ml" 214 6691 6698
)
"solving.ml" 179 5731 5738 "solving.ml" 179 5731 5742
type(
  Apron.Tcons1.earray Boolexpr.t
)
ident(
  def expr "solving.ml" 180 5775 5781 "solving.ml" 214 6691 6698
)
"solving.ml" 180 5775 5782 "solving.ml" 180 5775 5786
type(
  'a0 Apron.Abstract1.t option
)
ident(
  def dest "solving.ml" 181 5816 5822 "solving.ml" 214 6691 6698
)
"solving.ml" 184 5859 5867 "solving.ml" 184 5859 5876
type(
  'a0 Apron.Abstract1.t list
)
ident(
  def labstract "solving.ml" 194 6082 6086 "solving.ml" 214 6691 6698
)
"solving.ml" 185 5879 5891 "solving.ml" 185 5879 5895
type(
  Apron.Tcons1.earray Boolexpr.t
)
ident(
  int_ref expr "solving.ml" 179 5731 5738 "solving.ml" 179 5731 5742
)
"solving.ml" 186 5901 5909 "solving.ml" 186 5901 5922
type(
  Apron.Tcons1.earray Boolexpr.t
)
"solving.ml" 187 5926 5930 "solving.ml" 187 5926 5938
type(
  'a0 Apron.Abstract1.t
)
ident(
  int_ref abstract "solving.ml" 178 5693 5700 "solving.ml" 178 5693 5708
)
"solving.ml" 187 5926 5929 "solving.ml" 187 5926 5939
type(
  'a0 Apron.Abstract1.t list
)
"solving.ml" 188 5940 5962 "solving.ml" 188 5940 5967
type(
  Apron.Tcons1.earray list
)
ident(
  def lconj "solving.ml" 189 5971 5974 "solving.ml" 192 6064 6074
)
"solving.ml" 188 5940 5948 "solving.ml" 188 5940 5967
type(
  Apron.Tcons1.earray Boolexpr.t
)
"solving.ml" 189 5971 5974 "solving.ml" 189 5971 5982
type(
  (Apron.Tcons1.earray -> 'a0 Apron.Abstract1.t) ->
  Apron.Tcons1.earray list -> 'a0 Apron.Abstract1.t list
)
ident(
  ext_ref List.map
)
"solving.ml" 190 5983 5993 "solving.ml" 190 5983 5997
type(
  Apron.Tcons1.earray
)
ident(
  def conj "solving.ml" 191 6001 6008 "solving.ml" 191 6001 6062
)
"solving.ml" 191 6001 6008 "solving.ml" 191 6001 6040
type(
  'a0 Apron.Manager.t ->
  'a0 Apron.Abstract1.t -> Apron.Tcons1.earray -> 'a0 Apron.Abstract1.t
)
ident(
  ext_ref Apron.Abstract1.meet_tcons_array
)
"solving.ml" 191 6001 6041 "solving.ml" 191 6001 6048
type(
  'a0 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 177 5658 5665 "solving.ml" 177 5658 5672
)
"solving.ml" 191 6001 6049 "solving.ml" 191 6001 6057
type(
  'a0 Apron.Abstract1.t
)
ident(
  int_ref abstract "solving.ml" 178 5693 5700 "solving.ml" 178 5693 5708
)
"solving.ml" 191 6001 6058 "solving.ml" 191 6001 6062
type(
  Apron.Tcons1.earray
)
ident(
  int_ref conj "solving.ml" 190 5983 5993 "solving.ml" 190 5983 5997
)
"solving.ml" 191 6001 6008 "solving.ml" 191 6001 6062
type(
  'a0 Apron.Abstract1.t
)
"solving.ml" 190 5983 5988 "solving.ml" 191 6001 6063
type(
  Apron.Tcons1.earray -> 'a0 Apron.Abstract1.t
)
"solving.ml" 192 6064 6069 "solving.ml" 192 6064 6074
type(
  Apron.Tcons1.earray list
)
ident(
  int_ref lconj "solving.ml" 188 5940 5962 "solving.ml" 188 5940 5967
)
"solving.ml" 189 5971 5974 "solving.ml" 192 6064 6074
call(
  stack
)
type(
  'a0 Apron.Abstract1.t list
)
"solving.ml" 185 5879 5885 "solving.ml" 192 6064 6074
type(
  'a0 Apron.Abstract1.t list
)
"solving.ml" 194 6082 6090 "solving.ml" 194 6082 6099
type(
  'a0 Apron.Abstract1.t list
)
ident(
  def labstract "solving.ml" 202 6271 6275 "solving.ml" 214 6691 6698
)
"solving.ml" 195 6102 6114 "solving.ml" 195 6102 6118
type(
  'a0 Apron.Abstract1.t option
)
ident(
  int_ref dest "solving.ml" 180 5775 5782 "solving.ml" 180 5775 5786
)
"solving.ml" 196 6124 6132 "solving.ml" 196 6124 6136
type(
  'a0 Apron.Abstract1.t option
)
"solving.ml" 196 6124 6140 "solving.ml" 196 6124 6149
type(
  'a0 Apron.Abstract1.t list
)
ident(
  int_ref labstract "solving.ml" 184 5859 5867 "solving.ml" 184 5859 5876
)
"solving.ml" 197 6150 6163 "solving.ml" 197 6150 6167
type(
  'a0 Apron.Abstract1.t
)
ident(
  def dest "solving.ml" 198 6171 6174 "solving.ml" 200 6249 6263
)
"solving.ml" 197 6150 6158 "solving.ml" 197 6150 6167
type(
  'a0 Apron.Abstract1.t option
)
"solving.ml" 198 6171 6174 "solving.ml" 198 6171 6182
type(
  ('a0 Apron.Abstract1.t -> 'a0 Apron.Abstract1.t) ->
  'a0 Apron.Abstract1.t list -> 'a0 Apron.Abstract1.t list
)
ident(
  ext_ref List.map
)
"solving.ml" 199 6183 6193 "solving.ml" 199 6183 6201
type(
  'a0 Apron.Abstract1.t
)
ident(
  def abstract "solving.ml" 199 6183 6205 "solving.ml" 199 6183 6247
)
"solving.ml" 199 6183 6205 "solving.ml" 199 6183 6225
type(
  'a0 Apron.Manager.t ->
  'a0 Apron.Abstract1.t -> 'a0 Apron.Abstract1.t -> 'a0 Apron.Abstract1.t
)
ident(
  ext_ref Apron.Abstract1.meet
)
"solving.ml" 199 6183 6226 "solving.ml" 199 6183 6233
type(
  'a0 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 177 5658 5665 "solving.ml" 177 5658 5672
)
"solving.ml" 199 6183 6234 "solving.ml" 199 6183 6242
type(
  'a0 Apron.Abstract1.t
)
ident(
  int_ref abstract "solving.ml" 199 6183 6193 "solving.ml" 199 6183 6201
)
"solving.ml" 199 6183 6243 "solving.ml" 199 6183 6247
type(
  'a0 Apron.Abstract1.t
)
ident(
  int_ref dest "solving.ml" 197 6150 6163 "solving.ml" 197 6150 6167
)
"solving.ml" 199 6183 6205 "solving.ml" 199 6183 6247
type(
  'a0 Apron.Abstract1.t
)
"solving.ml" 199 6183 6188 "solving.ml" 199 6183 6248
type(
  'a0 Apron.Abstract1.t -> 'a0 Apron.Abstract1.t
)
"solving.ml" 200 6249 6254 "solving.ml" 200 6249 6263
type(
  'a0 Apron.Abstract1.t list
)
ident(
  int_ref labstract "solving.ml" 184 5859 5867 "solving.ml" 184 5859 5876
)
"solving.ml" 198 6171 6174 "solving.ml" 200 6249 6263
call(
  stack
)
type(
  'a0 Apron.Abstract1.t list
)
"solving.ml" 195 6102 6108 "solving.ml" 200 6249 6263
type(
  'a0 Apron.Abstract1.t list
)
"solving.ml" 202 6271 6279 "solving.ml" 202 6271 6282
type(
  'a0 Apron.Abstract1.t
)
ident(
  def res "solving.ml" 208 6477 6481 "solving.ml" 214 6691 6698
)
"solving.ml" 202 6271 6291 "solving.ml" 202 6271 6300
type(
  'a0 Apron.Abstract1.t list
)
ident(
  int_ref labstract "solving.ml" 194 6082 6090 "solving.ml" 194 6082 6099
)
"solving.ml" 203 6306 6312 "solving.ml" 203 6306 6314
type(
  'a0 Apron.Abstract1.t list
)
"solving.ml" 204 6318 6319 "solving.ml" 204 6318 6341
type(
  'a0 Apron.Manager.t -> Apron.Environment.t -> 'a0 Apron.Abstract1.t
)
ident(
  ext_ref Apron.Abstract1.bottom
)
"solving.ml" 204 6318 6342 "solving.ml" 204 6318 6349
type(
  'a0 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 177 5658 5665 "solving.ml" 177 5658 5672
)
"solving.ml" 204 6318 6351 "solving.ml" 204 6318 6370
type(
  'a0 Apron.Abstract1.t -> Apron.Environment.t
)
ident(
  ext_ref Apron.Abstract1.env
)
"solving.ml" 204 6318 6371 "solving.ml" 204 6318 6379
type(
  'a0 Apron.Abstract1.t
)
ident(
  int_ref abstract "solving.ml" 178 5693 5700 "solving.ml" 178 5693 5708
)
"solving.ml" 204 6318 6350 "solving.ml" 204 6318 6380
call(
  stack
)
type(
  Apron.Environment.t
)
"solving.ml" 204 6318 6319 "solving.ml" 204 6318 6380
type(
  'a0 Apron.Abstract1.t
)
"solving.ml" 205 6381 6388 "solving.ml" 205 6381 6389
type(
  'a0 Apron.Abstract1.t
)
ident(
  def x "solving.ml" 205 6381 6394 "solving.ml" 205 6381 6395
)
"solving.ml" 205 6381 6387 "solving.ml" 205 6381 6390
type(
  'a0 Apron.Abstract1.t list
)
"solving.ml" 205 6381 6394 "solving.ml" 205 6381 6395
type(
  'a0 Apron.Abstract1.t
)
ident(
  int_ref x "solving.ml" 205 6381 6388 "solving.ml" 205 6381 6389
)
"solving.ml" 206 6396 6402 "solving.ml" 206 6396 6403
type(
  'a0 Apron.Abstract1.t list
)
"solving.ml" 206 6396 6409 "solving.ml" 206 6396 6435
type(
  'a0 Apron.Manager.t -> 'a0 Apron.Abstract1.t array -> 'a0 Apron.Abstract1.t
)
ident(
  ext_ref Apron.Abstract1.join_array
)
"solving.ml" 206 6396 6436 "solving.ml" 206 6396 6443
type(
  'a0 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 177 5658 5665 "solving.ml" 177 5658 5672
)
"solving.ml" 206 6396 6445 "solving.ml" 206 6396 6458
type(
  'a0 Apron.Abstract1.t list -> 'a0 Apron.Abstract1.t array
)
ident(
  ext_ref Array.of_list
)
"solving.ml" 206 6396 6459 "solving.ml" 206 6396 6468
type(
  'a0 Apron.Abstract1.t list
)
ident(
  int_ref labstract "solving.ml" 194 6082 6090 "solving.ml" 194 6082 6099
)
"solving.ml" 206 6396 6444 "solving.ml" 206 6396 6469
call(
  stack
)
type(
  'a0 Apron.Abstract1.t array
)
"solving.ml" 206 6396 6409 "solving.ml" 206 6396 6469
type(
  'a0 Apron.Abstract1.t
)
"solving.ml" 202 6271 6285 "solving.ml" 206 6396 6469
type(
  'a0 Apron.Abstract1.t
)
"solving.ml" 208 6477 6484 "solving.ml" 208 6477 6489
type(
  bool
)
"solving.ml" 209 6495 6501 "solving.ml" 209 6495 6507
type(
  ((Format.formatter -> 'a0 Apron.Abstract1.t -> unit) ->
   'a0 Apron.Abstract1.t ->
   (Format.formatter -> Apron.Tcons1.earray Boolexpr.t -> unit) ->
   Apron.Tcons1.earray Boolexpr.t ->
   (Format.formatter -> 'a0 Apron.Abstract1.t -> unit) ->
   'a0 Apron.Abstract1.t -> unit, Format.formatter, unit)
  format ->
  (Format.formatter -> 'a0 Apron.Abstract1.t -> unit) ->
  'a0 Apron.Abstract1.t ->
  (Format.formatter -> Apron.Tcons1.earray Boolexpr.t -> unit) ->
  Apron.Tcons1.earray Boolexpr.t ->
  (Format.formatter -> 'a0 Apron.Abstract1.t -> unit) ->
  'a0 Apron.Abstract1.t -> unit
)
ident(
  ext_ref Format.printf
)
"solving.ml" 209 6495 6508 "solving.ml" 209 6495 6539
type(
  ((Format.formatter -> 'a0 Apron.Abstract1.t -> unit) ->
   'a0 Apron.Abstract1.t ->
   (Format.formatter -> Apron.Tcons1.earray Boolexpr.t -> unit) ->
   Apron.Tcons1.earray Boolexpr.t ->
   (Format.formatter -> 'a0 Apron.Abstract1.t -> unit) ->
   'a0 Apron.Abstract1.t -> unit, Format.formatter, unit)
  format
)
"solving.ml" 210 6540 6541 "solving.ml" 210 6540 6562
type(
  Format.formatter -> 'a0 Apron.Abstract1.t -> unit
)
ident(
  ext_ref Apron.Abstract1.print
)
"solving.ml" 210 6540 6563 "solving.ml" 210 6540 6571
type(
  'a0 Apron.Abstract1.t
)
ident(
  int_ref abstract "solving.ml" 178 5693 5700 "solving.ml" 178 5693 5708
)
"solving.ml" 211 6572 6574 "solving.ml" 211 6572 6588
type(
  (Format.formatter -> Apron.Tcons1.earray -> unit) ->
  Format.formatter -> Apron.Tcons1.earray Boolexpr.t -> unit
)
ident(
  ext_ref Boolexpr.print
)
"solving.ml" 211 6572 6590 "solving.ml" 211 6572 6614
type(
  ?first:(unit, Format.formatter, unit) format ->
  ?sep:(unit, Format.formatter, unit) format ->
  ?last:(unit, Format.formatter, unit) format ->
  Format.formatter -> Apron.Tcons1.earray -> unit
)
ident(
  ext_ref Apron.Tcons1.array_print
)
"solving.ml" 211 6572 6622 "solving.ml" 211 6572 6626
type(
  (unit, Format.formatter, unit) format
)
"solving.ml" 211 6572 6632 "solving.ml" 211 6572 6639
type(
  (unit, Format.formatter, unit) format
)
"solving.ml" 211 6572 6646 "solving.ml" 211 6572 6650
type(
  (unit, Format.formatter, unit) format
)
"solving.ml" 211 6572 6589 "solving.ml" 211 6572 6651
call(
  stack
)
type(
  Format.formatter -> Apron.Tcons1.earray -> unit
)
"solving.ml" 211 6572 6573 "solving.ml" 211 6572 6652
call(
  stack
)
type(
  Format.formatter -> Apron.Tcons1.earray Boolexpr.t -> unit
)
"solving.ml" 211 6572 6653 "solving.ml" 211 6572 6657
type(
  Apron.Tcons1.earray Boolexpr.t
)
ident(
  int_ref expr "solving.ml" 179 5731 5738 "solving.ml" 179 5731 5742
)
"solving.ml" 212 6658 6659 "solving.ml" 212 6658 6680
type(
  Format.formatter -> 'a0 Apron.Abstract1.t -> unit
)
ident(
  ext_ref Apron.Abstract1.print
)
"solving.ml" 212 6658 6681 "solving.ml" 212 6658 6684
type(
  'a0 Apron.Abstract1.t
)
ident(
  int_ref res "solving.ml" 202 6271 6279 "solving.ml" 202 6271 6282
)
"solving.ml" 209 6495 6501 "solving.ml" 212 6658 6684
call(
  stack
)
type(
  unit
)
"solving.ml" 208 6477 6481 "solving.ml" 212 6658 6684
type(
  unit
)
"solving.ml" 214 6691 6695 "solving.ml" 214 6691 6698
type(
  'a0 Apron.Abstract1.t
)
ident(
  int_ref res "solving.ml" 202 6271 6279 "solving.ml" 202 6271 6282
)
"solving.ml" 208 6477 6481 "solving.ml" 214 6691 6698
type(
  'a0 Apron.Abstract1.t
)
"solving.ml" 202 6271 6275 "solving.ml" 214 6691 6698
type(
  'a0 Apron.Abstract1.t
)
"solving.ml" 194 6082 6086 "solving.ml" 214 6691 6698
type(
  'a0 Apron.Abstract1.t
)
"solving.ml" 184 5859 5863 "solving.ml" 214 6691 6698
type(
  'a0 Apron.Abstract1.t
)
type(
  'a0 Apron.Abstract1.t
)
"solving.ml" 216 6700 6706 "solving.ml" 216 6700 6716
type(
  'a1 Apron.Manager.t ->
  'a1 Apron.Abstract1.t ->
  Equation.procinfo ->
  Apron.Var.t array -> 'a1 Apron.Abstract1.t option -> 'a1 Apron.Abstract1.t
)
ident(
  def apply_call "solving.ml" 250 7832 7834 "solving.ml" 413 12980 12983
)
"solving.ml" 217 6717 6722 "solving.ml" 217 6717 6729
type(
  'a1 Apron.Manager.t
)
ident(
  def manager "solving.ml" 218 6750 6754 "solving.ml" 248 7817 7830
)
"solving.ml" 218 6750 6755 "solving.ml" 218 6750 6763
type(
  'a1 Apron.Abstract1.t
)
ident(
  def abstract "solving.ml" 219 6786 6790 "solving.ml" 248 7817 7830
)
"solving.ml" 219 6786 6791 "solving.ml" 219 6786 6801
type(
  Equation.procinfo
)
ident(
  def calleeinfo "solving.ml" 220 6821 6825 "solving.ml" 248 7817 7830
)
"solving.ml" 220 6821 6826 "solving.ml" 220 6821 6832
type(
  Apron.Var.t array
)
ident(
  def inargs "solving.ml" 221 6852 6856 "solving.ml" 248 7817 7830
)
"solving.ml" 221 6852 6857 "solving.ml" 221 6852 6861
type(
  'a1 Apron.Abstract1.t option
)
ident(
  def dest "solving.ml" 224 6927 6931 "solving.ml" 248 7817 7830
)
"solving.ml" 224 6927 6935 "solving.ml" 224 6927 6938
type(
  Apron.Environment.t
)
ident(
  def env "solving.ml" 227 7071 7075 "solving.ml" 248 7817 7830
)
"solving.ml" 224 6927 6941 "solving.ml" 224 6927 6960
type(
  'a1 Apron.Abstract1.t -> Apron.Environment.t
)
ident(
  ext_ref Apron.Abstract1.env
)
"solving.ml" 224 6927 6961 "solving.ml" 224 6927 6969
type(
  'a1 Apron.Abstract1.t
)
ident(
  int_ref abstract "solving.ml" 218 6750 6755 "solving.ml" 218 6750 6763
)
"solving.ml" 224 6927 6941 "solving.ml" 224 6927 6969
call(
  stack
)
type(
  Apron.Environment.t
)
"solving.ml" 227 7071 7079 "solving.ml" 227 7071 7083
type(
  Apron.Environment.t
)
ident(
  def tenv "solving.ml" 228 7151 7155 "solving.ml" 248 7817 7830
)
"solving.ml" 227 7071 7086 "solving.ml" 227 7071 7105
type(
  (Apron.Var.t -> Apron.Environment.typvar) ->
  Apron.Var.t array -> Apron.Environment.t
)
ident(
  int_ref environment_of_tvar "solving.ml" 125 4280 4284 "solving.ml" 125 4280 4303
)
"solving.ml" 227 7071 7107 "solving.ml" 227 7071 7135
type(
  Apron.Environment.t -> Apron.Var.t -> Apron.Environment.typvar
)
ident(
  ext_ref Apron.Environment.typ_of_var
)
"solving.ml" 227 7071 7136 "solving.ml" 227 7071 7139
type(
  Apron.Environment.t
)
ident(
  int_ref env "solving.ml" 224 6927 6935 "solving.ml" 224 6927 6938
)
"solving.ml" 227 7071 7106 "solving.ml" 227 7071 7140
call(
  stack
)
type(
  Apron.Var.t -> Apron.Environment.typvar
)
"solving.ml" 227 7071 7141 "solving.ml" 227 7071 7147
type(
  Apron.Var.t array
)
ident(
  int_ref inargs "solving.ml" 220 6821 6826 "solving.ml" 220 6821 6832
)
"solving.ml" 227 7071 7086 "solving.ml" 227 7071 7147
call(
  stack
)
type(
  Apron.Environment.t
)
"solving.ml" 228 7151 7159 "solving.ml" 228 7151 7168
type(
  'a1 Apron.Abstract1.t
)
ident(
  def abstract2 "solving.ml" 233 7353 7357 "solving.ml" 248 7817 7830
)
"solving.ml" 229 7171 7177 "solving.ml" 229 7171 7211
type(
  'a1 Apron.Manager.t ->
  'a1 Apron.Abstract1.t ->
  Apron.Environment.t -> bool -> 'a1 Apron.Abstract1.t
)
ident(
  ext_ref Apron.Abstract1.change_environment
)
"solving.ml" 229 7171 7212 "solving.ml" 229 7171 7219
type(
  'a1 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 217 6717 6722 "solving.ml" 217 6717 6729
)
"solving.ml" 229 7171 7220 "solving.ml" 229 7171 7228
type(
  'a1 Apron.Abstract1.t
)
ident(
  int_ref abstract "solving.ml" 218 6750 6755 "solving.ml" 218 6750 6763
)
"solving.ml" 229 7171 7229 "solving.ml" 229 7171 7233
type(
  Apron.Environment.t
)
ident(
  int_ref tenv "solving.ml" 227 7071 7079 "solving.ml" 227 7071 7083
)
"solving.ml" 229 7171 7234 "solving.ml" 229 7171 7239
type(
  bool
)
"solving.ml" 229 7171 7177 "solving.ml" 229 7171 7239
type(
  'a1 Apron.Abstract1.t
)
"solving.ml" 233 7353 7357 "solving.ml" 233 7353 7390
type(
  'a1 Apron.Manager.t ->
  'a1 Apron.Abstract1.t -> Apron.Var.t array -> Apron.Var.t array -> unit
)
ident(
  ext_ref Apron.Abstract1.rename_array_with
)
"solving.ml" 234 7391 7397 "solving.ml" 234 7391 7404
type(
  'a1 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 217 6717 6722 "solving.ml" 217 6717 6729
)
"solving.ml" 234 7391 7405 "solving.ml" 234 7391 7414
type(
  'a1 Apron.Abstract1.t
)
ident(
  int_ref abstract2 "solving.ml" 228 7151 7159 "solving.ml" 228 7151 7168
)
"solving.ml" 235 7415 7421 "solving.ml" 235 7415 7427
type(
  Apron.Var.t array
)
ident(
  int_ref inargs "solving.ml" 220 6821 6826 "solving.ml" 220 6821 6832
)
"solving.ml" 235 7415 7428 "solving.ml" 235 7415 7438
type(
  Equation.procinfo
)
ident(
  int_ref calleeinfo "solving.ml" 219 6786 6791 "solving.ml" 219 6786 6801
)
"solving.ml" 235 7415 7428 "solving.ml" 235 7415 7454
type(
  Apron.Var.t array
)
"solving.ml" 233 7353 7357 "solving.ml" 235 7415 7454
type(
  unit
)
"solving.ml" 238 7511 7515 "solving.ml" 238 7511 7554
type(
  'a1 Apron.Manager.t ->
  'a1 Apron.Abstract1.t -> Apron.Environment.t -> bool -> unit
)
ident(
  ext_ref Apron.Abstract1.change_environment_with
)
"solving.ml" 239 7555 7561 "solving.ml" 239 7555 7568
type(
  'a1 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 217 6717 6722 "solving.ml" 217 6717 6729
)
"solving.ml" 239 7555 7569 "solving.ml" 239 7555 7578
type(
  'a1 Apron.Abstract1.t
)
ident(
  int_ref abstract2 "solving.ml" 228 7151 7159 "solving.ml" 228 7151 7168
)
"solving.ml" 240 7579 7585 "solving.ml" 240 7579 7595
type(
  Equation.procinfo
)
ident(
  int_ref calleeinfo "solving.ml" 219 6786 6791 "solving.ml" 219 6786 6801
)
"solving.ml" 240 7579 7585 "solving.ml" 240 7579 7609
type(
  Apron.Environment.t
)
"solving.ml" 240 7579 7610 "solving.ml" 240 7579 7615
type(
  bool
)
"solving.ml" 238 7511 7515 "solving.ml" 240 7579 7615
type(
  unit
)
"solving.ml" 243 7696 7712 "solving.ml" 243 7696 7716
type(
  'a1 Apron.Abstract1.t option
)
ident(
  int_ref dest "solving.ml" 221 6852 6857 "solving.ml" 221 6852 6861
)
"solving.ml" 244 7722 7728 "solving.ml" 244 7722 7732
type(
  'a1 Apron.Abstract1.t option
)
"solving.ml" 244 7722 7736 "solving.ml" 244 7722 7738
type(
  unit
)
"solving.ml" 245 7739 7750 "solving.ml" 245 7739 7754
type(
  'a1 Apron.Abstract1.t
)
ident(
  def dest "solving.ml" 246 7758 7759 "solving.ml" 246 7758 7807
)
"solving.ml" 245 7739 7745 "solving.ml" 245 7739 7754
type(
  'a1 Apron.Abstract1.t option
)
"solving.ml" 246 7758 7759 "solving.ml" 246 7758 7784
type(
  'a1 Apron.Manager.t ->
  'a1 Apron.Abstract1.t -> 'a1 Apron.Abstract1.t -> unit
)
ident(
  ext_ref Apron.Abstract1.meet_with
)
"solving.ml" 246 7758 7785 "solving.ml" 246 7758 7792
type(
  'a1 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 217 6717 6722 "solving.ml" 217 6717 6729
)
"solving.ml" 246 7758 7793 "solving.ml" 246 7758 7802
type(
  'a1 Apron.Abstract1.t
)
ident(
  int_ref abstract2 "solving.ml" 228 7151 7159 "solving.ml" 228 7151 7168
)
"solving.ml" 246 7758 7803 "solving.ml" 246 7758 7807
type(
  'a1 Apron.Abstract1.t
)
ident(
  int_ref dest "solving.ml" 245 7739 7750 "solving.ml" 245 7739 7754
)
"solving.ml" 246 7758 7759 "solving.ml" 246 7758 7807
type(
  unit
)
"solving.ml" 243 7696 7700 "solving.ml" 247 7808 7815
type(
  unit
)
"solving.ml" 248 7817 7821 "solving.ml" 248 7817 7830
type(
  'a1 Apron.Abstract1.t
)
ident(
  int_ref abstract2 "solving.ml" 228 7151 7159 "solving.ml" 228 7151 7168
)
"solving.ml" 243 7696 7700 "solving.ml" 248 7817 7830
type(
  'a1 Apron.Abstract1.t
)
"solving.ml" 238 7511 7515 "solving.ml" 248 7817 7830
type(
  'a1 Apron.Abstract1.t
)
"solving.ml" 233 7353 7357 "solving.ml" 248 7817 7830
type(
  'a1 Apron.Abstract1.t
)
"solving.ml" 228 7151 7155 "solving.ml" 248 7817 7830
type(
  'a1 Apron.Abstract1.t
)
"solving.ml" 227 7071 7075 "solving.ml" 248 7817 7830
type(
  'a1 Apron.Abstract1.t
)
"solving.ml" 224 6927 6931 "solving.ml" 248 7817 7830
type(
  'a1 Apron.Abstract1.t
)
"solving.ml" 250 7832 7838 "solving.ml" 250 7832 7850
type(
  'a2 Apron.Manager.t ->
  'a2 Apron.Abstract1.t ->
  'a2 Apron.Abstract1.t ->
  Equation.procinfo ->
  Apron.Var.t array ->
  Apron.Var.t array -> 'a2 Apron.Abstract1.t option -> 'a2 Apron.Abstract1.t
)
ident(
  def apply_return "solving.ml" 307 9670 9672 "solving.ml" 413 12980 12983
)
"solving.ml" 251 7851 7856 "solving.ml" 251 7851 7863
type(
  'a2 Apron.Manager.t
)
ident(
  def manager "solving.ml" 252 7884 7888 "solving.ml" 304 9629 9636
)
"solving.ml" 252 7884 7889 "solving.ml" 252 7884 7898
type(
  'a2 Apron.Abstract1.t
)
ident(
  def abscaller "solving.ml" 252 7884 7921 "solving.ml" 304 9629 9636
)
"solving.ml" 252 7884 7922 "solving.ml" 252 7884 7931
type(
  'a2 Apron.Abstract1.t
)
ident(
  def abscallee "solving.ml" 253 7954 7958 "solving.ml" 304 9629 9636
)
"solving.ml" 253 7954 7959 "solving.ml" 253 7954 7969
type(
  Equation.procinfo
)
ident(
  def calleeinfo "solving.ml" 254 7989 7993 "solving.ml" 304 9629 9636
)
"solving.ml" 254 7989 7994 "solving.ml" 254 7989 8000
type(
  Apron.Var.t array
)
ident(
  def inargs "solving.ml" 254 7989 8020 "solving.ml" 304 9629 9636
)
"solving.ml" 254 7989 8021 "solving.ml" 254 7989 8028
type(
  Apron.Var.t array
)
ident(
  def outargs "solving.ml" 255 8048 8052 "solving.ml" 304 9629 9636
)
"solving.ml" 255 8048 8053 "solving.ml" 255 8048 8057
type(
  'a2 Apron.Abstract1.t option
)
ident(
  def dest "solving.ml" 258 8146 8150 "solving.ml" 304 9629 9636
)
"solving.ml" 258 8146 8154 "solving.ml" 258 8146 8157
type(
  Apron.Environment.t
)
ident(
  def env "solving.ml" 262 8260 8264 "solving.ml" 304 9629 9636
)
"solving.ml" 259 8160 8166 "solving.ml" 259 8160 8190
type(
  Apron.Environment.t -> Apron.Var.t array -> Apron.Environment.t
)
ident(
  ext_ref Apron.Environment.remove
)
"solving.ml" 259 8160 8192 "solving.ml" 259 8160 8211
type(
  'a2 Apron.Abstract1.t -> Apron.Environment.t
)
ident(
  ext_ref Apron.Abstract1.env
)
"solving.ml" 259 8160 8212 "solving.ml" 259 8160 8221
type(
  'a2 Apron.Abstract1.t
)
ident(
  int_ref abscallee "solving.ml" 252 7884 7922 "solving.ml" 252 7884 7931
)
"solving.ml" 259 8160 8191 "solving.ml" 259 8160 8222
call(
  stack
)
type(
  Apron.Environment.t
)
"solving.ml" 260 8223 8225 "solving.ml" 260 8223 8235
type(
  Equation.procinfo
)
ident(
  int_ref calleeinfo "solving.ml" 253 7954 7959 "solving.ml" 253 7954 7969
)
"solving.ml" 260 8223 8224 "solving.ml" 260 8223 8252
type(
  Apron.Var.t array
)
"solving.ml" 259 8160 8166 "solving.ml" 260 8223 8252
type(
  Apron.Environment.t
)
"solving.ml" 262 8260 8268 "solving.ml" 262 8260 8271
type(
  'a2 Apron.Abstract1.t
)
ident(
  def res "solving.ml" 270 8527 8531 "solving.ml" 304 9629 9636
)
"solving.ml" 263 8274 8280 "solving.ml" 263 8274 8314
type(
  'a2 Apron.Manager.t ->
  'a2 Apron.Abstract1.t ->
  Apron.Environment.t -> bool -> 'a2 Apron.Abstract1.t
)
ident(
  ext_ref Apron.Abstract1.change_environment
)
"solving.ml" 263 8274 8315 "solving.ml" 263 8274 8322
type(
  'a2 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 251 7851 7856 "solving.ml" 251 7851 7863
)
"solving.ml" 263 8274 8323 "solving.ml" 263 8274 8332
type(
  'a2 Apron.Abstract1.t
)
ident(
  int_ref abscallee "solving.ml" 252 7884 7922 "solving.ml" 252 7884 7931
)
"solving.ml" 264 8333 8334 "solving.ml" 264 8333 8337
type(
  Apron.Environment.t
)
ident(
  int_ref env "solving.ml" 258 8146 8154 "solving.ml" 258 8146 8157
)
"solving.ml" 264 8333 8338 "solving.ml" 264 8333 8343
type(
  bool
)
"solving.ml" 263 8274 8280 "solving.ml" 264 8333 8343
type(
  'a2 Apron.Abstract1.t
)
"solving.ml" 270 8527 8531 "solving.ml" 270 8527 8564
type(
  'a2 Apron.Manager.t ->
  'a2 Apron.Abstract1.t -> Apron.Var.t array -> Apron.Var.t array -> unit
)
ident(
  ext_ref Apron.Abstract1.rename_array_with
)
"solving.ml" 271 8565 8571 "solving.ml" 271 8565 8578
type(
  'a2 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 251 7851 7856 "solving.ml" 251 7851 7863
)
"solving.ml" 271 8565 8579 "solving.ml" 271 8565 8582
type(
  'a2 Apron.Abstract1.t
)
ident(
  int_ref res "solving.ml" 262 8260 8268 "solving.ml" 262 8260 8271
)
"solving.ml" 272 8583 8590 "solving.ml" 272 8583 8602
type(
  Apron.Var.t array -> Apron.Var.t array -> Apron.Var.t array
)
ident(
  ext_ref Array.append
)
"solving.ml" 272 8583 8603 "solving.ml" 272 8583 8613
type(
  Equation.procinfo
)
ident(
  int_ref calleeinfo "solving.ml" 253 7954 7959 "solving.ml" 253 7954 7969
)
"solving.ml" 272 8583 8603 "solving.ml" 272 8583 8629
type(
  Apron.Var.t array
)
"solving.ml" 272 8583 8630 "solving.ml" 272 8583 8640
type(
  Equation.procinfo
)
ident(
  int_ref calleeinfo "solving.ml" 253 7954 7959 "solving.ml" 253 7954 7969
)
"solving.ml" 272 8583 8630 "solving.ml" 272 8583 8657
type(
  Apron.Var.t array
)
"solving.ml" 272 8583 8589 "solving.ml" 272 8583 8658
call(
  stack
)
type(
  Apron.Var.t array
)
"solving.ml" 273 8659 8666 "solving.ml" 273 8659 8678
type(
  Apron.Var.t array -> Apron.Var.t array -> Apron.Var.t array
)
ident(
  ext_ref Array.append
)
"solving.ml" 273 8659 8679 "solving.ml" 273 8659 8685
type(
  Apron.Var.t array
)
ident(
  int_ref inargs "solving.ml" 254 7989 7994 "solving.ml" 254 7989 8000
)
"solving.ml" 273 8659 8686 "solving.ml" 273 8659 8696
type(
  Equation.procinfo
)
ident(
  int_ref calleeinfo "solving.ml" 253 7954 7959 "solving.ml" 253 7954 7969
)
"solving.ml" 273 8659 8686 "solving.ml" 273 8659 8717
type(
  Apron.Var.t array
)
"solving.ml" 273 8659 8665 "solving.ml" 273 8659 8718
call(
  stack
)
type(
  Apron.Var.t array
)
"solving.ml" 270 8527 8531 "solving.ml" 273 8659 8718
type(
  unit
)
"solving.ml" 276 8793 8797 "solving.ml" 276 8793 8823
type(
  'a2 Apron.Manager.t ->
  'a2 Apron.Abstract1.t -> 'a2 Apron.Abstract1.t -> unit
)
ident(
  ext_ref Apron.Abstract1.unify_with
)
"solving.ml" 276 8793 8824 "solving.ml" 276 8793 8831
type(
  'a2 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 251 7851 7856 "solving.ml" 251 7851 7863
)
"solving.ml" 276 8793 8832 "solving.ml" 276 8793 8835
type(
  'a2 Apron.Abstract1.t
)
ident(
  int_ref res "solving.ml" 262 8260 8268 "solving.ml" 262 8260 8271
)
"solving.ml" 276 8793 8836 "solving.ml" 276 8793 8845
type(
  'a2 Apron.Abstract1.t
)
ident(
  int_ref abscaller "solving.ml" 252 7884 7889 "solving.ml" 252 7884 7898
)
"solving.ml" 276 8793 8797 "solving.ml" 276 8793 8845
type(
  unit
)
"solving.ml" 278 8896 8904 "solving.ml" 278 8896 8907
type(
  Apron.Environment.t
)
ident(
  def env "solving.ml" 279 8937 8941 "solving.ml" 304 9629 9636
)
"solving.ml" 278 8896 8910 "solving.ml" 278 8896 8929
type(
  'a2 Apron.Abstract1.t -> Apron.Environment.t
)
ident(
  ext_ref Apron.Abstract1.env
)
"solving.ml" 278 8896 8930 "solving.ml" 278 8896 8933
type(
  'a2 Apron.Abstract1.t
)
ident(
  int_ref res "solving.ml" 262 8260 8268 "solving.ml" 262 8260 8271
)
"solving.ml" 278 8896 8910 "solving.ml" 278 8896 8933
call(
  stack
)
type(
  Apron.Environment.t
)
"solving.ml" 279 8937 8945 "solving.ml" 279 8937 8953
type(
  Apron.Linexpr1.t array
)
ident(
  def tlinexpr "solving.ml" 288 9153 9157 "solving.ml" 304 9629 9636
)
"solving.ml" 280 8956 8962 "solving.ml" 280 8956 8971
type(
  (Apron.Var.t -> Apron.Linexpr1.t) ->
  Apron.Var.t array -> Apron.Linexpr1.t array
)
ident(
  ext_ref Array.map
)
"solving.ml" 281 8972 8984 "solving.ml" 281 8972 8987
type(
  Apron.Var.t
)
ident(
  def var "solving.ml" 282 8991 8994 "solving.ml" 284 9102 9106
)
"solving.ml" 282 8991 8998 "solving.ml" 282 8991 8999
type(
  Apron.Linexpr1.t
)
ident(
  def e "solving.ml" 283 9042 9045 "solving.ml" 284 9102 9106
)
"solving.ml" 282 8991 9002 "solving.ml" 282 8991 9021
type(
  ?sparse:bool -> Apron.Environment.t -> Apron.Linexpr1.t
)
ident(
  ext_ref Apron.Linexpr1.make
)
"solving.ml" 282 8991 9030 "solving.ml" 282 8991 9034
type(
  bool
)
"solving.ml" 282 8991 9035 "solving.ml" 282 8991 9038
type(
  Apron.Environment.t
)
ident(
  int_ref env "solving.ml" 278 8896 8904 "solving.ml" 278 8896 8907
)
"solving.ml" 282 8991 9002 "solving.ml" 282 8991 9038
call(
  stack
)
type(
  Apron.Linexpr1.t
)
"solving.ml" 283 9042 9045 "solving.ml" 283 9042 9069
type(
  Apron.Linexpr1.t -> Apron.Var.t -> Apron.Coeff.t -> unit
)
ident(
  ext_ref Apron.Linexpr1.set_coeff
)
"solving.ml" 283 9042 9070 "solving.ml" 283 9042 9071
type(
  Apron.Linexpr1.t
)
ident(
  int_ref e "solving.ml" 282 8991 8998 "solving.ml" 282 8991 8999
)
"solving.ml" 283 9042 9072 "solving.ml" 283 9042 9075
type(
  Apron.Var.t
)
ident(
  int_ref var "solving.ml" 281 8972 8984 "solving.ml" 281 8972 8987
)
"solving.ml" 283 9042 9077 "solving.ml" 283 9042 9097
type(
  int -> Apron.Coeff.t
)
ident(
  ext_ref Apron.Coeff.s_of_int
)
"solving.ml" 283 9042 9098 "solving.ml" 283 9042 9099
type(
  int
)
"solving.ml" 283 9042 9076 "solving.ml" 283 9042 9100
call(
  stack
)
type(
  Apron.Coeff.t
)
"solving.ml" 283 9042 9045 "solving.ml" 283 9042 9100
type(
  unit
)
"solving.ml" 284 9102 9105 "solving.ml" 284 9102 9106
type(
  Apron.Linexpr1.t
)
ident(
  int_ref e "solving.ml" 282 8991 8998 "solving.ml" 282 8991 8999
)
"solving.ml" 283 9042 9045 "solving.ml" 284 9102 9106
type(
  Apron.Linexpr1.t
)
"solving.ml" 282 8991 8994 "solving.ml" 284 9102 9106
type(
  Apron.Linexpr1.t
)
"solving.ml" 281 8972 8973 "solving.ml" 285 9107 9112
type(
  Apron.Var.t -> Apron.Linexpr1.t
)
"solving.ml" 286 9113 9114 "solving.ml" 286 9113 9124
type(
  Equation.procinfo
)
ident(
  int_ref calleeinfo "solving.ml" 253 7954 7959 "solving.ml" 253 7954 7969
)
"solving.ml" 286 9113 9114 "solving.ml" 286 9113 9145
type(
  Apron.Var.t array
)
"solving.ml" 280 8956 8962 "solving.ml" 286 9113 9145
call(
  stack
)
type(
  Apron.Linexpr1.t array
)
"solving.ml" 288 9153 9160 "solving.ml" 288 9153 9168
type(
  Apron.Linexpr1.t array
)
ident(
  int_ref tlinexpr "solving.ml" 279 8937 8945 "solving.ml" 279 8937 8953
)
"solving.ml" 288 9153 9168 "solving.ml" 288 9153 9170
type(
  Apron.Linexpr1.t array -> Apron.Linexpr1.t array -> bool
)
ident(
  ext_ref Pervasives.( <> )
)
"solving.ml" 288 9153 9170 "solving.ml" 288 9153 9174
type(
  Apron.Linexpr1.t array
)
"solving.ml" 288 9153 9160 "solving.ml" 288 9153 9174
type(
  bool
)
"solving.ml" 289 9180 9186 "solving.ml" 289 9180 9227
type(
  'a2 Apron.Manager.t ->
  'a2 Apron.Abstract1.t ->
  Apron.Var.t array ->
  Apron.Linexpr1.t array -> 'a2 Apron.Abstract1.t option -> unit
)
ident(
  ext_ref Apron.Abstract1.assign_linexpr_array_with
)
"solving.ml" 290 9228 9229 "solving.ml" 290 9228 9236
type(
  'a2 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 251 7851 7856 "solving.ml" 251 7851 7863
)
"solving.ml" 290 9228 9237 "solving.ml" 290 9228 9240
type(
  'a2 Apron.Abstract1.t
)
ident(
  int_ref res "solving.ml" 262 8260 8268 "solving.ml" 262 8260 8271
)
"solving.ml" 291 9241 9242 "solving.ml" 291 9241 9249
type(
  Apron.Var.t array
)
ident(
  int_ref outargs "solving.ml" 254 7989 8021 "solving.ml" 254 7989 8028
)
"solving.ml" 291 9241 9250 "solving.ml" 291 9241 9258
type(
  Apron.Linexpr1.t array
)
ident(
  int_ref tlinexpr "solving.ml" 279 8937 8945 "solving.ml" 279 8937 8953
)
"solving.ml" 291 9241 9259 "solving.ml" 291 9241 9263
type(
  'a2 Apron.Abstract1.t option
)
"solving.ml" 289 9180 9186 "solving.ml" 291 9241 9263
type(
  unit
)
"solving.ml" 288 9153 9157 "solving.ml" 291 9241 9263
type(
  unit
)
"solving.ml" 294 9328 9332 "solving.ml" 294 9328 9371
type(
  'a2 Apron.Manager.t ->
  'a2 Apron.Abstract1.t -> Apron.Environment.t -> bool -> unit
)
ident(
  ext_ref Apron.Abstract1.change_environment_with
)
"solving.ml" 295 9372 9378 "solving.ml" 295 9372 9385
type(
  'a2 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 251 7851 7856 "solving.ml" 251 7851 7863
)
"solving.ml" 295 9372 9386 "solving.ml" 295 9372 9389
type(
  'a2 Apron.Abstract1.t
)
ident(
  int_ref res "solving.ml" 262 8260 8268 "solving.ml" 262 8260 8271
)
"solving.ml" 296 9390 9397 "solving.ml" 296 9390 9416
type(
  'a2 Apron.Abstract1.t -> Apron.Environment.t
)
ident(
  ext_ref Apron.Abstract1.env
)
"solving.ml" 296 9390 9417 "solving.ml" 296 9390 9426
type(
  'a2 Apron.Abstract1.t
)
ident(
  int_ref abscaller "solving.ml" 252 7884 7889 "solving.ml" 252 7884 7898
)
"solving.ml" 296 9390 9396 "solving.ml" 296 9390 9427
call(
  stack
)
type(
  Apron.Environment.t
)
"solving.ml" 296 9390 9428 "solving.ml" 296 9390 9433
type(
  bool
)
"solving.ml" 294 9328 9332 "solving.ml" 296 9390 9433
type(
  unit
)
"solving.ml" 299 9514 9530 "solving.ml" 299 9514 9534
type(
  'a2 Apron.Abstract1.t option
)
ident(
  int_ref dest "solving.ml" 255 8048 8053 "solving.ml" 255 8048 8057
)
"solving.ml" 300 9540 9546 "solving.ml" 300 9540 9550
type(
  'a2 Apron.Abstract1.t option
)
"solving.ml" 300 9540 9554 "solving.ml" 300 9540 9556
type(
  unit
)
"solving.ml" 301 9557 9568 "solving.ml" 301 9557 9572
type(
  'a2 Apron.Abstract1.t
)
ident(
  def dest "solving.ml" 302 9576 9577 "solving.ml" 302 9576 9619
)
"solving.ml" 301 9557 9563 "solving.ml" 301 9557 9572
type(
  'a2 Apron.Abstract1.t option
)
"solving.ml" 302 9576 9577 "solving.ml" 302 9576 9602
type(
  'a2 Apron.Manager.t ->
  'a2 Apron.Abstract1.t -> 'a2 Apron.Abstract1.t -> unit
)
ident(
  ext_ref Apron.Abstract1.meet_with
)
"solving.ml" 302 9576 9603 "solving.ml" 302 9576 9610
type(
  'a2 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 251 7851 7856 "solving.ml" 251 7851 7863
)
"solving.ml" 302 9576 9611 "solving.ml" 302 9576 9614
type(
  'a2 Apron.Abstract1.t
)
ident(
  int_ref res "solving.ml" 262 8260 8268 "solving.ml" 262 8260 8271
)
"solving.ml" 302 9576 9615 "solving.ml" 302 9576 9619
type(
  'a2 Apron.Abstract1.t
)
ident(
  int_ref dest "solving.ml" 301 9557 9568 "solving.ml" 301 9557 9572
)
"solving.ml" 302 9576 9577 "solving.ml" 302 9576 9619
type(
  unit
)
"solving.ml" 299 9514 9518 "solving.ml" 303 9620 9627
type(
  unit
)
"solving.ml" 304 9629 9633 "solving.ml" 304 9629 9636
type(
  'a2 Apron.Abstract1.t
)
ident(
  int_ref res "solving.ml" 262 8260 8268 "solving.ml" 262 8260 8271
)
"solving.ml" 299 9514 9518 "solving.ml" 304 9629 9636
type(
  'a2 Apron.Abstract1.t
)
"solving.ml" 294 9328 9332 "solving.ml" 304 9629 9636
type(
  'a2 Apron.Abstract1.t
)
"solving.ml" 288 9153 9157 "solving.ml" 304 9629 9636
type(
  'a2 Apron.Abstract1.t
)
"solving.ml" 279 8937 8941 "solving.ml" 304 9629 9636
type(
  'a2 Apron.Abstract1.t
)
"solving.ml" 278 8896 8900 "solving.ml" 304 9629 9636
type(
  'a2 Apron.Abstract1.t
)
"solving.ml" 276 8793 8797 "solving.ml" 304 9629 9636
type(
  'a2 Apron.Abstract1.t
)
"solving.ml" 270 8527 8531 "solving.ml" 304 9629 9636
type(
  'a2 Apron.Abstract1.t
)
"solving.ml" 262 8260 8264 "solving.ml" 304 9629 9636
type(
  'a2 Apron.Abstract1.t
)
"solving.ml" 258 8146 8150 "solving.ml" 304 9629 9636
type(
  'a2 Apron.Abstract1.t
)
"solving.ml" 307 9670 9676 "solving.ml" 307 9670 9681
type(
  Equation.graph ->
  output:(Spl_syn.point, int, 'a3 Apron.Abstract1.t, unit) Fixpoint.output
         option ->
  'a3 Apron.Manager.t ->
  int -> 'a3 Apron.Abstract1.t array -> unit * 'a3 Apron.Abstract1.t
)
ident(
  def apply "solving.ml" 342 10810 10812 "solving.ml" 413 12980 12983
)
"solving.ml" 308 9682 9687 "solving.ml" 308 9682 9692
type(
  Equation.graph
)
ident(
  def graph "solving.ml" 309 9709 9713 "solving.ml" 339 10717 10729
)
"solving.ml" 309 9709 9715 "solving.ml" 309 9709 9721
type(
  (Spl_syn.point, int, 'a3 Apron.Abstract1.t, unit) Fixpoint.output option
)
ident(
  def output "solving.ml" 310 9797 9801 "solving.ml" 339 10717 10729
)
"solving.ml" 310 9797 9802 "solving.ml" 310 9797 9809
type(
  'a3 Apron.Manager.t
)
ident(
  def manager "solving.ml" 311 9830 9834 "solving.ml" 339 10717 10729
)
"solving.ml" 311 9830 9835 "solving.ml" 311 9830 9840
type(
  int
)
ident(
  def hedge "solving.ml" 312 9846 9850 "solving.ml" 339 10717 10729
)
"solving.ml" 312 9846 9851 "solving.ml" 312 9846 9855
type(
  'a3 Apron.Abstract1.t array
)
ident(
  def tabs "solving.ml" 313 9884 9888 "solving.ml" 339 10717 10729
)
"solving.ml" 316 9928 9936 "solving.ml" 316 9928 9944
type(
  Equation.transfer
)
ident(
  def transfer "solving.ml" 317 9981 9985 "solving.ml" 339 10717 10729
)
"solving.ml" 316 9928 9947 "solving.ml" 316 9928 9965
type(
  Equation.graph -> Equation.hedge -> Equation.transfer
)
ident(
  ext_ref PSHGraph.attrhedge
)
"solving.ml" 316 9928 9966 "solving.ml" 316 9928 9971
type(
  Equation.graph
)
ident(
  int_ref graph "solving.ml" 308 9682 9687 "solving.ml" 308 9682 9692
)
"solving.ml" 316 9928 9972 "solving.ml" 316 9928 9977
type(
  Equation.hedge
)
ident(
  int_ref hedge "solving.ml" 311 9830 9835 "solving.ml" 311 9830 9840
)
"solving.ml" 316 9928 9947 "solving.ml" 316 9928 9977
call(
  stack
)
type(
  Equation.transfer
)
"solving.ml" 317 9981 9989 "solving.ml" 317 9981 9992
type(
  'a3 Apron.Abstract1.t
)
ident(
  def abs "solving.ml" 318 10007 10011 "solving.ml" 339 10717 10729
)
"solving.ml" 317 9981 9995 "solving.ml" 317 9981 9999
type(
  'a3 Apron.Abstract1.t array
)
ident(
  int_ref tabs "solving.ml" 312 9846 9851 "solving.ml" 312 9846 9855
)
"solving.ml" 317 9981 10001 "solving.ml" 317 9981 10002
type(
  int
)
"solving.ml" 317 9981 9995 "solving.ml" 317 9981 10003
type(
  'a3 Apron.Abstract1.t
)
"solving.ml" 318 10007 10015 "solving.ml" 318 10007 10019
type(
  'a3 Apron.Abstract1.t option
)
ident(
  def dest "solving.ml" 326 10244 10248 "solving.ml" 339 10717 10729
)
"solving.ml" 318 10007 10028 "solving.ml" 318 10007 10034
type(
  (Spl_syn.point, int, 'a3 Apron.Abstract1.t, unit) Fixpoint.output option
)
ident(
  int_ref output "solving.ml" 309 9709 9715 "solving.ml" 309 9709 9721
)
"solving.ml" 319 10040 10048 "solving.ml" 319 10040 10052
type(
  (Spl_syn.point, int, 'a3 Apron.Abstract1.t, unit) Fixpoint.output option
)
"solving.ml" 319 10040 10056 "solving.ml" 319 10040 10060
type(
  'a3 Apron.Abstract1.t option
)
"solving.ml" 320 10061 10074 "solving.ml" 320 10061 10080
ident(
  def output "solving.ml" 321 10085 10088 "solving.ml" 324 10224 10236
)
"solving.ml" 320 10061 10073 "solving.ml" 320 10061 10081
type(
  (Spl_syn.point, int, 'a3 Apron.Abstract1.t, unit) Fixpoint.output
)
"solving.ml" 320 10061 10069 "solving.ml" 320 10061 10081
type(
  (Spl_syn.point, int, 'a3 Apron.Abstract1.t, unit) Fixpoint.output option
)
"solving.ml" 321 10085 10092 "solving.ml" 321 10085 10097
type(
  Equation.vertex array
)
ident(
  def tdest "solving.ml" 322 10135 10138 "solving.ml" 324 10224 10236
)
"solving.ml" 321 10085 10100 "solving.ml" 321 10085 10119
type(
  Equation.graph -> Equation.hedge -> Equation.vertex array
)
ident(
  ext_ref PSHGraph.succvertex
)
"solving.ml" 321 10085 10120 "solving.ml" 321 10085 10125
type(
  Equation.graph
)
ident(
  int_ref graph "solving.ml" 308 9682 9687 "solving.ml" 308 9682 9692
)
"solving.ml" 321 10085 10126 "solving.ml" 321 10085 10131
type(
  Equation.hedge
)
ident(
  int_ref hedge "solving.ml" 311 9830 9835 "solving.ml" 311 9830 9840
)
"solving.ml" 321 10085 10100 "solving.ml" 321 10085 10131
call(
  stack
)
type(
  Equation.vertex array
)
"solving.ml" 322 10135 10145 "solving.ml" 322 10135 10157
type(
  Equation.vertex array -> int
)
ident(
  ext_ref Array.length
)
"solving.ml" 322 10135 10158 "solving.ml" 322 10135 10163
type(
  Equation.vertex array
)
ident(
  int_ref tdest "solving.ml" 321 10085 10092 "solving.ml" 321 10085 10097
)
"solving.ml" 322 10135 10145 "solving.ml" 322 10135 10163
type(
  int
)
"solving.ml" 322 10135 10164 "solving.ml" 322 10135 10165
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"solving.ml" 322 10135 10166 "solving.ml" 322 10135 10167
type(
  int
)
"solving.ml" 322 10135 10144 "solving.ml" 322 10135 10168
type(
  bool
)
"solving.ml" 322 10135 10138 "solving.ml" 322 10135 10168
type(
  unit
)
"solving.ml" 323 10170 10177 "solving.ml" 323 10170 10181
type(
  'a3 Apron.Abstract1.t
)
ident(
  def dest "solving.ml" 324 10224 10227 "solving.ml" 324 10224 10236
)
"solving.ml" 323 10170 10184 "solving.ml" 323 10170 10203
type(
  (Equation.vertex, int, 'a3 Apron.Abstract1.t, unit) Fixpoint.output ->
  Equation.vertex -> 'a3 Apron.Abstract1.t
)
ident(
  ext_ref PSHGraph.attrvertex
)
"solving.ml" 323 10170 10204 "solving.ml" 323 10170 10210
type(
  (Equation.vertex, int, 'a3 Apron.Abstract1.t, unit) Fixpoint.output
)
ident(
  int_ref output "solving.ml" 320 10061 10073 "solving.ml" 320 10061 10081
)
"solving.ml" 323 10170 10211 "solving.ml" 323 10170 10216
type(
  Equation.vertex array
)
ident(
  int_ref tdest "solving.ml" 321 10085 10092 "solving.ml" 321 10085 10097
)
"solving.ml" 323 10170 10218 "solving.ml" 323 10170 10219
type(
  int
)
"solving.ml" 323 10170 10211 "solving.ml" 323 10170 10220
type(
  Equation.vertex
)
"solving.ml" 323 10170 10184 "solving.ml" 323 10170 10220
call(
  stack
)
type(
  'a3 Apron.Abstract1.t
)
"solving.ml" 324 10224 10232 "solving.ml" 324 10224 10236
type(
  'a3 Apron.Abstract1.t
)
ident(
  int_ref dest "solving.ml" 323 10170 10177 "solving.ml" 323 10170 10181
)
"solving.ml" 324 10224 10227 "solving.ml" 324 10224 10236
type(
  'a3 Apron.Abstract1.t option
)
"solving.ml" 323 10170 10173 "solving.ml" 324 10224 10236
type(
  'a3 Apron.Abstract1.t option
)
"solving.ml" 322 10135 10138 "solving.ml" 324 10224 10236
type(
  'a3 Apron.Abstract1.t option
)
"solving.ml" 321 10085 10088 "solving.ml" 324 10224 10236
type(
  'a3 Apron.Abstract1.t option
)
"solving.ml" 318 10007 10022 "solving.ml" 324 10224 10236
type(
  'a3 Apron.Abstract1.t option
)
"solving.ml" 326 10244 10252 "solving.ml" 326 10244 10255
type(
  'a3 Apron.Abstract1.t
)
ident(
  def res "solving.ml" 339 10717 10721 "solving.ml" 339 10717 10729
)
"solving.ml" 327 10258 10270 "solving.ml" 327 10258 10278
type(
  Equation.transfer
)
ident(
  int_ref transfer "solving.ml" 316 9928 9936 "solving.ml" 316 9928 9944
)
"solving.ml" 328 10284 10309 "solving.ml" 328 10284 10312
type(
  Apron.Var.t
)
ident(
  def var "solving.ml" 329 10322 10325 "solving.ml" 329 10322 10364
)
"solving.ml" 328 10284 10313 "solving.ml" 328 10284 10317
type(
  Apron.Texpr1.t
)
ident(
  def expr "solving.ml" 329 10322 10325 "solving.ml" 329 10322 10364
)
"solving.ml" 328 10284 10292 "solving.ml" 328 10284 10318
type(
  Equation.transfer
)
"solving.ml" 329 10322 10325 "solving.ml" 329 10322 10338
type(
  'a3 Apron.Manager.t ->
  'a3 Apron.Abstract1.t ->
  Apron.Var.t ->
  Apron.Texpr1.t -> 'a3 Apron.Abstract1.t option -> 'a3 Apron.Abstract1.t
)
ident(
  int_ref apply_tassign "solving.ml" 155 5176 5182 "solving.ml" 155 5176 5195
)
"solving.ml" 329 10322 10339 "solving.ml" 329 10322 10346
type(
  'a3 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 310 9797 9802 "solving.ml" 310 9797 9809
)
"solving.ml" 329 10322 10347 "solving.ml" 329 10322 10350
type(
  'a3 Apron.Abstract1.t
)
ident(
  int_ref abs "solving.ml" 317 9981 9989 "solving.ml" 317 9981 9992
)
"solving.ml" 329 10322 10351 "solving.ml" 329 10322 10354
type(
  Apron.Var.t
)
ident(
  int_ref var "solving.ml" 328 10284 10309 "solving.ml" 328 10284 10312
)
"solving.ml" 329 10322 10355 "solving.ml" 329 10322 10359
type(
  Apron.Texpr1.t
)
ident(
  int_ref expr "solving.ml" 328 10284 10313 "solving.ml" 328 10284 10317
)
"solving.ml" 329 10322 10360 "solving.ml" 329 10322 10364
type(
  'a3 Apron.Abstract1.t option
)
ident(
  int_ref dest "solving.ml" 318 10007 10015 "solving.ml" 318 10007 10019
)
"solving.ml" 329 10322 10325 "solving.ml" 329 10322 10364
call(
  stack
)
type(
  'a3 Apron.Abstract1.t
)
"solving.ml" 330 10365 10390 "solving.ml" 330 10365 10391
type(
  Apron.Linexpr1.t
)
type(
  Apron.Var.t
)
"solving.ml" 330 10365 10373 "solving.ml" 330 10365 10391
type(
  Equation.transfer
)
"solving.ml" 331 10395 10398 "solving.ml" 331 10395 10406
type(
  string -> 'a3 Apron.Abstract1.t
)
ident(
  ext_ref Pervasives.failwith
)
"solving.ml" 331 10395 10407 "solving.ml" 331 10395 10409
type(
  string
)
"solving.ml" 331 10395 10398 "solving.ml" 331 10395 10409
call(
  stack
)
type(
  'a3 Apron.Abstract1.t
)
"solving.ml" 332 10410 10437 "solving.ml" 332 10410 10441
type(
  Apron.Tcons1.earray Boolexpr.t
)
ident(
  def cond "solving.ml" 333 10445 10448 "solving.ml" 333 10445 10485
)
"solving.ml" 332 10410 10418 "solving.ml" 332 10410 10441
type(
  Equation.transfer
)
"solving.ml" 333 10445 10448 "solving.ml" 333 10445 10463
type(
  'a3 Apron.Manager.t ->
  'a3 Apron.Abstract1.t ->
  Apron.Tcons1.earray Boolexpr.t ->
  'a3 Apron.Abstract1.t option -> 'a3 Apron.Abstract1.t
)
ident(
  int_ref apply_condition "solving.ml" 176 5636 5642 "solving.ml" 176 5636 5657
)
"solving.ml" 333 10445 10464 "solving.ml" 333 10445 10471
type(
  'a3 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 310 9797 9802 "solving.ml" 310 9797 9809
)
"solving.ml" 333 10445 10472 "solving.ml" 333 10445 10475
type(
  'a3 Apron.Abstract1.t
)
ident(
  int_ref abs "solving.ml" 317 9981 9989 "solving.ml" 317 9981 9992
)
"solving.ml" 333 10445 10476 "solving.ml" 333 10445 10480
type(
  Apron.Tcons1.earray Boolexpr.t
)
ident(
  int_ref cond "solving.ml" 332 10410 10437 "solving.ml" 332 10410 10441
)
"solving.ml" 333 10445 10481 "solving.ml" 333 10445 10485
type(
  'a3 Apron.Abstract1.t option
)
ident(
  int_ref dest "solving.ml" 318 10007 10015 "solving.ml" 318 10007 10019
)
"solving.ml" 333 10445 10448 "solving.ml" 333 10445 10485
call(
  stack
)
type(
  'a3 Apron.Abstract1.t
)
"solving.ml" 334 10486 10508 "solving.ml" 334 10486 10518
type(
  Equation.procinfo
)
ident(
  def callerinfo "solving.ml" 335 10543 10546 "solving.ml" 335 10543 10588
)
"solving.ml" 334 10486 10519 "solving.ml" 334 10486 10529
type(
  Equation.procinfo
)
ident(
  def calleeinfo "solving.ml" 335 10543 10546 "solving.ml" 335 10543 10588
)
"solving.ml" 334 10486 10530 "solving.ml" 334 10486 10533
type(
  Apron.Var.t array
)
ident(
  def tin "solving.ml" 335 10543 10546 "solving.ml" 335 10543 10588
)
"solving.ml" 334 10486 10534 "solving.ml" 334 10486 10538
type(
  Apron.Var.t array
)
ident(
  def tout "solving.ml" 335 10543 10546 "solving.ml" 335 10543 10588
)
"solving.ml" 334 10486 10494 "solving.ml" 334 10486 10539
type(
  Equation.transfer
)
"solving.ml" 335 10543 10546 "solving.ml" 335 10543 10556
type(
  'a3 Apron.Manager.t ->
  'a3 Apron.Abstract1.t ->
  Equation.procinfo ->
  Apron.Var.t array -> 'a3 Apron.Abstract1.t option -> 'a3 Apron.Abstract1.t
)
ident(
  int_ref apply_call "solving.ml" 216 6700 6706 "solving.ml" 216 6700 6716
)
"solving.ml" 335 10543 10557 "solving.ml" 335 10543 10564
type(
  'a3 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 310 9797 9802 "solving.ml" 310 9797 9809
)
"solving.ml" 335 10543 10565 "solving.ml" 335 10543 10568
type(
  'a3 Apron.Abstract1.t
)
ident(
  int_ref abs "solving.ml" 317 9981 9989 "solving.ml" 317 9981 9992
)
"solving.ml" 335 10543 10569 "solving.ml" 335 10543 10579
type(
  Equation.procinfo
)
ident(
  int_ref calleeinfo "solving.ml" 334 10486 10519 "solving.ml" 334 10486 10529
)
"solving.ml" 335 10543 10580 "solving.ml" 335 10543 10583
type(
  Apron.Var.t array
)
ident(
  int_ref tin "solving.ml" 334 10486 10530 "solving.ml" 334 10486 10533
)
"solving.ml" 335 10543 10584 "solving.ml" 335 10543 10588
type(
  'a3 Apron.Abstract1.t option
)
ident(
  int_ref dest "solving.ml" 318 10007 10015 "solving.ml" 318 10007 10019
)
"solving.ml" 335 10543 10546 "solving.ml" 335 10543 10588
call(
  stack
)
type(
  'a3 Apron.Abstract1.t
)
"solving.ml" 336 10589 10613 "solving.ml" 336 10589 10623
type(
  Equation.procinfo
)
ident(
  def callerinfo "solving.ml" 337 10648 10651 "solving.ml" 337 10648 10709
)
"solving.ml" 336 10589 10624 "solving.ml" 336 10589 10634
type(
  Equation.procinfo
)
ident(
  def calleeinfo "solving.ml" 337 10648 10651 "solving.ml" 337 10648 10709
)
"solving.ml" 336 10589 10635 "solving.ml" 336 10589 10638
type(
  Apron.Var.t array
)
ident(
  def tin "solving.ml" 337 10648 10651 "solving.ml" 337 10648 10709
)
"solving.ml" 336 10589 10639 "solving.ml" 336 10589 10643
type(
  Apron.Var.t array
)
ident(
  def tout "solving.ml" 337 10648 10651 "solving.ml" 337 10648 10709
)
"solving.ml" 336 10589 10597 "solving.ml" 336 10589 10644
type(
  Equation.transfer
)
"solving.ml" 337 10648 10651 "solving.ml" 337 10648 10663
type(
  'a3 Apron.Manager.t ->
  'a3 Apron.Abstract1.t ->
  'a3 Apron.Abstract1.t ->
  Equation.procinfo ->
  Apron.Var.t array ->
  Apron.Var.t array -> 'a3 Apron.Abstract1.t option -> 'a3 Apron.Abstract1.t
)
ident(
  int_ref apply_return "solving.ml" 250 7832 7838 "solving.ml" 250 7832 7850
)
"solving.ml" 337 10648 10664 "solving.ml" 337 10648 10671
type(
  'a3 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 310 9797 9802 "solving.ml" 310 9797 9809
)
"solving.ml" 337 10648 10672 "solving.ml" 337 10648 10675
type(
  'a3 Apron.Abstract1.t
)
ident(
  int_ref abs "solving.ml" 317 9981 9989 "solving.ml" 317 9981 9992
)
"solving.ml" 337 10648 10676 "solving.ml" 337 10648 10680
type(
  'a3 Apron.Abstract1.t array
)
ident(
  int_ref tabs "solving.ml" 312 9846 9851 "solving.ml" 312 9846 9855
)
"solving.ml" 337 10648 10682 "solving.ml" 337 10648 10683
type(
  int
)
"solving.ml" 337 10648 10676 "solving.ml" 337 10648 10684
type(
  'a3 Apron.Abstract1.t
)
"solving.ml" 337 10648 10685 "solving.ml" 337 10648 10695
type(
  Equation.procinfo
)
ident(
  int_ref calleeinfo "solving.ml" 336 10589 10624 "solving.ml" 336 10589 10634
)
"solving.ml" 337 10648 10696 "solving.ml" 337 10648 10699
type(
  Apron.Var.t array
)
ident(
  int_ref tin "solving.ml" 336 10589 10635 "solving.ml" 336 10589 10638
)
"solving.ml" 337 10648 10700 "solving.ml" 337 10648 10704
type(
  Apron.Var.t array
)
ident(
  int_ref tout "solving.ml" 336 10589 10639 "solving.ml" 336 10589 10643
)
"solving.ml" 337 10648 10705 "solving.ml" 337 10648 10709
type(
  'a3 Apron.Abstract1.t option
)
ident(
  int_ref dest "solving.ml" 318 10007 10015 "solving.ml" 318 10007 10019
)
"solving.ml" 337 10648 10651 "solving.ml" 337 10648 10709
call(
  stack
)
type(
  'a3 Apron.Abstract1.t
)
"solving.ml" 327 10258 10264 "solving.ml" 337 10648 10709
type(
  'a3 Apron.Abstract1.t
)
"solving.ml" 339 10717 10722 "solving.ml" 339 10717 10724
type(
  unit
)
"solving.ml" 339 10717 10725 "solving.ml" 339 10717 10728
type(
  'a3 Apron.Abstract1.t
)
ident(
  int_ref res "solving.ml" 326 10244 10252 "solving.ml" 326 10244 10255
)
"solving.ml" 339 10717 10721 "solving.ml" 339 10717 10729
type(
  unit * 'a3 Apron.Abstract1.t
)
"solving.ml" 326 10244 10248 "solving.ml" 339 10717 10729
type(
  unit * 'a3 Apron.Abstract1.t
)
"solving.ml" 318 10007 10011 "solving.ml" 339 10717 10729
type(
  unit * 'a3 Apron.Abstract1.t
)
"solving.ml" 317 9981 9985 "solving.ml" 339 10717 10729
type(
  unit * 'a3 Apron.Abstract1.t
)
"solving.ml" 316 9928 9932 "solving.ml" 339 10717 10729
type(
  unit * 'a3 Apron.Abstract1.t
)
type(
  unit * 'a3 Apron.Abstract1.t
)
"solving.ml" 345 10926 10932 "solving.ml" 345 10926 10939
type(
  fmt:Format.formatter ->
  Equation.graph ->
  output:(Spl_syn.point, int, 'a4 Apron.Abstract1.t, unit) Fixpoint.output
         option ->
  'a4 Apron.Manager.t ->
  debug:int ->
  (Spl_syn.point, int, 'a4 Apron.Abstract1.t, unit) Fixpoint.output
)
ident(
  def compute "solving.ml" 412 12972 12979 "solving.ml" 413 12980 12983
)
"solving.ml" 346 10940 10948 "solving.ml" 346 10940 10951
type(
  Format.formatter
)
ident(
  def fmt "solving.ml" 347 10972 10978 "solving.ml" 412 12972 12979
)
"solving.ml" 347 10972 10979 "solving.ml" 347 10972 10984
type(
  Equation.graph
)
ident(
  def graph "solving.ml" 348 11001 11007 "solving.ml" 412 12972 12979
)
"solving.ml" 348 11001 11009 "solving.ml" 348 11001 11015
type(
  (Spl_syn.point, int, 'a4 Apron.Abstract1.t, unit) Fixpoint.output option
)
ident(
  def output "solving.ml" 349 11091 11097 "solving.ml" 412 12972 12979
)
"solving.ml" 349 11091 11098 "solving.ml" 349 11091 11105
type(
  'a4 Apron.Manager.t
)
ident(
  def manager "solving.ml" 350 11126 11132 "solving.ml" 412 12972 12979
)
"solving.ml" 350 11126 11134 "solving.ml" 350 11126 11139
type(
  int
)
ident(
  def debug "solving.ml" 351 11145 11151 "solving.ml" 412 12972 12979
)
"solving.ml" 354 11232 11240 "solving.ml" 354 11232 11244
type(
  Equation.info
)
ident(
  def info "solving.ml" 355 11270 11274 "solving.ml" 412 12972 12979
)
"solving.ml" 354 11232 11247 "solving.ml" 354 11232 11260
type(
  Equation.graph -> Equation.info
)
ident(
  ext_ref PSHGraph.info
)
"solving.ml" 354 11232 11261 "solving.ml" 354 11232 11266
type(
  Equation.graph
)
ident(
  int_ref graph "solving.ml" 347 10972 10979 "solving.ml" 347 10972 10984
)
"solving.ml" 354 11232 11247 "solving.ml" 354 11232 11266
call(
  stack
)
type(
  Equation.info
)
"solving.ml" 355 11270 11278 "solving.ml" 355 11270 11284
type(
  Equation.vertex PSette.t
)
ident(
  def sstart "solving.ml" 369 11740 11744 "solving.ml" 412 12972 12979
)
"solving.ml" 356 11287 11297 "solving.ml" 356 11287 11305
type(
  Equation.procinfo
)
ident(
  def maininfo "solving.ml" 357 11349 11355 "solving.ml" 367 11723 11732
)
"solving.ml" 356 11287 11308 "solving.ml" 356 11287 11319
type(
  (string, Equation.procinfo) Hashhe.t -> string -> Equation.procinfo
)
ident(
  ext_ref Hashhe.find
)
"solving.ml" 356 11287 11320 "solving.ml" 356 11287 11324
type(
  Equation.info
)
ident(
  int_ref info "solving.ml" 354 11232 11240 "solving.ml" 354 11232 11244
)
"solving.ml" 356 11287 11320 "solving.ml" 356 11287 11342
type(
  (string, Equation.procinfo) Hashhe.t
)
"solving.ml" 356 11287 11343 "solving.ml" 356 11287 11345
type(
  string
)
"solving.ml" 356 11287 11308 "solving.ml" 356 11287 11345
call(
  stack
)
type(
  Equation.procinfo
)
"solving.ml" 357 11349 11359 "solving.ml" 357 11349 11364
type(
  Spl_syn.point
)
ident(
  def start "solving.ml" 358 11395 11401 "solving.ml" 367 11723 11732
)
"solving.ml" 357 11349 11367 "solving.ml" 357 11349 11375
type(
  Equation.procinfo
)
ident(
  int_ref maininfo "solving.ml" 356 11287 11297 "solving.ml" 356 11287 11305
)
"solving.ml" 357 11349 11367 "solving.ml" 357 11349 11391
type(
  Spl_syn.point
)
"solving.ml" 358 11395 11413 "solving.ml" 358 11395 11419
type(
  (Spl_syn.point, int, 'a4 Apron.Abstract1.t, unit) Fixpoint.output option
)
ident(
  int_ref output "solving.ml" 348 11001 11009 "solving.ml" 348 11001 11015
)
"solving.ml" 359 11425 11433 "solving.ml" 359 11425 11437
type(
  (Spl_syn.point, int, 'a4 Apron.Abstract1.t, unit) Fixpoint.output option
)
"solving.ml" 360 11441 11444 "solving.ml" 360 11441 11460
type(
  (Equation.vertex -> Equation.vertex -> int) ->
  Equation.vertex -> Equation.vertex PSette.t
)
ident(
  ext_ref PSette.singleton
)
"solving.ml" 360 11441 11461 "solving.ml" 360 11441 11483
type(
  Equation.vertex -> Equation.vertex -> int
)
ident(
  ext_ref Equation.compare_point
)
"solving.ml" 360 11441 11484 "solving.ml" 360 11441 11489
type(
  Equation.vertex
)
ident(
  int_ref start "solving.ml" 357 11349 11359 "solving.ml" 357 11349 11364
)
"solving.ml" 360 11441 11444 "solving.ml" 360 11441 11489
call(
  stack
)
type(
  Equation.vertex PSette.t
)
"solving.ml" 361 11490 11503 "solving.ml" 361 11490 11509
type(
  (Spl_syn.point, int, 'a4 Apron.Abstract1.t, unit) Fixpoint.output
)
ident(
  def output "solving.ml" 362 11513 11516 "solving.ml" 366 11670 11722
)
"solving.ml" 361 11490 11498 "solving.ml" 361 11490 11509
type(
  (Spl_syn.point, int, 'a4 Apron.Abstract1.t, unit) Fixpoint.output option
)
"solving.ml" 362 11513 11520 "solving.ml" 362 11513 11528
type(
  'a4 Apron.Abstract1.t
)
ident(
  def abstract "solving.ml" 363 11567 11570 "solving.ml" 366 11670 11722
)
"solving.ml" 362 11513 11531 "solving.ml" 362 11513 11550
type(
  (Spl_syn.point, int, 'a4 Apron.Abstract1.t, unit) Fixpoint.output ->
  Spl_syn.point -> 'a4 Apron.Abstract1.t
)
ident(
  ext_ref PSHGraph.attrvertex
)
"solving.ml" 362 11513 11551 "solving.ml" 362 11513 11557
type(
  (Spl_syn.point, int, 'a4 Apron.Abstract1.t, unit) Fixpoint.output
)
ident(
  int_ref output "solving.ml" 361 11490 11503 "solving.ml" 361 11490 11509
)
"solving.ml" 362 11513 11558 "solving.ml" 362 11513 11563
type(
  Spl_syn.point
)
ident(
  int_ref start "solving.ml" 357 11349 11359 "solving.ml" 357 11349 11364
)
"solving.ml" 362 11513 11531 "solving.ml" 362 11513 11563
call(
  stack
)
type(
  'a4 Apron.Abstract1.t
)
"solving.ml" 363 11567 11573 "solving.ml" 363 11567 11598
type(
  'a4 Apron.Manager.t -> 'a4 Apron.Abstract1.t -> bool
)
ident(
  ext_ref Apron.Abstract1.is_bottom
)
"solving.ml" 363 11567 11599 "solving.ml" 363 11567 11606
type(
  'a4 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 349 11091 11098 "solving.ml" 349 11091 11105
)
"solving.ml" 363 11567 11607 "solving.ml" 363 11567 11615
type(
  'a4 Apron.Abstract1.t
)
ident(
  int_ref abstract "solving.ml" 362 11513 11520 "solving.ml" 362 11513 11528
)
"solving.ml" 363 11567 11573 "solving.ml" 363 11567 11615
call(
  stack
)
type(
  bool
)
"solving.ml" 364 11621 11626 "solving.ml" 364 11621 11638
type(
  (Equation.vertex -> Equation.vertex -> int) -> Equation.vertex PSette.t
)
ident(
  ext_ref PSette.empty
)
"solving.ml" 364 11621 11639 "solving.ml" 364 11621 11661
type(
  Equation.vertex -> Equation.vertex -> int
)
ident(
  ext_ref Equation.compare_point
)
"solving.ml" 364 11621 11626 "solving.ml" 364 11621 11661
call(
  stack
)
type(
  Equation.vertex PSette.t
)
"solving.ml" 366 11670 11676 "solving.ml" 366 11670 11692
type(
  (Equation.vertex -> Equation.vertex -> int) ->
  Equation.vertex -> Equation.vertex PSette.t
)
ident(
  ext_ref PSette.singleton
)
"solving.ml" 366 11670 11693 "solving.ml" 366 11670 11715
type(
  Equation.vertex -> Equation.vertex -> int
)
ident(
  ext_ref Equation.compare_point
)
"solving.ml" 366 11670 11716 "solving.ml" 366 11670 11721
type(
  Equation.vertex
)
ident(
  int_ref start "solving.ml" 357 11349 11359 "solving.ml" 357 11349 11364
)
"solving.ml" 366 11670 11675 "solving.ml" 366 11670 11722
call(
  stack
)
type(
  Equation.vertex PSette.t
)
"solving.ml" 363 11567 11570 "solving.ml" 366 11670 11722
type(
  Equation.vertex PSette.t
)
"solving.ml" 362 11513 11516 "solving.ml" 366 11670 11722
type(
  Equation.vertex PSette.t
)
"solving.ml" 358 11395 11401 "solving.ml" 367 11723 11732
type(
  Equation.vertex PSette.t
)
"solving.ml" 357 11349 11355 "solving.ml" 367 11723 11732
type(
  Equation.vertex PSette.t
)
"solving.ml" 356 11287 11293 "solving.ml" 367 11723 11732
type(
  Equation.vertex PSette.t
)
"solving.ml" 369 11740 11747 "solving.ml" 369 11740 11762
type(
  Equation.vertex PSette.t -> bool
)
ident(
  ext_ref PSette.is_empty
)
"solving.ml" 369 11740 11763 "solving.ml" 369 11740 11769
type(
  Equation.vertex PSette.t
)
ident(
  int_ref sstart "solving.ml" 355 11270 11278 "solving.ml" 355 11270 11284
)
"solving.ml" 369 11740 11747 "solving.ml" 369 11740 11769
call(
  stack
)
type(
  bool
)
"solving.ml" 370 11781 11787 "solving.ml" 370 11781 11803
type(
  Equation.graph ->
  'a4 Apron.Manager.t ->
  (Equation.vertex, Equation.hedge, 'a4 Apron.Abstract1.t, unit)
  Fixpoint.output
)
ident(
  int_ref make_emptyoutput "solving.ml" 103 3641 3645 "solving.ml" 103 3641 3661
)
"solving.ml" 370 11781 11804 "solving.ml" 370 11781 11809
type(
  Equation.graph
)
ident(
  int_ref graph "solving.ml" 347 10972 10979 "solving.ml" 347 10972 10984
)
"solving.ml" 370 11781 11810 "solving.ml" 370 11781 11817
type(
  'a4 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 349 11091 11098 "solving.ml" 349 11091 11105
)
"solving.ml" 369 11740 11775 "solving.ml" 371 11818 11825
call(
  tail
)
type(
  (Equation.vertex, Equation.hedge, 'a4 Apron.Abstract1.t, unit)
  Fixpoint.output
)
"solving.ml" 373 11841 11851 "solving.ml" 373 11841 11864
type(
  Spl_syn.point -> 'a4 Apron.Abstract1.t
)
ident(
  def abstract_init "solving.ml" 382 12082 12088 "solving.ml" 411 12963 12971
)
"solving.ml" 373 11841 11877 "solving.ml" 373 11841 11883
type(
  Spl_syn.point
)
ident(
  def vertex "solving.ml" 374 11887 11888 "solving.ml" 379 12058 12062
)
"solving.ml" 374 11887 11900 "solving.ml" 374 11887 11906
type(
  (Spl_syn.point, int, 'a4 Apron.Abstract1.t, unit) Fixpoint.output option
)
ident(
  int_ref output "solving.ml" 348 11001 11009 "solving.ml" 348 11001 11015
)
"solving.ml" 375 11912 11915 "solving.ml" 375 11912 11919
type(
  (Spl_syn.point, int, 'a4 Apron.Abstract1.t, unit) Fixpoint.output option
)
"solving.ml" 376 11923 11928 "solving.ml" 376 11923 11947
type(
  'a4 Apron.Manager.t -> Apron.Environment.t -> 'a4 Apron.Abstract1.t
)
ident(
  ext_ref Apron.Abstract1.top
)
"solving.ml" 376 11923 11948 "solving.ml" 376 11923 11955
type(
  'a4 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 349 11091 11098 "solving.ml" 349 11091 11105
)
"solving.ml" 376 11923 11957 "solving.ml" 376 11923 11968
type(
  (Spl_syn.point, Apron.Environment.t) Hashhe.t ->
  Spl_syn.point -> Apron.Environment.t
)
ident(
  ext_ref Hashhe.find
)
"solving.ml" 376 11923 11969 "solving.ml" 376 11923 11973
type(
  Equation.info
)
ident(
  int_ref info "solving.ml" 354 11232 11240 "solving.ml" 354 11232 11244
)
"solving.ml" 376 11923 11969 "solving.ml" 376 11923 11991
type(
  (Spl_syn.point, Apron.Environment.t) Hashhe.t
)
"solving.ml" 376 11923 11992 "solving.ml" 376 11923 11998
type(
  Spl_syn.point
)
ident(
  int_ref vertex "solving.ml" 373 11841 11877 "solving.ml" 373 11841 11883
)
"solving.ml" 376 11923 11956 "solving.ml" 376 11923 11999
call(
  stack
)
type(
  Apron.Environment.t
)
"solving.ml" 376 11923 11928 "solving.ml" 376 11923 11999
type(
  'a4 Apron.Abstract1.t
)
"solving.ml" 377 12000 12008 "solving.ml" 377 12000 12014
ident(
  def output "solving.ml" 378 12019 12024 "solving.ml" 378 12019 12057
)
"solving.ml" 377 12000 12007 "solving.ml" 377 12000 12015
type(
  (Spl_syn.point, int, 'a4 Apron.Abstract1.t, unit) Fixpoint.output
)
"solving.ml" 377 12000 12003 "solving.ml" 377 12000 12015
type(
  (Spl_syn.point, int, 'a4 Apron.Abstract1.t, unit) Fixpoint.output option
)
"solving.ml" 378 12019 12024 "solving.ml" 378 12019 12043
type(
  (Spl_syn.point, int, 'a4 Apron.Abstract1.t, unit) Fixpoint.output ->
  Spl_syn.point -> 'a4 Apron.Abstract1.t
)
ident(
  ext_ref PSHGraph.attrvertex
)
"solving.ml" 378 12019 12044 "solving.ml" 378 12019 12050
type(
  (Spl_syn.point, int, 'a4 Apron.Abstract1.t, unit) Fixpoint.output
)
ident(
  int_ref output "solving.ml" 377 12000 12007 "solving.ml" 377 12000 12015
)
"solving.ml" 378 12019 12051 "solving.ml" 378 12019 12057
type(
  Spl_syn.point
)
ident(
  int_ref vertex "solving.ml" 373 11841 11877 "solving.ml" 373 11841 11883
)
"solving.ml" 378 12019 12024 "solving.ml" 378 12019 12057
call(
  tail
)
type(
  'a4 Apron.Abstract1.t
)
"solving.ml" 374 11887 11888 "solving.ml" 379 12058 12062
type(
  'a4 Apron.Abstract1.t
)
"solving.ml" 373 11841 11867 "solving.ml" 380 12063 12072
type(
  Spl_syn.point -> 'a4 Apron.Abstract1.t
)
"solving.ml" 382 12082 12092 "solving.ml" 382 12082 12101
type(
  (Equation.vertex, Equation.hedge, 'a4 Apron.Abstract1.t, unit)
  Fixpoint.manager
)
ident(
  def fpmanager "solving.ml" 387 12197 12203 "solving.ml" 411 12963 12971
)
"solving.ml" 383 12104 12105 "solving.ml" 383 12104 12119
type(
  fmt:Format.formatter ->
  output:(Spl_syn.point, int, 'a4 Apron.Abstract1.t, unit) Fixpoint.output
         option ->
  debug:int ->
  graph:Equation.graph ->
  man:'a4 Apron.Manager.t ->
  abstract_init:(Spl_syn.point -> 'a4 Apron.Abstract1.t) ->
  apply:(Equation.graph ->
         output:(Spl_syn.point, int, 'a4 Apron.Abstract1.t, unit)
                Fixpoint.output option ->
         'a4 Apron.Manager.t ->
         int -> 'a4 Apron.Abstract1.t array -> unit * 'a4 Apron.Abstract1.t) ->
  (Equation.vertex, Equation.hedge, 'a4 Apron.Abstract1.t, unit)
  Fixpoint.manager
)
ident(
  int_ref make_fpmanager "solving.ml" 27 927 931 "solving.ml" 27 927 945
)
"solving.ml" 383 12104 12121 "solving.ml" 383 12104 12124
type(
  Format.formatter
)
ident(
  int_ref fmt "solving.ml" 346 10940 10948 "solving.ml" 346 10940 10951
)
"solving.ml" 383 12104 12126 "solving.ml" 383 12104 12132
type(
  (Spl_syn.point, int, 'a4 Apron.Abstract1.t, unit) Fixpoint.output option
)
ident(
  int_ref output "solving.ml" 348 11001 11009 "solving.ml" 348 11001 11015
)
"solving.ml" 383 12104 12134 "solving.ml" 383 12104 12139
type(
  int
)
ident(
  int_ref debug "solving.ml" 350 11126 11134 "solving.ml" 350 11126 11139
)
"solving.ml" 383 12104 12141 "solving.ml" 383 12104 12146
type(
  Equation.graph
)
ident(
  int_ref graph "solving.ml" 347 10972 10979 "solving.ml" 347 10972 10984
)
"solving.ml" 384 12147 12155 "solving.ml" 384 12147 12162
type(
  'a4 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 349 11091 11098 "solving.ml" 349 11091 11105
)
"solving.ml" 385 12163 12167 "solving.ml" 385 12163 12180
type(
  Spl_syn.point -> 'a4 Apron.Abstract1.t
)
ident(
  int_ref abstract_init "solving.ml" 373 11841 11851 "solving.ml" 373 11841 11864
)
"solving.ml" 385 12163 12182 "solving.ml" 385 12163 12187
type(
  Equation.graph ->
  output:(Spl_syn.point, int, 'a4 Apron.Abstract1.t, unit) Fixpoint.output
         option ->
  'a4 Apron.Manager.t ->
  int -> 'a4 Apron.Abstract1.t array -> unit * 'a4 Apron.Abstract1.t
)
ident(
  int_ref apply "solving.ml" 307 9670 9676 "solving.ml" 307 9670 9681
)
"solving.ml" 383 12104 12105 "solving.ml" 385 12163 12187
call(
  stack
)
type(
  (Equation.vertex, Equation.hedge, 'a4 Apron.Abstract1.t, unit)
  Fixpoint.manager
)
"solving.ml" 387 12197 12207 "solving.ml" 387 12197 12209
type(
  (Equation.vertex, Equation.hedge, 'a4 Apron.Abstract1.t, unit)
  Fixpoint.output
)
ident(
  def fp "solving.ml" 411 12963 12969 "solving.ml" 411 12963 12971
)
"solving.ml" 388 12212 12216 "solving.ml" 388 12212 12217
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"solving.ml" 388 12212 12217 "solving.ml" 388 12212 12240
type(
  bool ref
)
ident(
  ext_ref Option.iteration_guided
)
"solving.ml" 388 12212 12216 "solving.ml" 388 12212 12240
type(
  bool
)
"solving.ml" 389 12246 12249 "solving.ml" 389 12246 12273
type(
  (Equation.vertex, Equation.hedge, 'a4 Apron.Abstract1.t, unit)
  Fixpoint.manager ->
  Equation.graph ->
  Equation.vertex PSette.t ->
  ((Equation.hedge -> bool) ->
   (Equation.vertex, Equation.hedge) Fixpoint.strategy) ->
  (Equation.vertex, Equation.hedge, 'a4 Apron.Abstract1.t, unit)
  Fixpoint.output
)
ident(
  ext_ref Fixpoint.analysis_guided
)
"solving.ml" 390 12274 12279 "solving.ml" 390 12274 12288
type(
  (Equation.vertex, Equation.hedge, 'a4 Apron.Abstract1.t, unit)
  Fixpoint.manager
)
ident(
  int_ref fpmanager "solving.ml" 382 12082 12092 "solving.ml" 382 12082 12101
)
"solving.ml" 390 12274 12289 "solving.ml" 390 12274 12294
type(
  Equation.graph
)
ident(
  int_ref graph "solving.ml" 347 10972 10979 "solving.ml" 347 10972 10984
)
"solving.ml" 390 12274 12295 "solving.ml" 390 12274 12301
type(
  Equation.vertex PSette.t
)
ident(
  int_ref sstart "solving.ml" 355 11270 11278 "solving.ml" 355 11270 11284
)
"solving.ml" 391 12302 12312 "solving.ml" 391 12302 12318
type(
  Equation.hedge -> bool
)
ident(
  def filter "solving.ml" 392 12323 12330 "solving.ml" 399 12597 12611
)
"solving.ml" 392 12323 12330 "solving.ml" 392 12323 12360
type(
  ?depth:int ->
  ?widening_start:int ->
  ?widening_descend:int ->
  ?priority:Equation.hedge PSHGraph.priority ->
  vertex_dummy:Equation.vertex ->
  hedge_dummy:Equation.hedge ->
  Equation.graph ->
  Equation.vertex PSette.t ->
  (Equation.vertex, Equation.hedge) Fixpoint.strategy
)
ident(
  ext_ref Fixpoint.make_strategy_default
)
"solving.ml" 393 12361 12377 "solving.ml" 393 12361 12398
type(
  Equation.vertex
)
ident(
  ext_ref Equation.vertex_dummy
)
"solving.ml" 394 12399 12414 "solving.ml" 394 12399 12434
type(
  Equation.hedge
)
ident(
  ext_ref Equation.hedge_dummy
)
"solving.ml" 395 12435 12464 "solving.ml" 395 12435 12470
type(
  Equation.hedge -> bool
)
ident(
  int_ref filter "solving.ml" 391 12302 12312 "solving.ml" 391 12302 12318
)
"solving.ml" 395 12435 12447 "solving.ml" 395 12435 12471
type(
  Equation.hedge PSHGraph.priority
)
"solving.ml" 396 12472 12491 "solving.ml" 396 12472 12492
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"solving.ml" 396 12472 12492 "solving.ml" 396 12472 12513
type(
  int ref
)
ident(
  ext_ref Option.widening_start
)
"solving.ml" 396 12472 12490 "solving.ml" 396 12472 12514
type(
  int
)
"solving.ml" 397 12515 12536 "solving.ml" 397 12515 12537
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"solving.ml" 397 12515 12537 "solving.ml" 397 12515 12560
type(
  int ref
)
ident(
  ext_ref Option.widening_descend
)
"solving.ml" 397 12515 12535 "solving.ml" 397 12515 12561
type(
  int
)
"solving.ml" 398 12562 12572 "solving.ml" 398 12562 12573
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"solving.ml" 398 12562 12573 "solving.ml" 398 12562 12595
type(
  int ref
)
ident(
  ext_ref Option.iteration_depth
)
"solving.ml" 398 12562 12571 "solving.ml" 398 12562 12596
type(
  int
)
"solving.ml" 399 12597 12599 "solving.ml" 399 12597 12604
type(
  Equation.graph
)
ident(
  int_ref graph "solving.ml" 347 10972 10979 "solving.ml" 347 10972 10984
)
"solving.ml" 399 12597 12605 "solving.ml" 399 12597 12611
type(
  Equation.vertex PSette.t
)
ident(
  int_ref sstart "solving.ml" 355 11270 11278 "solving.ml" 355 11270 11284
)
"solving.ml" 392 12323 12330 "solving.ml" 399 12597 12611
call(
  tail
)
type(
  (Equation.vertex, Equation.hedge) Fixpoint.strategy
)
"solving.ml" 391 12302 12307 "solving.ml" 399 12597 12612
type(
  (Equation.hedge -> bool) ->
  (Equation.vertex, Equation.hedge) Fixpoint.strategy
)
"solving.ml" 389 12246 12249 "solving.ml" 399 12597 12612
call(
  tail
)
type(
  (Equation.vertex, Equation.hedge, 'a4 Apron.Abstract1.t, unit)
  Fixpoint.output
)
"solving.ml" 401 12619 12622 "solving.ml" 401 12619 12643
type(
  (Equation.vertex, Equation.hedge, 'a4 Apron.Abstract1.t, unit)
  Fixpoint.manager ->
  Equation.graph ->
  Equation.vertex PSette.t ->
  (Equation.vertex, Equation.hedge) Fixpoint.strategy ->
  (Equation.vertex, Equation.hedge, 'a4 Apron.Abstract1.t, unit)
  Fixpoint.output
)
ident(
  ext_ref Fixpoint.analysis_std
)
"solving.ml" 402 12644 12649 "solving.ml" 402 12644 12658
type(
  (Equation.vertex, Equation.hedge, 'a4 Apron.Abstract1.t, unit)
  Fixpoint.manager
)
ident(
  int_ref fpmanager "solving.ml" 382 12082 12092 "solving.ml" 382 12082 12101
)
"solving.ml" 402 12644 12659 "solving.ml" 402 12644 12664
type(
  Equation.graph
)
ident(
  int_ref graph "solving.ml" 347 10972 10979 "solving.ml" 347 10972 10984
)
"solving.ml" 402 12644 12665 "solving.ml" 402 12644 12671
type(
  Equation.vertex PSette.t
)
ident(
  int_ref sstart "solving.ml" 355 11270 11278 "solving.ml" 355 11270 11284
)
"solving.ml" 403 12672 12678 "solving.ml" 403 12672 12708
type(
  ?depth:int ->
  ?widening_start:int ->
  ?widening_descend:int ->
  ?priority:Equation.hedge PSHGraph.priority ->
  vertex_dummy:Equation.vertex ->
  hedge_dummy:Equation.hedge ->
  Equation.graph ->
  Equation.vertex PSette.t ->
  (Equation.vertex, Equation.hedge) Fixpoint.strategy
)
ident(
  ext_ref Fixpoint.make_strategy_default
)
"solving.ml" 404 12709 12730 "solving.ml" 404 12709 12751
type(
  Equation.vertex
)
ident(
  ext_ref Equation.vertex_dummy
)
"solving.ml" 405 12752 12772 "solving.ml" 405 12752 12792
type(
  Equation.hedge
)
ident(
  ext_ref Equation.hedge_dummy
)
"solving.ml" 406 12793 12817 "solving.ml" 406 12793 12818
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"solving.ml" 406 12793 12818 "solving.ml" 406 12793 12839
type(
  int ref
)
ident(
  ext_ref Option.widening_start
)
"solving.ml" 406 12793 12816 "solving.ml" 406 12793 12840
type(
  int
)
"solving.ml" 407 12841 12867 "solving.ml" 407 12841 12868
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"solving.ml" 407 12841 12868 "solving.ml" 407 12841 12891
type(
  int ref
)
ident(
  ext_ref Option.widening_descend
)
"solving.ml" 407 12841 12866 "solving.ml" 407 12841 12892
type(
  int
)
"solving.ml" 408 12893 12908 "solving.ml" 408 12893 12909
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"solving.ml" 408 12893 12909 "solving.ml" 408 12893 12931
type(
  int ref
)
ident(
  ext_ref Option.iteration_depth
)
"solving.ml" 408 12893 12907 "solving.ml" 408 12893 12932
type(
  int
)
"solving.ml" 409 12933 12940 "solving.ml" 409 12933 12945
type(
  Equation.graph
)
ident(
  int_ref graph "solving.ml" 347 10972 10979 "solving.ml" 347 10972 10984
)
"solving.ml" 409 12933 12946 "solving.ml" 409 12933 12952
type(
  Equation.vertex PSette.t
)
ident(
  int_ref sstart "solving.ml" 355 11270 11278 "solving.ml" 355 11270 11284
)
"solving.ml" 403 12672 12677 "solving.ml" 409 12933 12953
call(
  stack
)
type(
  (Equation.vertex, Equation.hedge) Fixpoint.strategy
)
"solving.ml" 401 12619 12622 "solving.ml" 409 12933 12953
call(
  tail
)
type(
  (Equation.vertex, Equation.hedge, 'a4 Apron.Abstract1.t, unit)
  Fixpoint.output
)
"solving.ml" 388 12212 12213 "solving.ml" 409 12933 12953
type(
  (Equation.vertex, Equation.hedge, 'a4 Apron.Abstract1.t, unit)
  Fixpoint.output
)
"solving.ml" 411 12963 12969 "solving.ml" 411 12963 12971
type(
  (Equation.vertex, Equation.hedge, 'a4 Apron.Abstract1.t, unit)
  Fixpoint.output
)
ident(
  int_ref fp "solving.ml" 387 12197 12207 "solving.ml" 387 12197 12209
)
"solving.ml" 387 12197 12203 "solving.ml" 411 12963 12971
type(
  (Equation.vertex, Equation.hedge, 'a4 Apron.Abstract1.t, unit)
  Fixpoint.output
)
"solving.ml" 382 12082 12088 "solving.ml" 411 12963 12971
type(
  (Equation.vertex, Equation.hedge, 'a4 Apron.Abstract1.t, unit)
  Fixpoint.output
)
"solving.ml" 372 11826 11835 "solving.ml" 412 12972 12979
type(
  (Equation.vertex, Equation.hedge, 'a4 Apron.Abstract1.t, unit)
  Fixpoint.output
)
"solving.ml" 369 11740 11744 "solving.ml" 412 12972 12979
type(
  (Equation.vertex, Equation.hedge, 'a4 Apron.Abstract1.t, unit)
  Fixpoint.output
)
"solving.ml" 355 11270 11274 "solving.ml" 412 12972 12979
type(
  (Equation.vertex, Equation.hedge, 'a4 Apron.Abstract1.t, unit)
  Fixpoint.output
)
"solving.ml" 354 11232 11236 "solving.ml" 412 12972 12979
type(
  (Spl_syn.point, int, 'a4 Apron.Abstract1.t, unit) Fixpoint.output
)
type(
  (Equation.vertex, Equation.hedge, 'a4 Apron.Abstract1.t, unit)
  Fixpoint.output
)
"solving.ml" 425 13387 13393 "solving.ml" 425 13387 13406
type(
  'a Apron.Manager.t ->
  'a Apron.Abstract1.t ->
  Apron.Var.t ->
  Apron.Texpr1.t -> 'a Apron.Abstract1.t option -> 'a Apron.Abstract1.t
)
ident(
  def apply_tassign "solving.ml" 446 13851 13853 "solving.ml" 662 20608 20611
)
"solving.ml" 426 13407 13412 "solving.ml" 426 13407 13419
type(
  'a Apron.Manager.t
)
ident(
  def manager "solving.ml" 427 13440 13444 "solving.ml" 444 13842 13849
)
"solving.ml" 427 13440 13445 "solving.ml" 427 13440 13453
type(
  'a Apron.Abstract1.t
)
ident(
  def abstract "solving.ml" 428 13476 13480 "solving.ml" 444 13842 13849
)
"solving.ml" 428 13476 13481 "solving.ml" 428 13476 13484
type(
  Apron.Var.t
)
ident(
  def var "solving.ml" 429 13499 13503 "solving.ml" 444 13842 13849
)
"solving.ml" 429 13499 13504 "solving.ml" 429 13499 13508
type(
  Apron.Texpr1.t
)
ident(
  def expr "solving.ml" 430 13525 13529 "solving.ml" 444 13842 13849
)
"solving.ml" 430 13525 13530 "solving.ml" 430 13525 13534
type(
  'a Apron.Abstract1.t option
)
ident(
  def dest "solving.ml" 432 13570 13574 "solving.ml" 444 13842 13849
)
"solving.ml" 432 13570 13578 "solving.ml" 432 13570 13581
type(
  'a Apron.Abstract1.t
)
ident(
  def res "solving.ml" 444 13842 13846 "solving.ml" 444 13842 13849
)
"solving.ml" 433 13584 13590 "solving.ml" 433 13584 13622
type(
  'a Apron.Manager.t ->
  'a Apron.Abstract1.t ->
  Apron.Var.t ->
  Apron.Texpr1.t -> 'a Apron.Abstract1.t option -> 'a Apron.Abstract1.t
)
ident(
  ext_ref Apron.Abstract1.substitute_texpr
)
"solving.ml" 434 13623 13624 "solving.ml" 434 13623 13631
type(
  'a Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 426 13407 13412 "solving.ml" 426 13407 13419
)
"solving.ml" 434 13623 13632 "solving.ml" 434 13623 13640
type(
  'a Apron.Abstract1.t
)
ident(
  int_ref abstract "solving.ml" 427 13440 13445 "solving.ml" 427 13440 13453
)
"solving.ml" 435 13641 13642 "solving.ml" 435 13641 13645
type(
  Apron.Var.t
)
ident(
  int_ref var "solving.ml" 428 13476 13481 "solving.ml" 428 13476 13484
)
"solving.ml" 435 13641 13646 "solving.ml" 435 13641 13650
type(
  Apron.Texpr1.t
)
ident(
  int_ref expr "solving.ml" 429 13499 13504 "solving.ml" 429 13499 13508
)
"solving.ml" 435 13641 13651 "solving.ml" 435 13641 13655
type(
  'a Apron.Abstract1.t option
)
ident(
  int_ref dest "solving.ml" 430 13525 13530 "solving.ml" 430 13525 13534
)
"solving.ml" 433 13584 13590 "solving.ml" 435 13641 13655
call(
  tail
)
type(
  'a Apron.Abstract1.t
)
"solving.ml" 444 13842 13846 "solving.ml" 444 13842 13849
type(
  'a Apron.Abstract1.t
)
ident(
  int_ref res "solving.ml" 432 13570 13578 "solving.ml" 432 13570 13581
)
"solving.ml" 432 13570 13574 "solving.ml" 444 13842 13849
type(
  'a Apron.Abstract1.t
)
"solving.ml" 446 13851 13857 "solving.ml" 446 13851 13872
type(
  'b Apron.Manager.t ->
  'b Apron.Abstract1.t ->
  Apron.Tcons1.earray Boolexpr.t ->
  'b Apron.Abstract1.t option -> 'b Apron.Abstract1.t
)
ident(
  def apply_condition "solving.ml" 448 13900 13902 "solving.ml" 662 20608 20611
)
"solving.ml" 446 13851 13875 "solving.ml" 446 13851 13898
type(
  'b Apron.Manager.t ->
  'b Apron.Abstract1.t ->
  Apron.Tcons1.earray Boolexpr.t ->
  'b Apron.Abstract1.t option -> 'b Apron.Abstract1.t
)
ident(
  int_ref Forward.apply_condition "solving.ml" 176 5636 5642 "solving.ml" 176 5636 5657
)
"solving.ml" 448 13900 13906 "solving.ml" 448 13900 13916
type(
  'a0 Apron.Manager.t ->
  'a0 Apron.Abstract1.t ->
  Equation.procinfo ->
  Equation.procinfo ->
  Apron.Var.t array -> 'a0 Apron.Abstract1.t option -> 'a0 Apron.Abstract1.t
)
ident(
  def apply_call "solving.ml" 487 15101 15103 "solving.ml" 662 20608 20611
)
"solving.ml" 449 13917 13922 "solving.ml" 449 13917 13929
type(
  'a0 Apron.Manager.t
)
ident(
  def manager "solving.ml" 450 13950 13954 "solving.ml" 485 15086 15099
)
"solving.ml" 450 13950 13955 "solving.ml" 450 13950 13963
type(
  'a0 Apron.Abstract1.t
)
ident(
  def abstract "solving.ml" 451 13986 13990 "solving.ml" 485 15086 15099
)
"solving.ml" 451 13986 13991 "solving.ml" 451 13986 14001
type(
  Equation.procinfo
)
ident(
  def callerinfo "solving.ml" 452 14021 14025 "solving.ml" 485 15086 15099
)
"solving.ml" 452 14021 14026 "solving.ml" 452 14021 14036
type(
  Equation.procinfo
)
ident(
  def calleeinfo "solving.ml" 453 14056 14060 "solving.ml" 485 15086 15099
)
"solving.ml" 453 14056 14061 "solving.ml" 453 14056 14067
type(
  Apron.Var.t array
)
ident(
  def inargs "solving.ml" 454 14087 14091 "solving.ml" 485 15086 15099
)
"solving.ml" 454 14087 14092 "solving.ml" 454 14087 14096
type(
  'a0 Apron.Abstract1.t option
)
ident(
  def dest "solving.ml" 457 14162 14166 "solving.ml" 485 15086 15099
)
"solving.ml" 457 14162 14170 "solving.ml" 457 14162 14173
type(
  Apron.Environment.t
)
ident(
  def env "solving.ml" 460 14306 14310 "solving.ml" 485 15086 15099
)
"solving.ml" 457 14162 14176 "solving.ml" 457 14162 14195
type(
  'a0 Apron.Abstract1.t -> Apron.Environment.t
)
ident(
  ext_ref Apron.Abstract1.env
)
"solving.ml" 457 14162 14196 "solving.ml" 457 14162 14204
type(
  'a0 Apron.Abstract1.t
)
ident(
  int_ref abstract "solving.ml" 450 13950 13955 "solving.ml" 450 13950 13963
)
"solving.ml" 457 14162 14176 "solving.ml" 457 14162 14204
call(
  stack
)
type(
  Apron.Environment.t
)
"solving.ml" 460 14306 14314 "solving.ml" 460 14306 14318
type(
  Apron.Environment.t
)
ident(
  def tenv "solving.ml" 465 14418 14422 "solving.ml" 485 15086 15099
)
"solving.ml" 461 14321 14327 "solving.ml" 461 14321 14346
type(
  (Apron.Var.t -> Apron.Environment.typvar) ->
  Apron.Var.t array -> Apron.Environment.t
)
ident(
  int_ref environment_of_tvar "solving.ml" 125 4280 4284 "solving.ml" 125 4280 4303
)
"solving.ml" 462 14347 14349 "solving.ml" 462 14347 14377
type(
  Apron.Environment.t -> Apron.Var.t -> Apron.Environment.typvar
)
ident(
  ext_ref Apron.Environment.typ_of_var
)
"solving.ml" 462 14347 14378 "solving.ml" 462 14347 14381
type(
  Apron.Environment.t
)
ident(
  int_ref env "solving.ml" 457 14162 14170 "solving.ml" 457 14162 14173
)
"solving.ml" 462 14347 14348 "solving.ml" 462 14347 14382
call(
  stack
)
type(
  Apron.Var.t -> Apron.Environment.typvar
)
"solving.ml" 463 14383 14384 "solving.ml" 463 14383 14394
type(
  Equation.procinfo
)
ident(
  int_ref calleeinfo "solving.ml" 452 14021 14026 "solving.ml" 452 14021 14036
)
"solving.ml" 463 14383 14384 "solving.ml" 463 14383 14410
type(
  Apron.Var.t array
)
"solving.ml" 461 14321 14327 "solving.ml" 463 14383 14410
call(
  stack
)
type(
  Apron.Environment.t
)
"solving.ml" 465 14418 14426 "solving.ml" 465 14418 14435
type(
  'a0 Apron.Abstract1.t
)
ident(
  def abstract2 "solving.ml" 470 14622 14626 "solving.ml" 485 15086 15099
)
"solving.ml" 466 14438 14444 "solving.ml" 466 14438 14478
type(
  'a0 Apron.Manager.t ->
  'a0 Apron.Abstract1.t ->
  Apron.Environment.t -> bool -> 'a0 Apron.Abstract1.t
)
ident(
  ext_ref Apron.Abstract1.change_environment
)
"solving.ml" 466 14438 14479 "solving.ml" 466 14438 14486
type(
  'a0 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 449 13917 13922 "solving.ml" 449 13917 13929
)
"solving.ml" 466 14438 14487 "solving.ml" 466 14438 14495
type(
  'a0 Apron.Abstract1.t
)
ident(
  int_ref abstract "solving.ml" 450 13950 13955 "solving.ml" 450 13950 13963
)
"solving.ml" 466 14438 14496 "solving.ml" 466 14438 14500
type(
  Apron.Environment.t
)
ident(
  int_ref tenv "solving.ml" 460 14306 14314 "solving.ml" 460 14306 14318
)
"solving.ml" 466 14438 14501 "solving.ml" 466 14438 14506
type(
  bool
)
"solving.ml" 466 14438 14444 "solving.ml" 466 14438 14506
type(
  'a0 Apron.Abstract1.t
)
"solving.ml" 470 14622 14626 "solving.ml" 470 14622 14659
type(
  'a0 Apron.Manager.t ->
  'a0 Apron.Abstract1.t -> Apron.Var.t array -> Apron.Var.t array -> unit
)
ident(
  ext_ref Apron.Abstract1.rename_array_with
)
"solving.ml" 471 14660 14666 "solving.ml" 471 14660 14673
type(
  'a0 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 449 13917 13922 "solving.ml" 449 13917 13929
)
"solving.ml" 471 14660 14674 "solving.ml" 471 14660 14683
type(
  'a0 Apron.Abstract1.t
)
ident(
  int_ref abstract2 "solving.ml" 465 14418 14426 "solving.ml" 465 14418 14435
)
"solving.ml" 472 14684 14690 "solving.ml" 472 14684 14700
type(
  Equation.procinfo
)
ident(
  int_ref calleeinfo "solving.ml" 452 14021 14026 "solving.ml" 452 14021 14036
)
"solving.ml" 472 14684 14690 "solving.ml" 472 14684 14716
type(
  Apron.Var.t array
)
"solving.ml" 472 14684 14717 "solving.ml" 472 14684 14723
type(
  Apron.Var.t array
)
ident(
  int_ref inargs "solving.ml" 453 14056 14061 "solving.ml" 453 14056 14067
)
"solving.ml" 470 14622 14626 "solving.ml" 472 14684 14723
type(
  unit
)
"solving.ml" 475 14780 14784 "solving.ml" 475 14780 14823
type(
  'a0 Apron.Manager.t ->
  'a0 Apron.Abstract1.t -> Apron.Environment.t -> bool -> unit
)
ident(
  ext_ref Apron.Abstract1.change_environment_with
)
"solving.ml" 476 14824 14830 "solving.ml" 476 14824 14837
type(
  'a0 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 449 13917 13922 "solving.ml" 449 13917 13929
)
"solving.ml" 476 14824 14838 "solving.ml" 476 14824 14847
type(
  'a0 Apron.Abstract1.t
)
ident(
  int_ref abstract2 "solving.ml" 465 14418 14426 "solving.ml" 465 14418 14435
)
"solving.ml" 477 14848 14854 "solving.ml" 477 14848 14864
type(
  Equation.procinfo
)
ident(
  int_ref callerinfo "solving.ml" 451 13986 13991 "solving.ml" 451 13986 14001
)
"solving.ml" 477 14848 14854 "solving.ml" 477 14848 14878
type(
  Apron.Environment.t
)
"solving.ml" 477 14848 14879 "solving.ml" 477 14848 14884
type(
  bool
)
"solving.ml" 475 14780 14784 "solving.ml" 477 14848 14884
type(
  unit
)
"solving.ml" 480 14965 14981 "solving.ml" 480 14965 14985
type(
  'a0 Apron.Abstract1.t option
)
ident(
  int_ref dest "solving.ml" 454 14087 14092 "solving.ml" 454 14087 14096
)
"solving.ml" 481 14991 14997 "solving.ml" 481 14991 15001
type(
  'a0 Apron.Abstract1.t option
)
"solving.ml" 481 14991 15005 "solving.ml" 481 14991 15007
type(
  unit
)
"solving.ml" 482 15008 15019 "solving.ml" 482 15008 15023
type(
  'a0 Apron.Abstract1.t
)
ident(
  def dest "solving.ml" 483 15027 15028 "solving.ml" 483 15027 15076
)
"solving.ml" 482 15008 15014 "solving.ml" 482 15008 15023
type(
  'a0 Apron.Abstract1.t option
)
"solving.ml" 483 15027 15028 "solving.ml" 483 15027 15053
type(
  'a0 Apron.Manager.t ->
  'a0 Apron.Abstract1.t -> 'a0 Apron.Abstract1.t -> unit
)
ident(
  ext_ref Apron.Abstract1.meet_with
)
"solving.ml" 483 15027 15054 "solving.ml" 483 15027 15061
type(
  'a0 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 449 13917 13922 "solving.ml" 449 13917 13929
)
"solving.ml" 483 15027 15062 "solving.ml" 483 15027 15071
type(
  'a0 Apron.Abstract1.t
)
ident(
  int_ref abstract2 "solving.ml" 465 14418 14426 "solving.ml" 465 14418 14435
)
"solving.ml" 483 15027 15072 "solving.ml" 483 15027 15076
type(
  'a0 Apron.Abstract1.t
)
ident(
  int_ref dest "solving.ml" 482 15008 15019 "solving.ml" 482 15008 15023
)
"solving.ml" 483 15027 15028 "solving.ml" 483 15027 15076
type(
  unit
)
"solving.ml" 480 14965 14969 "solving.ml" 484 15077 15084
type(
  unit
)
"solving.ml" 485 15086 15090 "solving.ml" 485 15086 15099
type(
  'a0 Apron.Abstract1.t
)
ident(
  int_ref abstract2 "solving.ml" 465 14418 14426 "solving.ml" 465 14418 14435
)
"solving.ml" 480 14965 14969 "solving.ml" 485 15086 15099
type(
  'a0 Apron.Abstract1.t
)
"solving.ml" 475 14780 14784 "solving.ml" 485 15086 15099
type(
  'a0 Apron.Abstract1.t
)
"solving.ml" 470 14622 14626 "solving.ml" 485 15086 15099
type(
  'a0 Apron.Abstract1.t
)
"solving.ml" 465 14418 14422 "solving.ml" 485 15086 15099
type(
  'a0 Apron.Abstract1.t
)
"solving.ml" 460 14306 14310 "solving.ml" 485 15086 15099
type(
  'a0 Apron.Abstract1.t
)
"solving.ml" 457 14162 14166 "solving.ml" 485 15086 15099
type(
  'a0 Apron.Abstract1.t
)
"solving.ml" 487 15101 15107 "solving.ml" 487 15101 15119
type(
  'a1 Apron.Manager.t ->
  'a1 Apron.Abstract1.t ->
  Equation.procinfo ->
  Equation.procinfo ->
  Apron.Var.t array ->
  Apron.Var.t array -> 'a1 Apron.Abstract1.t option -> 'a1 Apron.Abstract1.t
)
ident(
  def apply_return "solving.ml" 549 17162 17164 "solving.ml" 662 20608 20611
)
"solving.ml" 488 15120 15125 "solving.ml" 488 15120 15132
type(
  'a1 Apron.Manager.t
)
ident(
  def manager "solving.ml" 489 15153 15157 "solving.ml" 546 17121 17128
)
"solving.ml" 489 15153 15158 "solving.ml" 489 15153 15166
type(
  'a1 Apron.Abstract1.t
)
ident(
  def abstract "solving.ml" 490 15189 15193 "solving.ml" 546 17121 17128
)
"solving.ml" 490 15189 15194 "solving.ml" 490 15189 15204
type(
  Equation.procinfo
)
ident(
  def callerinfo "solving.ml" 491 15224 15228 "solving.ml" 546 17121 17128
)
"solving.ml" 491 15224 15229 "solving.ml" 491 15224 15239
type(
  Equation.procinfo
)
ident(
  def calleeinfo "solving.ml" 492 15259 15263 "solving.ml" 546 17121 17128
)
"solving.ml" 492 15259 15264 "solving.ml" 492 15259 15270
type(
  Apron.Var.t array
)
ident(
  def inargs "solving.ml" 492 15259 15290 "solving.ml" 546 17121 17128
)
"solving.ml" 492 15259 15291 "solving.ml" 492 15259 15298
type(
  Apron.Var.t array
)
ident(
  def outargs "solving.ml" 493 15318 15322 "solving.ml" 546 17121 17128
)
"solving.ml" 493 15318 15323 "solving.ml" 493 15318 15327
type(
  'a1 Apron.Abstract1.t option
)
ident(
  def dest "solving.ml" 496 15442 15446 "solving.ml" 546 17121 17128
)
"solving.ml" 496 15442 15450 "solving.ml" 496 15442 15453
type(
  'a1 Apron.Abstract1.t
)
ident(
  def res "solving.ml" 503 15669 15673 "solving.ml" 546 17121 17128
)
"solving.ml" 497 15456 15462 "solving.ml" 497 15456 15490
type(
  'a1 Apron.Manager.t ->
  'a1 Apron.Abstract1.t ->
  Apron.Var.t array -> Apron.Var.t array -> 'a1 Apron.Abstract1.t
)
ident(
  ext_ref Apron.Abstract1.rename_array
)
"solving.ml" 498 15491 15492 "solving.ml" 498 15491 15499
type(
  'a1 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 488 15120 15125 "solving.ml" 488 15120 15132
)
"solving.ml" 498 15491 15500 "solving.ml" 498 15491 15508
type(
  'a1 Apron.Abstract1.t
)
ident(
  int_ref abstract "solving.ml" 489 15153 15158 "solving.ml" 489 15153 15166
)
"solving.ml" 499 15509 15510 "solving.ml" 499 15509 15517
type(
  Apron.Var.t array
)
ident(
  int_ref outargs "solving.ml" 492 15259 15291 "solving.ml" 492 15259 15298
)
"solving.ml" 499 15509 15518 "solving.ml" 499 15509 15528
type(
  Equation.procinfo
)
ident(
  int_ref calleeinfo "solving.ml" 491 15224 15229 "solving.ml" 491 15224 15239
)
"solving.ml" 499 15509 15518 "solving.ml" 499 15509 15549
type(
  Apron.Var.t array
)
"solving.ml" 497 15456 15462 "solving.ml" 499 15509 15549
type(
  'a1 Apron.Abstract1.t
)
"solving.ml" 503 15669 15677 "solving.ml" 503 15669 15681
type(
  Apron.Var.t list ref
)
ident(
  def lint "solving.ml" 504 15713 15717 "solving.ml" 546 17121 17128
)
"solving.ml" 503 15669 15684 "solving.ml" 503 15669 15687
type(
  Apron.Var.t list -> Apron.Var.t list ref
)
ident(
  ext_ref Pervasives.ref
)
"solving.ml" 503 15669 15688 "solving.ml" 503 15669 15690
type(
  Apron.Var.t list
)
"solving.ml" 503 15669 15684 "solving.ml" 503 15669 15690
type(
  Apron.Var.t list ref
)
"solving.ml" 503 15669 15695 "solving.ml" 503 15669 15700
type(
  Apron.Var.t list ref
)
ident(
  def lreal "solving.ml" 504 15713 15717 "solving.ml" 546 17121 17128
)
"solving.ml" 503 15669 15703 "solving.ml" 503 15669 15706
type(
  Apron.Var.t list -> Apron.Var.t list ref
)
ident(
  ext_ref Pervasives.ref
)
"solving.ml" 503 15669 15707 "solving.ml" 503 15669 15709
type(
  Apron.Var.t list
)
"solving.ml" 503 15669 15703 "solving.ml" 503 15669 15709
type(
  Apron.Var.t list ref
)
"solving.ml" 504 15713 15717 "solving.ml" 504 15713 15728
type(
  (int -> Apron.Var.t -> unit) -> Apron.Var.t array -> unit
)
ident(
  ext_ref Array.iteri
)
"solving.ml" 505 15729 15746 "solving.ml" 505 15729 15747
type(
  int
)
ident(
  def i "solving.ml" 505 15729 15748 "solving.ml" 512 15969 15994
)
"solving.ml" 505 15729 15748 "solving.ml" 505 15729 15751
type(
  Apron.Var.t
)
ident(
  def var "solving.ml" 506 15755 15756 "solving.ml" 512 15969 15994
)
"solving.ml" 506 15755 15760 "solving.ml" 506 15755 15764
type(
  Apron.Var.t list ref
)
ident(
  def list "solving.ml" 511 15915 15916 "solving.ml" 512 15969 15994
)
"solving.ml" 507 15767 15776 "solving.ml" 507 15767 15804
type(
  Apron.Environment.t -> Apron.Var.t -> Apron.Environment.typvar
)
ident(
  ext_ref Apron.Environment.typ_of_var
)
"solving.ml" 507 15767 15805 "solving.ml" 507 15767 15815
type(
  Equation.procinfo
)
ident(
  int_ref calleeinfo "solving.ml" 491 15224 15229 "solving.ml" 491 15224 15239
)
"solving.ml" 507 15767 15805 "solving.ml" 507 15767 15829
type(
  Apron.Environment.t
)
"solving.ml" 507 15767 15830 "solving.ml" 507 15767 15833
type(
  Apron.Var.t
)
ident(
  int_ref var "solving.ml" 505 15729 15748 "solving.ml" 505 15729 15751
)
"solving.ml" 507 15767 15776 "solving.ml" 507 15767 15833
type(
  Apron.Environment.typvar
)
"solving.ml" 508 15839 15844 "solving.ml" 508 15839 15865
type(
  Apron.Environment.typvar
)
"solving.ml" 508 15839 15869 "solving.ml" 508 15839 15873
type(
  Apron.Var.t list ref
)
ident(
  int_ref lint "solving.ml" 503 15669 15677 "solving.ml" 503 15669 15681
)
"solving.ml" 509 15874 15879 "solving.ml" 509 15874 15901
type(
  Apron.Environment.typvar
)
"solving.ml" 509 15874 15905 "solving.ml" 509 15874 15910
type(
  Apron.Var.t list ref
)
ident(
  int_ref lreal "solving.ml" 503 15669 15695 "solving.ml" 503 15669 15700
)
"solving.ml" 507 15767 15770 "solving.ml" 509 15874 15910
type(
  Apron.Var.t list ref
)
"solving.ml" 511 15915 15920 "solving.ml" 511 15915 15927
type(
  Apron.Var.t
)
ident(
  def var_tmp "solving.ml" 512 15969 15970 "solving.ml" 512 15969 15994
)
"solving.ml" 511 15915 15930 "solving.ml" 511 15915 15940
type(
  Equation.procinfo
)
ident(
  int_ref calleeinfo "solving.ml" 491 15224 15229 "solving.ml" 491 15224 15239
)
"solving.ml" 511 15915 15930 "solving.ml" 511 15915 15961
type(
  Apron.Var.t array
)
"solving.ml" 511 15915 15963 "solving.ml" 511 15915 15964
type(
  int
)
ident(
  int_ref i "solving.ml" 505 15729 15746 "solving.ml" 505 15729 15747
)
"solving.ml" 511 15915 15930 "solving.ml" 511 15915 15965
type(
  Apron.Var.t
)
"solving.ml" 512 15969 15970 "solving.ml" 512 15969 15974
type(
  Apron.Var.t list ref
)
ident(
  int_ref list "solving.ml" 506 15755 15760 "solving.ml" 506 15755 15764
)
"solving.ml" 512 15969 15975 "solving.ml" 512 15969 15977
type(
  Apron.Var.t list ref -> Apron.Var.t list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"solving.ml" 512 15969 15978 "solving.ml" 512 15969 15985
type(
  Apron.Var.t
)
ident(
  int_ref var_tmp "solving.ml" 511 15915 15920 "solving.ml" 511 15915 15927
)
"solving.ml" 512 15969 15989 "solving.ml" 512 15969 15990
type(
  Apron.Var.t list ref -> Apron.Var.t list
)
ident(
  ext_ref Pervasives.( ! )
)
"solving.ml" 512 15969 15990 "solving.ml" 512 15969 15994
type(
  Apron.Var.t list ref
)
ident(
  int_ref list "solving.ml" 506 15755 15760 "solving.ml" 506 15755 15764
)
"solving.ml" 512 15969 15989 "solving.ml" 512 15969 15994
type(
  Apron.Var.t list
)
"solving.ml" 512 15969 15978 "solving.ml" 512 15969 15994
type(
  Apron.Var.t list
)
"solving.ml" 512 15969 15970 "solving.ml" 512 15969 15994
type(
  unit
)
"solving.ml" 511 15915 15916 "solving.ml" 512 15969 15994
type(
  unit
)
"solving.ml" 506 15755 15756 "solving.ml" 512 15969 15994
type(
  unit
)
"solving.ml" 505 15729 15735 "solving.ml" 513 15995 16005
type(
  int -> Apron.Var.t -> unit
)
"solving.ml" 514 16006 16012 "solving.ml" 514 16006 16022
type(
  Equation.procinfo
)
ident(
  int_ref calleeinfo "solving.ml" 491 15224 15229 "solving.ml" 491 15224 15239
)
"solving.ml" 514 16006 16012 "solving.ml" 514 16006 16039
type(
  Apron.Var.t array
)
"solving.ml" 504 15713 15717 "solving.ml" 514 16006 16039
call(
  stack
)
type(
  unit
)
"solving.ml" 516 16046 16050 "solving.ml" 516 16046 16060
type(
  (Apron.Var.t -> unit) -> Apron.Var.t array -> unit
)
ident(
  ext_ref Array.iter
)
"solving.ml" 517 16061 16078 "solving.ml" 517 16061 16081
type(
  Apron.Var.t
)
ident(
  def var "solving.ml" 518 16085 16086 "solving.ml" 523 16245 16266
)
"solving.ml" 518 16085 16090 "solving.ml" 518 16085 16094
type(
  Apron.Var.t list ref
)
ident(
  def list "solving.ml" 523 16245 16246 "solving.ml" 523 16245 16266
)
"solving.ml" 519 16097 16106 "solving.ml" 519 16097 16134
type(
  Apron.Environment.t -> Apron.Var.t -> Apron.Environment.typvar
)
ident(
  ext_ref Apron.Environment.typ_of_var
)
"solving.ml" 519 16097 16135 "solving.ml" 519 16097 16145
type(
  Equation.procinfo
)
ident(
  int_ref callerinfo "solving.ml" 490 15189 15194 "solving.ml" 490 15189 15204
)
"solving.ml" 519 16097 16135 "solving.ml" 519 16097 16159
type(
  Apron.Environment.t
)
"solving.ml" 519 16097 16160 "solving.ml" 519 16097 16163
type(
  Apron.Var.t
)
ident(
  int_ref var "solving.ml" 517 16061 16078 "solving.ml" 517 16061 16081
)
"solving.ml" 519 16097 16106 "solving.ml" 519 16097 16163
type(
  Apron.Environment.typvar
)
"solving.ml" 520 16169 16174 "solving.ml" 520 16169 16195
type(
  Apron.Environment.typvar
)
"solving.ml" 520 16169 16199 "solving.ml" 520 16169 16203
type(
  Apron.Var.t list ref
)
ident(
  int_ref lint "solving.ml" 503 15669 15677 "solving.ml" 503 15669 15681
)
"solving.ml" 521 16204 16209 "solving.ml" 521 16204 16231
type(
  Apron.Environment.typvar
)
"solving.ml" 521 16204 16235 "solving.ml" 521 16204 16240
type(
  Apron.Var.t list ref
)
ident(
  int_ref lreal "solving.ml" 503 15669 15695 "solving.ml" 503 15669 15700
)
"solving.ml" 519 16097 16100 "solving.ml" 521 16204 16240
type(
  Apron.Var.t list ref
)
"solving.ml" 523 16245 16246 "solving.ml" 523 16245 16250
type(
  Apron.Var.t list ref
)
ident(
  int_ref list "solving.ml" 518 16085 16090 "solving.ml" 518 16085 16094
)
"solving.ml" 523 16245 16251 "solving.ml" 523 16245 16253
type(
  Apron.Var.t list ref -> Apron.Var.t list -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"solving.ml" 523 16245 16254 "solving.ml" 523 16245 16257
type(
  Apron.Var.t
)
ident(
  int_ref var "solving.ml" 517 16061 16078 "solving.ml" 517 16061 16081
)
"solving.ml" 523 16245 16261 "solving.ml" 523 16245 16262
type(
  Apron.Var.t list ref -> Apron.Var.t list
)
ident(
  ext_ref Pervasives.( ! )
)
"solving.ml" 523 16245 16262 "solving.ml" 523 16245 16266
type(
  Apron.Var.t list ref
)
ident(
  int_ref list "solving.ml" 518 16085 16090 "solving.ml" 518 16085 16094
)
"solving.ml" 523 16245 16261 "solving.ml" 523 16245 16266
type(
  Apron.Var.t list
)
"solving.ml" 523 16245 16254 "solving.ml" 523 16245 16266
type(
  Apron.Var.t list
)
"solving.ml" 523 16245 16246 "solving.ml" 523 16245 16266
type(
  unit
)
"solving.ml" 518 16085 16086 "solving.ml" 523 16245 16266
type(
  unit
)
"solving.ml" 517 16061 16067 "solving.ml" 524 16267 16277
type(
  Apron.Var.t -> unit
)
"solving.ml" 525 16278 16284 "solving.ml" 525 16278 16290
type(
  Apron.Var.t array
)
ident(
  int_ref inargs "solving.ml" 492 15259 15264 "solving.ml" 492 15259 15270
)
"solving.ml" 516 16046 16050 "solving.ml" 525 16278 16290
call(
  stack
)
type(
  unit
)
"solving.ml" 527 16297 16305 "solving.ml" 527 16297 16309
type(
  Apron.Var.t array
)
ident(
  def tint "solving.ml" 528 16368 16372 "solving.ml" 546 17121 17128
)
"solving.ml" 527 16297 16312 "solving.ml" 527 16297 16325
type(
  Apron.Var.t list -> Apron.Var.t array
)
ident(
  ext_ref Array.of_list
)
"solving.ml" 527 16297 16326 "solving.ml" 527 16297 16327
type(
  Apron.Var.t list ref -> Apron.Var.t list
)
ident(
  ext_ref Pervasives.( ! )
)
"solving.ml" 527 16297 16327 "solving.ml" 527 16297 16331
type(
  Apron.Var.t list ref
)
ident(
  int_ref lint "solving.ml" 503 15669 15677 "solving.ml" 503 15669 15681
)
"solving.ml" 527 16297 16326 "solving.ml" 527 16297 16331
type(
  Apron.Var.t list
)
"solving.ml" 527 16297 16312 "solving.ml" 527 16297 16331
call(
  stack
)
type(
  Apron.Var.t array
)
"solving.ml" 527 16297 16336 "solving.ml" 527 16297 16341
type(
  Apron.Var.t array
)
ident(
  def treal "solving.ml" 528 16368 16372 "solving.ml" 546 17121 17128
)
"solving.ml" 527 16297 16344 "solving.ml" 527 16297 16357
type(
  Apron.Var.t list -> Apron.Var.t array
)
ident(
  ext_ref Array.of_list
)
"solving.ml" 527 16297 16358 "solving.ml" 527 16297 16359
type(
  Apron.Var.t list ref -> Apron.Var.t list
)
ident(
  ext_ref Pervasives.( ! )
)
"solving.ml" 527 16297 16359 "solving.ml" 527 16297 16364
type(
  Apron.Var.t list ref
)
ident(
  int_ref lreal "solving.ml" 503 15669 15695 "solving.ml" 503 15669 15700
)
"solving.ml" 527 16297 16358 "solving.ml" 527 16297 16364
type(
  Apron.Var.t list
)
"solving.ml" 527 16297 16344 "solving.ml" 527 16297 16364
call(
  stack
)
type(
  Apron.Var.t array
)
"solving.ml" 528 16368 16376 "solving.ml" 528 16368 16380
type(
  Apron.Environment.t
)
ident(
  def tenv "solving.ml" 529 16420 16424 "solving.ml" 546 17121 17128
)
"solving.ml" 528 16368 16383 "solving.ml" 528 16368 16405
type(
  Apron.Var.t array -> Apron.Var.t array -> Apron.Environment.t
)
ident(
  ext_ref Apron.Environment.make
)
"solving.ml" 528 16368 16406 "solving.ml" 528 16368 16410
type(
  Apron.Var.t array
)
ident(
  int_ref tint "solving.ml" 527 16297 16305 "solving.ml" 527 16297 16309
)
"solving.ml" 528 16368 16411 "solving.ml" 528 16368 16416
type(
  Apron.Var.t array
)
ident(
  int_ref treal "solving.ml" 527 16297 16336 "solving.ml" 527 16297 16341
)
"solving.ml" 528 16368 16383 "solving.ml" 528 16368 16416
type(
  Apron.Environment.t
)
"solving.ml" 529 16420 16424 "solving.ml" 529 16420 16463
type(
  'a1 Apron.Manager.t ->
  'a1 Apron.Abstract1.t -> Apron.Environment.t -> bool -> unit
)
ident(
  ext_ref Apron.Abstract1.change_environment_with
)
"solving.ml" 529 16420 16464 "solving.ml" 529 16420 16471
type(
  'a1 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 488 15120 15125 "solving.ml" 488 15120 15132
)
"solving.ml" 529 16420 16472 "solving.ml" 529 16420 16475
type(
  'a1 Apron.Abstract1.t
)
ident(
  int_ref res "solving.ml" 496 15442 15450 "solving.ml" 496 15442 15453
)
"solving.ml" 529 16420 16476 "solving.ml" 529 16420 16480
type(
  Apron.Environment.t
)
ident(
  int_ref tenv "solving.ml" 528 16368 16376 "solving.ml" 528 16368 16380
)
"solving.ml" 529 16420 16481 "solving.ml" 529 16420 16486
type(
  bool
)
"solving.ml" 529 16420 16424 "solving.ml" 529 16420 16486
type(
  unit
)
"solving.ml" 533 16599 16603 "solving.ml" 533 16599 16636
type(
  'a1 Apron.Manager.t ->
  'a1 Apron.Abstract1.t -> Apron.Var.t array -> Apron.Var.t array -> unit
)
ident(
  ext_ref Apron.Abstract1.rename_array_with
)
"solving.ml" 534 16637 16643 "solving.ml" 534 16637 16650
type(
  'a1 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 488 15120 15125 "solving.ml" 488 15120 15132
)
"solving.ml" 534 16637 16651 "solving.ml" 534 16637 16654
type(
  'a1 Apron.Abstract1.t
)
ident(
  int_ref res "solving.ml" 496 15442 15450 "solving.ml" 496 15442 15453
)
"solving.ml" 535 16655 16662 "solving.ml" 535 16655 16674
type(
  Apron.Var.t array -> Apron.Var.t array -> Apron.Var.t array
)
ident(
  ext_ref Array.append
)
"solving.ml" 535 16655 16675 "solving.ml" 535 16655 16685
type(
  Equation.procinfo
)
ident(
  int_ref calleeinfo "solving.ml" 491 15224 15229 "solving.ml" 491 15224 15239
)
"solving.ml" 535 16655 16675 "solving.ml" 535 16655 16706
type(
  Apron.Var.t array
)
"solving.ml" 535 16655 16707 "solving.ml" 535 16655 16713
type(
  Apron.Var.t array
)
ident(
  int_ref inargs "solving.ml" 492 15259 15264 "solving.ml" 492 15259 15270
)
"solving.ml" 535 16655 16661 "solving.ml" 535 16655 16714
call(
  stack
)
type(
  Apron.Var.t array
)
"solving.ml" 536 16715 16722 "solving.ml" 536 16715 16734
type(
  Apron.Var.t array -> Apron.Var.t array -> Apron.Var.t array
)
ident(
  ext_ref Array.append
)
"solving.ml" 536 16715 16735 "solving.ml" 536 16715 16745
type(
  Equation.procinfo
)
ident(
  int_ref calleeinfo "solving.ml" 491 15224 15229 "solving.ml" 491 15224 15239
)
"solving.ml" 536 16715 16735 "solving.ml" 536 16715 16762
type(
  Apron.Var.t array
)
"solving.ml" 536 16715 16764 "solving.ml" 536 16715 16774
type(
  Equation.procinfo
)
ident(
  int_ref calleeinfo "solving.ml" 491 15224 15229 "solving.ml" 491 15224 15239
)
"solving.ml" 536 16715 16764 "solving.ml" 536 16715 16790
type(
  Apron.Var.t array
)
"solving.ml" 536 16715 16721 "solving.ml" 536 16715 16791
call(
  stack
)
type(
  Apron.Var.t array
)
"solving.ml" 533 16599 16603 "solving.ml" 536 16715 16791
type(
  unit
)
"solving.ml" 539 16844 16848 "solving.ml" 539 16844 16887
type(
  'a1 Apron.Manager.t ->
  'a1 Apron.Abstract1.t -> Apron.Environment.t -> bool -> unit
)
ident(
  ext_ref Apron.Abstract1.change_environment_with
)
"solving.ml" 539 16844 16888 "solving.ml" 539 16844 16895
type(
  'a1 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 488 15120 15125 "solving.ml" 488 15120 15132
)
"solving.ml" 539 16844 16896 "solving.ml" 539 16844 16899
type(
  'a1 Apron.Abstract1.t
)
ident(
  int_ref res "solving.ml" 496 15442 15450 "solving.ml" 496 15442 15453
)
"solving.ml" 539 16844 16900 "solving.ml" 539 16844 16910
type(
  Equation.procinfo
)
ident(
  int_ref calleeinfo "solving.ml" 491 15224 15229 "solving.ml" 491 15224 15239
)
"solving.ml" 539 16844 16900 "solving.ml" 539 16844 16924
type(
  Apron.Environment.t
)
"solving.ml" 539 16844 16925 "solving.ml" 539 16844 16930
type(
  bool
)
"solving.ml" 539 16844 16848 "solving.ml" 539 16844 16930
type(
  unit
)
"solving.ml" 541 17006 17022 "solving.ml" 541 17006 17026
type(
  'a1 Apron.Abstract1.t option
)
ident(
  int_ref dest "solving.ml" 493 15318 15323 "solving.ml" 493 15318 15327
)
"solving.ml" 542 17032 17038 "solving.ml" 542 17032 17042
type(
  'a1 Apron.Abstract1.t option
)
"solving.ml" 542 17032 17046 "solving.ml" 542 17032 17048
type(
  unit
)
"solving.ml" 543 17049 17060 "solving.ml" 543 17049 17064
type(
  'a1 Apron.Abstract1.t
)
ident(
  def dest "solving.ml" 544 17068 17069 "solving.ml" 544 17068 17111
)
"solving.ml" 543 17049 17055 "solving.ml" 543 17049 17064
type(
  'a1 Apron.Abstract1.t option
)
"solving.ml" 544 17068 17069 "solving.ml" 544 17068 17094
type(
  'a1 Apron.Manager.t ->
  'a1 Apron.Abstract1.t -> 'a1 Apron.Abstract1.t -> unit
)
ident(
  ext_ref Apron.Abstract1.meet_with
)
"solving.ml" 544 17068 17095 "solving.ml" 544 17068 17102
type(
  'a1 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 488 15120 15125 "solving.ml" 488 15120 15132
)
"solving.ml" 544 17068 17103 "solving.ml" 544 17068 17106
type(
  'a1 Apron.Abstract1.t
)
ident(
  int_ref res "solving.ml" 496 15442 15450 "solving.ml" 496 15442 15453
)
"solving.ml" 544 17068 17107 "solving.ml" 544 17068 17111
type(
  'a1 Apron.Abstract1.t
)
ident(
  int_ref dest "solving.ml" 543 17049 17060 "solving.ml" 543 17049 17064
)
"solving.ml" 544 17068 17069 "solving.ml" 544 17068 17111
type(
  unit
)
"solving.ml" 541 17006 17010 "solving.ml" 545 17112 17119
type(
  unit
)
"solving.ml" 546 17121 17125 "solving.ml" 546 17121 17128
type(
  'a1 Apron.Abstract1.t
)
ident(
  int_ref res "solving.ml" 496 15442 15450 "solving.ml" 496 15442 15453
)
"solving.ml" 541 17006 17010 "solving.ml" 546 17121 17128
type(
  'a1 Apron.Abstract1.t
)
"solving.ml" 539 16844 16848 "solving.ml" 546 17121 17128
type(
  'a1 Apron.Abstract1.t
)
"solving.ml" 533 16599 16603 "solving.ml" 546 17121 17128
type(
  'a1 Apron.Abstract1.t
)
"solving.ml" 529 16420 16424 "solving.ml" 546 17121 17128
type(
  'a1 Apron.Abstract1.t
)
"solving.ml" 528 16368 16372 "solving.ml" 546 17121 17128
type(
  'a1 Apron.Abstract1.t
)
"solving.ml" 527 16297 16301 "solving.ml" 546 17121 17128
type(
  'a1 Apron.Abstract1.t
)
"solving.ml" 516 16046 16050 "solving.ml" 546 17121 17128
type(
  'a1 Apron.Abstract1.t
)
"solving.ml" 504 15713 15717 "solving.ml" 546 17121 17128
type(
  'a1 Apron.Abstract1.t
)
"solving.ml" 503 15669 15673 "solving.ml" 546 17121 17128
type(
  'a1 Apron.Abstract1.t
)
"solving.ml" 496 15442 15446 "solving.ml" 546 17121 17128
type(
  'a1 Apron.Abstract1.t
)
"solving.ml" 549 17162 17168 "solving.ml" 549 17162 17173
type(
  Equation.graph ->
  output:(Spl_syn.point, int, 'a2 Apron.Abstract1.t, unit) Fixpoint.output
         option ->
  'a2 Apron.Manager.t ->
  int -> 'a2 Apron.Abstract1.t array -> unit * 'a2 Apron.Abstract1.t
)
ident(
  def apply "solving.ml" 584 18315 18317 "solving.ml" 662 20608 20611
)
"solving.ml" 550 17174 17179 "solving.ml" 550 17174 17184
type(
  Equation.graph
)
ident(
  def graph "solving.ml" 551 17201 17205 "solving.ml" 581 18222 18234
)
"solving.ml" 551 17201 17207 "solving.ml" 551 17201 17213
type(
  (Spl_syn.point, int, 'a2 Apron.Abstract1.t, unit) Fixpoint.output option
)
ident(
  def output "solving.ml" 552 17289 17293 "solving.ml" 581 18222 18234
)
"solving.ml" 552 17289 17294 "solving.ml" 552 17289 17301
type(
  'a2 Apron.Manager.t
)
ident(
  def manager "solving.ml" 553 17322 17326 "solving.ml" 581 18222 18234
)
"solving.ml" 553 17322 17327 "solving.ml" 553 17322 17332
type(
  int
)
ident(
  def hedge "solving.ml" 554 17338 17342 "solving.ml" 581 18222 18234
)
"solving.ml" 554 17338 17343 "solving.ml" 554 17338 17347
type(
  'a2 Apron.Abstract1.t array
)
ident(
  def tabs "solving.ml" 555 17376 17380 "solving.ml" 581 18222 18234
)
"solving.ml" 558 17420 17428 "solving.ml" 558 17420 17436
type(
  Equation.transfer
)
ident(
  def transfer "solving.ml" 559 17473 17477 "solving.ml" 581 18222 18234
)
"solving.ml" 558 17420 17439 "solving.ml" 558 17420 17457
type(
  Equation.graph -> Equation.hedge -> Equation.transfer
)
ident(
  ext_ref PSHGraph.attrhedge
)
"solving.ml" 558 17420 17458 "solving.ml" 558 17420 17463
type(
  Equation.graph
)
ident(
  int_ref graph "solving.ml" 550 17174 17179 "solving.ml" 550 17174 17184
)
"solving.ml" 558 17420 17464 "solving.ml" 558 17420 17469
type(
  Equation.hedge
)
ident(
  int_ref hedge "solving.ml" 553 17322 17327 "solving.ml" 553 17322 17332
)
"solving.ml" 558 17420 17439 "solving.ml" 558 17420 17469
call(
  stack
)
type(
  Equation.transfer
)
"solving.ml" 559 17473 17481 "solving.ml" 559 17473 17484
type(
  'a2 Apron.Abstract1.t
)
ident(
  def abs "solving.ml" 560 17499 17503 "solving.ml" 581 18222 18234
)
"solving.ml" 559 17473 17487 "solving.ml" 559 17473 17491
type(
  'a2 Apron.Abstract1.t array
)
ident(
  int_ref tabs "solving.ml" 554 17338 17343 "solving.ml" 554 17338 17347
)
"solving.ml" 559 17473 17493 "solving.ml" 559 17473 17494
type(
  int
)
"solving.ml" 559 17473 17487 "solving.ml" 559 17473 17495
type(
  'a2 Apron.Abstract1.t
)
"solving.ml" 560 17499 17507 "solving.ml" 560 17499 17511
type(
  'a2 Apron.Abstract1.t option
)
ident(
  def dest "solving.ml" 568 17736 17740 "solving.ml" 581 18222 18234
)
"solving.ml" 560 17499 17520 "solving.ml" 560 17499 17526
type(
  (Spl_syn.point, int, 'a2 Apron.Abstract1.t, unit) Fixpoint.output option
)
ident(
  int_ref output "solving.ml" 551 17201 17207 "solving.ml" 551 17201 17213
)
"solving.ml" 561 17532 17540 "solving.ml" 561 17532 17544
type(
  (Spl_syn.point, int, 'a2 Apron.Abstract1.t, unit) Fixpoint.output option
)
"solving.ml" 561 17532 17548 "solving.ml" 561 17532 17552
type(
  'a2 Apron.Abstract1.t option
)
"solving.ml" 562 17553 17566 "solving.ml" 562 17553 17572
ident(
  def output "solving.ml" 563 17577 17580 "solving.ml" 566 17716 17728
)
"solving.ml" 562 17553 17565 "solving.ml" 562 17553 17573
type(
  (Spl_syn.point, int, 'a2 Apron.Abstract1.t, unit) Fixpoint.output
)
"solving.ml" 562 17553 17561 "solving.ml" 562 17553 17573
type(
  (Spl_syn.point, int, 'a2 Apron.Abstract1.t, unit) Fixpoint.output option
)
"solving.ml" 563 17577 17584 "solving.ml" 563 17577 17589
type(
  Equation.vertex array
)
ident(
  def tdest "solving.ml" 564 17627 17630 "solving.ml" 566 17716 17728
)
"solving.ml" 563 17577 17592 "solving.ml" 563 17577 17611
type(
  Equation.graph -> Equation.hedge -> Equation.vertex array
)
ident(
  ext_ref PSHGraph.succvertex
)
"solving.ml" 563 17577 17612 "solving.ml" 563 17577 17617
type(
  Equation.graph
)
ident(
  int_ref graph "solving.ml" 550 17174 17179 "solving.ml" 550 17174 17184
)
"solving.ml" 563 17577 17618 "solving.ml" 563 17577 17623
type(
  Equation.hedge
)
ident(
  int_ref hedge "solving.ml" 553 17322 17327 "solving.ml" 553 17322 17332
)
"solving.ml" 563 17577 17592 "solving.ml" 563 17577 17623
call(
  stack
)
type(
  Equation.vertex array
)
"solving.ml" 564 17627 17637 "solving.ml" 564 17627 17649
type(
  Equation.vertex array -> int
)
ident(
  ext_ref Array.length
)
"solving.ml" 564 17627 17650 "solving.ml" 564 17627 17655
type(
  Equation.vertex array
)
ident(
  int_ref tdest "solving.ml" 563 17577 17584 "solving.ml" 563 17577 17589
)
"solving.ml" 564 17627 17637 "solving.ml" 564 17627 17655
type(
  int
)
"solving.ml" 564 17627 17656 "solving.ml" 564 17627 17657
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"solving.ml" 564 17627 17658 "solving.ml" 564 17627 17659
type(
  int
)
"solving.ml" 564 17627 17636 "solving.ml" 564 17627 17660
type(
  bool
)
"solving.ml" 564 17627 17630 "solving.ml" 564 17627 17660
type(
  unit
)
"solving.ml" 565 17662 17669 "solving.ml" 565 17662 17673
type(
  'a2 Apron.Abstract1.t
)
ident(
  def dest "solving.ml" 566 17716 17719 "solving.ml" 566 17716 17728
)
"solving.ml" 565 17662 17676 "solving.ml" 565 17662 17695
type(
  (Equation.vertex, int, 'a2 Apron.Abstract1.t, unit) Fixpoint.output ->
  Equation.vertex -> 'a2 Apron.Abstract1.t
)
ident(
  ext_ref PSHGraph.attrvertex
)
"solving.ml" 565 17662 17696 "solving.ml" 565 17662 17702
type(
  (Equation.vertex, int, 'a2 Apron.Abstract1.t, unit) Fixpoint.output
)
ident(
  int_ref output "solving.ml" 562 17553 17565 "solving.ml" 562 17553 17573
)
"solving.ml" 565 17662 17703 "solving.ml" 565 17662 17708
type(
  Equation.vertex array
)
ident(
  int_ref tdest "solving.ml" 563 17577 17584 "solving.ml" 563 17577 17589
)
"solving.ml" 565 17662 17710 "solving.ml" 565 17662 17711
type(
  int
)
"solving.ml" 565 17662 17703 "solving.ml" 565 17662 17712
type(
  Equation.vertex
)
"solving.ml" 565 17662 17676 "solving.ml" 565 17662 17712
call(
  stack
)
type(
  'a2 Apron.Abstract1.t
)
"solving.ml" 566 17716 17724 "solving.ml" 566 17716 17728
type(
  'a2 Apron.Abstract1.t
)
ident(
  int_ref dest "solving.ml" 565 17662 17669 "solving.ml" 565 17662 17673
)
"solving.ml" 566 17716 17719 "solving.ml" 566 17716 17728
type(
  'a2 Apron.Abstract1.t option
)
"solving.ml" 565 17662 17665 "solving.ml" 566 17716 17728
type(
  'a2 Apron.Abstract1.t option
)
"solving.ml" 564 17627 17630 "solving.ml" 566 17716 17728
type(
  'a2 Apron.Abstract1.t option
)
"solving.ml" 563 17577 17580 "solving.ml" 566 17716 17728
type(
  'a2 Apron.Abstract1.t option
)
"solving.ml" 560 17499 17514 "solving.ml" 566 17716 17728
type(
  'a2 Apron.Abstract1.t option
)
"solving.ml" 568 17736 17744 "solving.ml" 568 17736 17747
type(
  'a2 Apron.Abstract1.t
)
ident(
  def res "solving.ml" 581 18222 18226 "solving.ml" 581 18222 18234
)
"solving.ml" 569 17750 17762 "solving.ml" 569 17750 17770
type(
  Equation.transfer
)
ident(
  int_ref transfer "solving.ml" 558 17420 17428 "solving.ml" 558 17420 17436
)
"solving.ml" 570 17776 17801 "solving.ml" 570 17776 17804
type(
  Apron.Var.t
)
ident(
  def var "solving.ml" 571 17814 17817 "solving.ml" 571 17814 17856
)
"solving.ml" 570 17776 17805 "solving.ml" 570 17776 17809
type(
  Apron.Texpr1.t
)
ident(
  def expr "solving.ml" 571 17814 17817 "solving.ml" 571 17814 17856
)
"solving.ml" 570 17776 17784 "solving.ml" 570 17776 17810
type(
  Equation.transfer
)
"solving.ml" 571 17814 17817 "solving.ml" 571 17814 17830
type(
  'a2 Apron.Manager.t ->
  'a2 Apron.Abstract1.t ->
  Apron.Var.t ->
  Apron.Texpr1.t -> 'a2 Apron.Abstract1.t option -> 'a2 Apron.Abstract1.t
)
ident(
  int_ref apply_tassign "solving.ml" 425 13387 13393 "solving.ml" 425 13387 13406
)
"solving.ml" 571 17814 17831 "solving.ml" 571 17814 17838
type(
  'a2 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 552 17289 17294 "solving.ml" 552 17289 17301
)
"solving.ml" 571 17814 17839 "solving.ml" 571 17814 17842
type(
  'a2 Apron.Abstract1.t
)
ident(
  int_ref abs "solving.ml" 559 17473 17481 "solving.ml" 559 17473 17484
)
"solving.ml" 571 17814 17843 "solving.ml" 571 17814 17846
type(
  Apron.Var.t
)
ident(
  int_ref var "solving.ml" 570 17776 17801 "solving.ml" 570 17776 17804
)
"solving.ml" 571 17814 17847 "solving.ml" 571 17814 17851
type(
  Apron.Texpr1.t
)
ident(
  int_ref expr "solving.ml" 570 17776 17805 "solving.ml" 570 17776 17809
)
"solving.ml" 571 17814 17852 "solving.ml" 571 17814 17856
type(
  'a2 Apron.Abstract1.t option
)
ident(
  int_ref dest "solving.ml" 560 17499 17507 "solving.ml" 560 17499 17511
)
"solving.ml" 571 17814 17817 "solving.ml" 571 17814 17856
call(
  stack
)
type(
  'a2 Apron.Abstract1.t
)
"solving.ml" 572 17857 17882 "solving.ml" 572 17857 17883
type(
  Apron.Linexpr1.t
)
type(
  Apron.Var.t
)
"solving.ml" 572 17857 17865 "solving.ml" 572 17857 17883
type(
  Equation.transfer
)
"solving.ml" 573 17887 17890 "solving.ml" 573 17887 17898
type(
  string -> 'a2 Apron.Abstract1.t
)
ident(
  ext_ref Pervasives.failwith
)
"solving.ml" 573 17887 17899 "solving.ml" 573 17887 17901
type(
  string
)
"solving.ml" 573 17887 17890 "solving.ml" 573 17887 17901
call(
  stack
)
type(
  'a2 Apron.Abstract1.t
)
"solving.ml" 574 17902 17929 "solving.ml" 574 17902 17933
type(
  Apron.Tcons1.earray Boolexpr.t
)
ident(
  def cond "solving.ml" 575 17937 17940 "solving.ml" 575 17937 17977
)
"solving.ml" 574 17902 17910 "solving.ml" 574 17902 17933
type(
  Equation.transfer
)
"solving.ml" 575 17937 17940 "solving.ml" 575 17937 17955
type(
  'a2 Apron.Manager.t ->
  'a2 Apron.Abstract1.t ->
  Apron.Tcons1.earray Boolexpr.t ->
  'a2 Apron.Abstract1.t option -> 'a2 Apron.Abstract1.t
)
ident(
  int_ref apply_condition "solving.ml" 446 13851 13857 "solving.ml" 446 13851 13872
)
"solving.ml" 575 17937 17956 "solving.ml" 575 17937 17963
type(
  'a2 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 552 17289 17294 "solving.ml" 552 17289 17301
)
"solving.ml" 575 17937 17964 "solving.ml" 575 17937 17967
type(
  'a2 Apron.Abstract1.t
)
ident(
  int_ref abs "solving.ml" 559 17473 17481 "solving.ml" 559 17473 17484
)
"solving.ml" 575 17937 17968 "solving.ml" 575 17937 17972
type(
  Apron.Tcons1.earray Boolexpr.t
)
ident(
  int_ref cond "solving.ml" 574 17902 17929 "solving.ml" 574 17902 17933
)
"solving.ml" 575 17937 17973 "solving.ml" 575 17937 17977
type(
  'a2 Apron.Abstract1.t option
)
ident(
  int_ref dest "solving.ml" 560 17499 17507 "solving.ml" 560 17499 17511
)
"solving.ml" 575 17937 17940 "solving.ml" 575 17937 17977
call(
  stack
)
type(
  'a2 Apron.Abstract1.t
)
"solving.ml" 576 17978 18000 "solving.ml" 576 17978 18010
type(
  Equation.procinfo
)
ident(
  def callerinfo "solving.ml" 577 18035 18038 "solving.ml" 577 18035 18091
)
"solving.ml" 576 17978 18011 "solving.ml" 576 17978 18021
type(
  Equation.procinfo
)
ident(
  def calleeinfo "solving.ml" 577 18035 18038 "solving.ml" 577 18035 18091
)
"solving.ml" 576 17978 18022 "solving.ml" 576 17978 18025
type(
  Apron.Var.t array
)
ident(
  def tin "solving.ml" 577 18035 18038 "solving.ml" 577 18035 18091
)
"solving.ml" 576 17978 18026 "solving.ml" 576 17978 18030
type(
  Apron.Var.t array
)
ident(
  def tout "solving.ml" 577 18035 18038 "solving.ml" 577 18035 18091
)
"solving.ml" 576 17978 17986 "solving.ml" 576 17978 18031
type(
  Equation.transfer
)
"solving.ml" 577 18035 18038 "solving.ml" 577 18035 18048
type(
  'a2 Apron.Manager.t ->
  'a2 Apron.Abstract1.t ->
  Equation.procinfo ->
  Equation.procinfo ->
  Apron.Var.t array -> 'a2 Apron.Abstract1.t option -> 'a2 Apron.Abstract1.t
)
ident(
  int_ref apply_call "solving.ml" 448 13900 13906 "solving.ml" 448 13900 13916
)
"solving.ml" 577 18035 18049 "solving.ml" 577 18035 18056
type(
  'a2 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 552 17289 17294 "solving.ml" 552 17289 17301
)
"solving.ml" 577 18035 18057 "solving.ml" 577 18035 18060
type(
  'a2 Apron.Abstract1.t
)
ident(
  int_ref abs "solving.ml" 559 17473 17481 "solving.ml" 559 17473 17484
)
"solving.ml" 577 18035 18061 "solving.ml" 577 18035 18071
type(
  Equation.procinfo
)
ident(
  int_ref callerinfo "solving.ml" 576 17978 18000 "solving.ml" 576 17978 18010
)
"solving.ml" 577 18035 18072 "solving.ml" 577 18035 18082
type(
  Equation.procinfo
)
ident(
  int_ref calleeinfo "solving.ml" 576 17978 18011 "solving.ml" 576 17978 18021
)
"solving.ml" 577 18035 18083 "solving.ml" 577 18035 18086
type(
  Apron.Var.t array
)
ident(
  int_ref tin "solving.ml" 576 17978 18022 "solving.ml" 576 17978 18025
)
"solving.ml" 577 18035 18087 "solving.ml" 577 18035 18091
type(
  'a2 Apron.Abstract1.t option
)
ident(
  int_ref dest "solving.ml" 560 17499 17507 "solving.ml" 560 17499 17511
)
"solving.ml" 577 18035 18038 "solving.ml" 577 18035 18091
call(
  stack
)
type(
  'a2 Apron.Abstract1.t
)
"solving.ml" 578 18092 18116 "solving.ml" 578 18092 18126
type(
  Equation.procinfo
)
ident(
  def callerinfo "solving.ml" 579 18151 18154 "solving.ml" 579 18151 18214
)
"solving.ml" 578 18092 18127 "solving.ml" 578 18092 18137
type(
  Equation.procinfo
)
ident(
  def calleeinfo "solving.ml" 579 18151 18154 "solving.ml" 579 18151 18214
)
"solving.ml" 578 18092 18138 "solving.ml" 578 18092 18141
type(
  Apron.Var.t array
)
ident(
  def tin "solving.ml" 579 18151 18154 "solving.ml" 579 18151 18214
)
"solving.ml" 578 18092 18142 "solving.ml" 578 18092 18146
type(
  Apron.Var.t array
)
ident(
  def tout "solving.ml" 579 18151 18154 "solving.ml" 579 18151 18214
)
"solving.ml" 578 18092 18100 "solving.ml" 578 18092 18147
type(
  Equation.transfer
)
"solving.ml" 579 18151 18154 "solving.ml" 579 18151 18166
type(
  'a2 Apron.Manager.t ->
  'a2 Apron.Abstract1.t ->
  Equation.procinfo ->
  Equation.procinfo ->
  Apron.Var.t array ->
  Apron.Var.t array -> 'a2 Apron.Abstract1.t option -> 'a2 Apron.Abstract1.t
)
ident(
  int_ref apply_return "solving.ml" 487 15101 15107 "solving.ml" 487 15101 15119
)
"solving.ml" 579 18151 18167 "solving.ml" 579 18151 18174
type(
  'a2 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 552 17289 17294 "solving.ml" 552 17289 17301
)
"solving.ml" 579 18151 18175 "solving.ml" 579 18151 18178
type(
  'a2 Apron.Abstract1.t
)
ident(
  int_ref abs "solving.ml" 559 17473 17481 "solving.ml" 559 17473 17484
)
"solving.ml" 579 18151 18179 "solving.ml" 579 18151 18189
type(
  Equation.procinfo
)
ident(
  int_ref callerinfo "solving.ml" 578 18092 18116 "solving.ml" 578 18092 18126
)
"solving.ml" 579 18151 18190 "solving.ml" 579 18151 18200
type(
  Equation.procinfo
)
ident(
  int_ref calleeinfo "solving.ml" 578 18092 18127 "solving.ml" 578 18092 18137
)
"solving.ml" 579 18151 18201 "solving.ml" 579 18151 18204
type(
  Apron.Var.t array
)
ident(
  int_ref tin "solving.ml" 578 18092 18138 "solving.ml" 578 18092 18141
)
"solving.ml" 579 18151 18205 "solving.ml" 579 18151 18209
type(
  Apron.Var.t array
)
ident(
  int_ref tout "solving.ml" 578 18092 18142 "solving.ml" 578 18092 18146
)
"solving.ml" 579 18151 18210 "solving.ml" 579 18151 18214
type(
  'a2 Apron.Abstract1.t option
)
ident(
  int_ref dest "solving.ml" 560 17499 17507 "solving.ml" 560 17499 17511
)
"solving.ml" 579 18151 18154 "solving.ml" 579 18151 18214
call(
  stack
)
type(
  'a2 Apron.Abstract1.t
)
"solving.ml" 569 17750 17756 "solving.ml" 579 18151 18214
type(
  'a2 Apron.Abstract1.t
)
"solving.ml" 581 18222 18227 "solving.ml" 581 18222 18229
type(
  unit
)
"solving.ml" 581 18222 18230 "solving.ml" 581 18222 18233
type(
  'a2 Apron.Abstract1.t
)
ident(
  int_ref res "solving.ml" 568 17736 17744 "solving.ml" 568 17736 17747
)
"solving.ml" 581 18222 18226 "solving.ml" 581 18222 18234
type(
  unit * 'a2 Apron.Abstract1.t
)
"solving.ml" 568 17736 17740 "solving.ml" 581 18222 18234
type(
  unit * 'a2 Apron.Abstract1.t
)
"solving.ml" 560 17499 17503 "solving.ml" 581 18222 18234
type(
  unit * 'a2 Apron.Abstract1.t
)
"solving.ml" 559 17473 17477 "solving.ml" 581 18222 18234
type(
  unit * 'a2 Apron.Abstract1.t
)
"solving.ml" 558 17420 17424 "solving.ml" 581 18222 18234
type(
  unit * 'a2 Apron.Abstract1.t
)
type(
  unit * 'a2 Apron.Abstract1.t
)
"solving.ml" 587 18431 18437 "solving.ml" 587 18431 18444
type(
  fmt:Format.formatter ->
  Spl_syn.program ->
  Equation.graph ->
  output:(Spl_syn.point, int, 'a3 Apron.Abstract1.t, unit) Fixpoint.output
         option ->
  'a3 Apron.Manager.t ->
  debug:int ->
  (Spl_syn.point, int, 'a3 Apron.Abstract1.t, unit) Fixpoint.output
)
ident(
  def compute "solving.ml" 661 20600 20607 "solving.ml" 662 20608 20611
)
"solving.ml" 588 18445 18453 "solving.ml" 588 18445 18456
type(
  Format.formatter
)
ident(
  def fmt "solving.ml" 589 18477 18483 "solving.ml" 661 20600 20607
)
"solving.ml" 589 18477 18484 "solving.ml" 589 18477 18488
type(
  Spl_syn.program
)
ident(
  def prog "solving.ml" 590 18506 18512 "solving.ml" 661 20600 20607
)
"solving.ml" 590 18506 18513 "solving.ml" 590 18506 18518
type(
  Equation.graph
)
ident(
  def graph "solving.ml" 591 18535 18541 "solving.ml" 661 20600 20607
)
"solving.ml" 591 18535 18543 "solving.ml" 591 18535 18549
type(
  (Spl_syn.point, int, 'a3 Apron.Abstract1.t, unit) Fixpoint.output option
)
ident(
  def output "solving.ml" 592 18625 18631 "solving.ml" 661 20600 20607
)
"solving.ml" 592 18625 18632 "solving.ml" 592 18625 18639
type(
  'a3 Apron.Manager.t
)
ident(
  def manager "solving.ml" 593 18660 18666 "solving.ml" 661 20600 20607
)
"solving.ml" 593 18660 18668 "solving.ml" 593 18660 18673
type(
  int
)
ident(
  def debug "solving.ml" 594 18679 18685 "solving.ml" 661 20600 20607
)
"solving.ml" 597 18766 18774 "solving.ml" 597 18766 18778
type(
  Equation.info
)
ident(
  def info "solving.ml" 598 18804 18808 "solving.ml" 661 20600 20607
)
"solving.ml" 597 18766 18781 "solving.ml" 597 18766 18794
type(
  Equation.graph -> Equation.info
)
ident(
  ext_ref PSHGraph.info
)
"solving.ml" 597 18766 18795 "solving.ml" 597 18766 18800
type(
  Equation.graph
)
ident(
  int_ref graph "solving.ml" 590 18506 18513 "solving.ml" 590 18506 18518
)
"solving.ml" 597 18766 18781 "solving.ml" 597 18766 18800
call(
  stack
)
type(
  Equation.info
)
"solving.ml" 598 18804 18812 "solving.ml" 598 18804 18818
type(
  Equation.vertex PSette.t ref
)
ident(
  def sstart "solving.ml" 599 18866 18870 "solving.ml" 661 20600 20607
)
"solving.ml" 598 18804 18821 "solving.ml" 598 18804 18824
type(
  Equation.vertex PSette.t -> Equation.vertex PSette.t ref
)
ident(
  ext_ref Pervasives.ref
)
"solving.ml" 598 18804 18826 "solving.ml" 598 18804 18838
type(
  (Equation.vertex -> Equation.vertex -> int) -> Equation.vertex PSette.t
)
ident(
  ext_ref PSette.empty
)
"solving.ml" 598 18804 18839 "solving.ml" 598 18804 18861
type(
  Equation.vertex -> Equation.vertex -> int
)
ident(
  ext_ref Equation.compare_point
)
"solving.ml" 598 18804 18825 "solving.ml" 598 18804 18862
call(
  stack
)
type(
  Equation.vertex PSette.t
)
"solving.ml" 598 18804 18821 "solving.ml" 598 18804 18862
type(
  Equation.vertex PSette.t ref
)
"solving.ml" 599 18866 18870 "solving.ml" 599 18866 18879
type(
  (Spl_syn.procedure -> unit) -> Spl_syn.procedure list -> unit
)
ident(
  ext_ref List.iter
)
"solving.ml" 600 18880 18897 "solving.ml" 600 18880 18906
type(
  Spl_syn.procedure
)
ident(
  def procedure "solving.ml" 601 18910 18911 "solving.ml" 614 19292 19319
)
"solving.ml" 601 18910 18911 "solving.ml" 601 18910 18932
type(
  (Equation.vertex * Spl_syn.instr -> unit) -> Spl_syn.block -> unit
)
ident(
  ext_ref Spl_syn.iter_eltinstr
)
"solving.ml" 602 18933 18948 "solving.ml" 602 18933 18954
type(
  Equation.vertex
)
ident(
  def bpoint "solving.ml" 603 18965 18970 "solving.ml" 612 19275 19283
)
"solving.ml" 602 18933 18955 "solving.ml" 602 18933 18960
type(
  Spl_syn.instr
)
ident(
  def instr "solving.ml" 603 18965 18970 "solving.ml" 612 19275 19283
)
"solving.ml" 602 18933 18947 "solving.ml" 602 18933 18961
type(
  Equation.vertex * Spl_syn.instr
)
"solving.ml" 603 18965 18973 "solving.ml" 603 18965 18978
type(
  Spl_syn.instr
)
ident(
  int_ref instr "solving.ml" 602 18933 18955 "solving.ml" 602 18933 18960
)
"solving.ml" 603 18965 18973 "solving.ml" 603 18965 18998
type(
  Spl_syn.instruction
)
"solving.ml" 603 18965 18999 "solving.ml" 603 18965 19000
type(
  Spl_syn.instruction -> Spl_syn.instruction -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"solving.ml" 603 18965 19001 "solving.ml" 603 18965 19013
type(
  Spl_syn.instruction
)
"solving.ml" 603 18965 18973 "solving.ml" 603 18965 19013
type(
  bool
)
"solving.ml" 604 19025 19036 "solving.ml" 604 19025 19038
type(
  bool
)
ident(
  def ok "solving.ml" 610 19218 19225 "solving.ml" 611 19236 19274
)
"solving.ml" 604 19025 19047 "solving.ml" 604 19025 19053
type(
  (Spl_syn.point, int, 'a3 Apron.Abstract1.t, unit) Fixpoint.output option
)
ident(
  int_ref output "solving.ml" 591 18535 18543 "solving.ml" 591 18535 18549
)
"solving.ml" 605 19059 19063 "solving.ml" 605 19059 19067
type(
  (Spl_syn.point, int, 'a3 Apron.Abstract1.t, unit) Fixpoint.output option
)
"solving.ml" 605 19059 19071 "solving.ml" 605 19059 19075
type(
  bool
)
"solving.ml" 606 19076 19085 "solving.ml" 606 19076 19091
type(
  (Spl_syn.point, int, 'a3 Apron.Abstract1.t, unit) Fixpoint.output
)
ident(
  def output "solving.ml" 607 19095 19101 "solving.ml" 608 19153 19207
)
"solving.ml" 606 19076 19080 "solving.ml" 606 19076 19091
type(
  (Spl_syn.point, int, 'a3 Apron.Abstract1.t, unit) Fixpoint.output option
)
"solving.ml" 607 19095 19105 "solving.ml" 607 19095 19113
type(
  'a3 Apron.Abstract1.t
)
ident(
  def abstract "solving.ml" 608 19153 19159 "solving.ml" 608 19153 19207
)
"solving.ml" 607 19095 19116 "solving.ml" 607 19095 19135
type(
  (Equation.vertex, int, 'a3 Apron.Abstract1.t, unit) Fixpoint.output ->
  Equation.vertex -> 'a3 Apron.Abstract1.t
)
ident(
  ext_ref PSHGraph.attrvertex
)
"solving.ml" 607 19095 19136 "solving.ml" 607 19095 19142
type(
  (Equation.vertex, int, 'a3 Apron.Abstract1.t, unit) Fixpoint.output
)
ident(
  int_ref output "solving.ml" 606 19076 19085 "solving.ml" 606 19076 19091
)
"solving.ml" 607 19095 19143 "solving.ml" 607 19095 19149
type(
  Equation.vertex
)
ident(
  int_ref bpoint "solving.ml" 602 18933 18948 "solving.ml" 602 18933 18954
)
"solving.ml" 607 19095 19116 "solving.ml" 607 19095 19149
call(
  stack
)
type(
  'a3 Apron.Abstract1.t
)
"solving.ml" 608 19153 19159 "solving.ml" 608 19153 19162
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"solving.ml" 608 19153 19164 "solving.ml" 608 19153 19189
type(
  'a3 Apron.Manager.t -> 'a3 Apron.Abstract1.t -> bool
)
ident(
  ext_ref Apron.Abstract1.is_bottom
)
"solving.ml" 608 19153 19190 "solving.ml" 608 19153 19197
type(
  'a3 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 592 18625 18632 "solving.ml" 592 18625 18639
)
"solving.ml" 608 19153 19198 "solving.ml" 608 19153 19206
type(
  'a3 Apron.Abstract1.t
)
ident(
  int_ref abstract "solving.ml" 607 19095 19105 "solving.ml" 607 19095 19113
)
"solving.ml" 608 19153 19163 "solving.ml" 608 19153 19207
call(
  stack
)
type(
  bool
)
"solving.ml" 608 19153 19159 "solving.ml" 608 19153 19207
type(
  bool
)
"solving.ml" 607 19095 19101 "solving.ml" 608 19153 19207
type(
  bool
)
"solving.ml" 604 19025 19041 "solving.ml" 608 19153 19207
type(
  bool
)
"solving.ml" 610 19218 19228 "solving.ml" 610 19218 19230
type(
  bool
)
ident(
  int_ref ok "solving.ml" 604 19025 19036 "solving.ml" 604 19025 19038
)
"solving.ml" 611 19236 19238 "solving.ml" 611 19236 19244
type(
  Equation.vertex PSette.t ref
)
ident(
  int_ref sstart "solving.ml" 598 18804 18812 "solving.ml" 598 18804 18818
)
"solving.ml" 611 19236 19245 "solving.ml" 611 19236 19247
type(
  Equation.vertex PSette.t ref -> Equation.vertex PSette.t -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"solving.ml" 611 19236 19248 "solving.ml" 611 19236 19258
type(
  Equation.vertex -> Equation.vertex PSette.t -> Equation.vertex PSette.t
)
ident(
  ext_ref PSette.add
)
"solving.ml" 611 19236 19259 "solving.ml" 611 19236 19265
type(
  Equation.vertex
)
ident(
  int_ref bpoint "solving.ml" 602 18933 18948 "solving.ml" 602 18933 18954
)
"solving.ml" 611 19236 19266 "solving.ml" 611 19236 19267
type(
  Equation.vertex PSette.t ref -> Equation.vertex PSette.t
)
ident(
  ext_ref Pervasives.( ! )
)
"solving.ml" 611 19236 19267 "solving.ml" 611 19236 19273
type(
  Equation.vertex PSette.t ref
)
ident(
  int_ref sstart "solving.ml" 598 18804 18812 "solving.ml" 598 18804 18818
)
"solving.ml" 611 19236 19266 "solving.ml" 611 19236 19273
type(
  Equation.vertex PSette.t
)
"solving.ml" 611 19236 19248 "solving.ml" 611 19236 19273
call(
  stack
)
type(
  Equation.vertex PSette.t
)
"solving.ml" 611 19236 19238 "solving.ml" 611 19236 19273
type(
  unit
)
"solving.ml" 610 19218 19225 "solving.ml" 611 19236 19274
type(
  unit
)
"solving.ml" 603 18965 19019 "solving.ml" 612 19275 19283
type(
  unit
)
"solving.ml" 603 18965 18970 "solving.ml" 612 19275 19283
type(
  unit
)
"solving.ml" 602 18933 18936 "solving.ml" 613 19284 19291
type(
  Equation.vertex * Spl_syn.instr -> unit
)
"solving.ml" 614 19292 19295 "solving.ml" 614 19292 19304
type(
  Spl_syn.procedure
)
ident(
  int_ref procedure "solving.ml" 600 18880 18897 "solving.ml" 600 18880 18906
)
"solving.ml" 614 19292 19295 "solving.ml" 614 19292 19318
type(
  Spl_syn.block
)
"solving.ml" 601 18910 18911 "solving.ml" 614 19292 19319
call(
  tail
)
type(
  unit
)
"solving.ml" 600 18880 18886 "solving.ml" 615 19320 19330
type(
  Spl_syn.procedure -> unit
)
"solving.ml" 616 19331 19337 "solving.ml" 616 19331 19341
type(
  Spl_syn.program
)
ident(
  int_ref prog "solving.ml" 589 18477 18484 "solving.ml" 589 18477 18488
)
"solving.ml" 616 19331 19337 "solving.ml" 616 19331 19360
type(
  Spl_syn.procedure list
)
"solving.ml" 599 18866 18870 "solving.ml" 616 19331 19360
call(
  stack
)
type(
  unit
)
"solving.ml" 618 19363 19370 "solving.ml" 618 19363 19385
type(
  Equation.vertex PSette.t -> bool
)
ident(
  ext_ref PSette.is_empty
)
"solving.ml" 618 19363 19386 "solving.ml" 618 19363 19387
type(
  Equation.vertex PSette.t ref -> Equation.vertex PSette.t
)
ident(
  ext_ref Pervasives.( ! )
)
"solving.ml" 618 19363 19387 "solving.ml" 618 19363 19393
type(
  Equation.vertex PSette.t ref
)
ident(
  int_ref sstart "solving.ml" 598 18804 18812 "solving.ml" 598 18804 18818
)
"solving.ml" 618 19363 19386 "solving.ml" 618 19363 19393
type(
  Equation.vertex PSette.t
)
"solving.ml" 618 19363 19370 "solving.ml" 618 19363 19393
call(
  stack
)
type(
  bool
)
"solving.ml" 619 19405 19411 "solving.ml" 619 19405 19427
type(
  Equation.graph ->
  'a3 Apron.Manager.t ->
  (Equation.vertex, Equation.hedge, 'a3 Apron.Abstract1.t, unit)
  Fixpoint.output
)
ident(
  int_ref make_emptyoutput "solving.ml" 103 3641 3645 "solving.ml" 103 3641 3661
)
"solving.ml" 619 19405 19428 "solving.ml" 619 19405 19433
type(
  Equation.graph
)
ident(
  int_ref graph "solving.ml" 590 18506 18513 "solving.ml" 590 18506 18518
)
"solving.ml" 619 19405 19434 "solving.ml" 619 19405 19441
type(
  'a3 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 592 18625 18632 "solving.ml" 592 18625 18639
)
"solving.ml" 618 19363 19399 "solving.ml" 620 19442 19449
call(
  tail
)
type(
  (Equation.vertex, Equation.hedge, 'a3 Apron.Abstract1.t, unit)
  Fixpoint.output
)
"solving.ml" 622 19465 19475 "solving.ml" 622 19465 19488
type(
  Spl_syn.point -> 'a3 Apron.Abstract1.t
)
ident(
  def abstract_init "solving.ml" 631 19706 19712 "solving.ml" 660 20591 20599
)
"solving.ml" 622 19465 19501 "solving.ml" 622 19465 19507
type(
  Spl_syn.point
)
ident(
  def vertex "solving.ml" 623 19511 19512 "solving.ml" 628 19682 19686
)
"solving.ml" 623 19511 19524 "solving.ml" 623 19511 19530
type(
  (Spl_syn.point, int, 'a3 Apron.Abstract1.t, unit) Fixpoint.output option
)
ident(
  int_ref output "solving.ml" 591 18535 18543 "solving.ml" 591 18535 18549
)
"solving.ml" 624 19536 19539 "solving.ml" 624 19536 19543
type(
  (Spl_syn.point, int, 'a3 Apron.Abstract1.t, unit) Fixpoint.output option
)
"solving.ml" 625 19547 19552 "solving.ml" 625 19547 19571
type(
  'a3 Apron.Manager.t -> Apron.Environment.t -> 'a3 Apron.Abstract1.t
)
ident(
  ext_ref Apron.Abstract1.top
)
"solving.ml" 625 19547 19572 "solving.ml" 625 19547 19579
type(
  'a3 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 592 18625 18632 "solving.ml" 592 18625 18639
)
"solving.ml" 625 19547 19581 "solving.ml" 625 19547 19592
type(
  (Spl_syn.point, Apron.Environment.t) Hashhe.t ->
  Spl_syn.point -> Apron.Environment.t
)
ident(
  ext_ref Hashhe.find
)
"solving.ml" 625 19547 19593 "solving.ml" 625 19547 19597
type(
  Equation.info
)
ident(
  int_ref info "solving.ml" 597 18766 18774 "solving.ml" 597 18766 18778
)
"solving.ml" 625 19547 19593 "solving.ml" 625 19547 19615
type(
  (Spl_syn.point, Apron.Environment.t) Hashhe.t
)
"solving.ml" 625 19547 19616 "solving.ml" 625 19547 19622
type(
  Spl_syn.point
)
ident(
  int_ref vertex "solving.ml" 622 19465 19501 "solving.ml" 622 19465 19507
)
"solving.ml" 625 19547 19580 "solving.ml" 625 19547 19623
call(
  stack
)
type(
  Apron.Environment.t
)
"solving.ml" 625 19547 19552 "solving.ml" 625 19547 19623
type(
  'a3 Apron.Abstract1.t
)
"solving.ml" 626 19624 19632 "solving.ml" 626 19624 19638
ident(
  def output "solving.ml" 627 19643 19648 "solving.ml" 627 19643 19681
)
"solving.ml" 626 19624 19631 "solving.ml" 626 19624 19639
type(
  (Spl_syn.point, int, 'a3 Apron.Abstract1.t, unit) Fixpoint.output
)
"solving.ml" 626 19624 19627 "solving.ml" 626 19624 19639
type(
  (Spl_syn.point, int, 'a3 Apron.Abstract1.t, unit) Fixpoint.output option
)
"solving.ml" 627 19643 19648 "solving.ml" 627 19643 19667
type(
  (Spl_syn.point, int, 'a3 Apron.Abstract1.t, unit) Fixpoint.output ->
  Spl_syn.point -> 'a3 Apron.Abstract1.t
)
ident(
  ext_ref PSHGraph.attrvertex
)
"solving.ml" 627 19643 19668 "solving.ml" 627 19643 19674
type(
  (Spl_syn.point, int, 'a3 Apron.Abstract1.t, unit) Fixpoint.output
)
ident(
  int_ref output "solving.ml" 626 19624 19631 "solving.ml" 626 19624 19639
)
"solving.ml" 627 19643 19675 "solving.ml" 627 19643 19681
type(
  Spl_syn.point
)
ident(
  int_ref vertex "solving.ml" 622 19465 19501 "solving.ml" 622 19465 19507
)
"solving.ml" 627 19643 19648 "solving.ml" 627 19643 19681
call(
  tail
)
type(
  'a3 Apron.Abstract1.t
)
"solving.ml" 623 19511 19512 "solving.ml" 628 19682 19686
type(
  'a3 Apron.Abstract1.t
)
"solving.ml" 622 19465 19491 "solving.ml" 629 19687 19696
type(
  Spl_syn.point -> 'a3 Apron.Abstract1.t
)
"solving.ml" 631 19706 19716 "solving.ml" 631 19706 19725
type(
  (Equation.vertex, Equation.hedge, 'a3 Apron.Abstract1.t, unit)
  Fixpoint.manager
)
ident(
  def fpmanager "solving.ml" 636 19821 19827 "solving.ml" 660 20591 20599
)
"solving.ml" 632 19728 19729 "solving.ml" 632 19728 19743
type(
  fmt:Format.formatter ->
  output:(Spl_syn.point, int, 'a3 Apron.Abstract1.t, unit) Fixpoint.output
         option ->
  debug:int ->
  graph:Equation.graph ->
  man:'a3 Apron.Manager.t ->
  abstract_init:(Spl_syn.point -> 'a3 Apron.Abstract1.t) ->
  apply:(Equation.graph ->
         output:(Spl_syn.point, int, 'a3 Apron.Abstract1.t, unit)
                Fixpoint.output option ->
         'a3 Apron.Manager.t ->
         int -> 'a3 Apron.Abstract1.t array -> unit * 'a3 Apron.Abstract1.t) ->
  (Equation.vertex, Equation.hedge, 'a3 Apron.Abstract1.t, unit)
  Fixpoint.manager
)
ident(
  int_ref make_fpmanager "solving.ml" 27 927 931 "solving.ml" 27 927 945
)
"solving.ml" 632 19728 19745 "solving.ml" 632 19728 19748
type(
  Format.formatter
)
ident(
  int_ref fmt "solving.ml" 588 18445 18453 "solving.ml" 588 18445 18456
)
"solving.ml" 632 19728 19750 "solving.ml" 632 19728 19756
type(
  (Spl_syn.point, int, 'a3 Apron.Abstract1.t, unit) Fixpoint.output option
)
ident(
  int_ref output "solving.ml" 591 18535 18543 "solving.ml" 591 18535 18549
)
"solving.ml" 632 19728 19758 "solving.ml" 632 19728 19763
type(
  int
)
ident(
  int_ref debug "solving.ml" 593 18660 18668 "solving.ml" 593 18660 18673
)
"solving.ml" 632 19728 19765 "solving.ml" 632 19728 19770
type(
  Equation.graph
)
ident(
  int_ref graph "solving.ml" 590 18506 18513 "solving.ml" 590 18506 18518
)
"solving.ml" 633 19771 19779 "solving.ml" 633 19771 19786
type(
  'a3 Apron.Manager.t
)
ident(
  int_ref manager "solving.ml" 592 18625 18632 "solving.ml" 592 18625 18639
)
"solving.ml" 634 19787 19791 "solving.ml" 634 19787 19804
type(
  Spl_syn.point -> 'a3 Apron.Abstract1.t
)
ident(
  int_ref abstract_init "solving.ml" 622 19465 19475 "solving.ml" 622 19465 19488
)
"solving.ml" 634 19787 19806 "solving.ml" 634 19787 19811
type(
  Equation.graph ->
  output:(Spl_syn.point, int, 'a3 Apron.Abstract1.t, unit) Fixpoint.output
         option ->
  'a3 Apron.Manager.t ->
  int -> 'a3 Apron.Abstract1.t array -> unit * 'a3 Apron.Abstract1.t
)
ident(
  int_ref apply "solving.ml" 549 17162 17168 "solving.ml" 549 17162 17173
)
"solving.ml" 632 19728 19729 "solving.ml" 634 19787 19811
call(
  stack
)
type(
  (Equation.vertex, Equation.hedge, 'a3 Apron.Abstract1.t, unit)
  Fixpoint.manager
)
"solving.ml" 636 19821 19831 "solving.ml" 636 19821 19833
type(
  (Equation.vertex, Equation.hedge, 'a3 Apron.Abstract1.t, unit)
  Fixpoint.output
)
ident(
  def fp "solving.ml" 660 20591 20597 "solving.ml" 660 20591 20599
)
"solving.ml" 637 19836 19840 "solving.ml" 637 19836 19841
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"solving.ml" 637 19836 19841 "solving.ml" 637 19836 19864
type(
  bool ref
)
ident(
  ext_ref Option.iteration_guided
)
"solving.ml" 637 19836 19840 "solving.ml" 637 19836 19864
type(
  bool
)
"solving.ml" 638 19870 19873 "solving.ml" 638 19870 19897
type(
  (Equation.vertex, Equation.hedge, 'a3 Apron.Abstract1.t, unit)
  Fixpoint.manager ->
  Equation.graph ->
  Equation.vertex PSette.t ->
  ((Equation.hedge -> bool) ->
   (Equation.vertex, Equation.hedge) Fixpoint.strategy) ->
  (Equation.vertex, Equation.hedge, 'a3 Apron.Abstract1.t, unit)
  Fixpoint.output
)
ident(
  ext_ref Fixpoint.analysis_guided
)
"solving.ml" 639 19898 19903 "solving.ml" 639 19898 19912
type(
  (Equation.vertex, Equation.hedge, 'a3 Apron.Abstract1.t, unit)
  Fixpoint.manager
)
ident(
  int_ref fpmanager "solving.ml" 631 19706 19716 "solving.ml" 631 19706 19725
)
"solving.ml" 639 19898 19913 "solving.ml" 639 19898 19918
type(
  Equation.graph
)
ident(
  int_ref graph "solving.ml" 590 18506 18513 "solving.ml" 590 18506 18518
)
"solving.ml" 639 19898 19919 "solving.ml" 639 19898 19920
type(
  Equation.vertex PSette.t ref -> Equation.vertex PSette.t
)
ident(
  ext_ref Pervasives.( ! )
)
"solving.ml" 639 19898 19920 "solving.ml" 639 19898 19926
type(
  Equation.vertex PSette.t ref
)
ident(
  int_ref sstart "solving.ml" 598 18804 18812 "solving.ml" 598 18804 18818
)
"solving.ml" 639 19898 19919 "solving.ml" 639 19898 19926
type(
  Equation.vertex PSette.t
)
"solving.ml" 640 19927 19937 "solving.ml" 640 19927 19943
type(
  Equation.hedge -> bool
)
ident(
  def filter "solving.ml" 641 19948 19955 "solving.ml" 648 20222 20237
)
"solving.ml" 641 19948 19955 "solving.ml" 641 19948 19985
type(
  ?depth:int ->
  ?widening_start:int ->
  ?widening_descend:int ->
  ?priority:Equation.hedge PSHGraph.priority ->
  vertex_dummy:Equation.vertex ->
  hedge_dummy:Equation.hedge ->
  Equation.graph ->
  Equation.vertex PSette.t ->
  (Equation.vertex, Equation.hedge) Fixpoint.strategy
)
ident(
  ext_ref Fixpoint.make_strategy_default
)
"solving.ml" 642 19986 20002 "solving.ml" 642 19986 20023
type(
  Equation.vertex
)
ident(
  ext_ref Equation.vertex_dummy
)
"solving.ml" 643 20024 20039 "solving.ml" 643 20024 20059
type(
  Equation.hedge
)
ident(
  ext_ref Equation.hedge_dummy
)
"solving.ml" 644 20060 20089 "solving.ml" 644 20060 20095
type(
  Equation.hedge -> bool
)
ident(
  int_ref filter "solving.ml" 640 19927 19937 "solving.ml" 640 19927 19943
)
"solving.ml" 644 20060 20072 "solving.ml" 644 20060 20096
type(
  Equation.hedge PSHGraph.priority
)
"solving.ml" 645 20097 20116 "solving.ml" 645 20097 20117
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"solving.ml" 645 20097 20117 "solving.ml" 645 20097 20138
type(
  int ref
)
ident(
  ext_ref Option.widening_start
)
"solving.ml" 645 20097 20115 "solving.ml" 645 20097 20139
type(
  int
)
"solving.ml" 646 20140 20161 "solving.ml" 646 20140 20162
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"solving.ml" 646 20140 20162 "solving.ml" 646 20140 20185
type(
  int ref
)
ident(
  ext_ref Option.widening_descend
)
"solving.ml" 646 20140 20160 "solving.ml" 646 20140 20186
type(
  int
)
"solving.ml" 647 20187 20197 "solving.ml" 647 20187 20198
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"solving.ml" 647 20187 20198 "solving.ml" 647 20187 20220
type(
  int ref
)
ident(
  ext_ref Option.iteration_depth
)
"solving.ml" 647 20187 20196 "solving.ml" 647 20187 20221
type(
  int
)
"solving.ml" 648 20222 20224 "solving.ml" 648 20222 20229
type(
  Equation.graph
)
ident(
  int_ref graph "solving.ml" 590 18506 18513 "solving.ml" 590 18506 18518
)
"solving.ml" 648 20222 20230 "solving.ml" 648 20222 20231
type(
  Equation.vertex PSette.t ref -> Equation.vertex PSette.t
)
ident(
  ext_ref Pervasives.( ! )
)
"solving.ml" 648 20222 20231 "solving.ml" 648 20222 20237
type(
  Equation.vertex PSette.t ref
)
ident(
  int_ref sstart "solving.ml" 598 18804 18812 "solving.ml" 598 18804 18818
)
"solving.ml" 648 20222 20230 "solving.ml" 648 20222 20237
type(
  Equation.vertex PSette.t
)
"solving.ml" 641 19948 19955 "solving.ml" 648 20222 20237
call(
  tail
)
type(
  (Equation.vertex, Equation.hedge) Fixpoint.strategy
)
"solving.ml" 640 19927 19932 "solving.ml" 648 20222 20238
type(
  (Equation.hedge -> bool) ->
  (Equation.vertex, Equation.hedge) Fixpoint.strategy
)
"solving.ml" 638 19870 19873 "solving.ml" 648 20222 20238
call(
  tail
)
type(
  (Equation.vertex, Equation.hedge, 'a3 Apron.Abstract1.t, unit)
  Fixpoint.output
)
"solving.ml" 650 20245 20248 "solving.ml" 650 20245 20269
type(
  (Equation.vertex, Equation.hedge, 'a3 Apron.Abstract1.t, unit)
  Fixpoint.manager ->
  Equation.graph ->
  Equation.vertex PSette.t ->
  (Equation.vertex, Equation.hedge) Fixpoint.strategy ->
  (Equation.vertex, Equation.hedge, 'a3 Apron.Abstract1.t, unit)
  Fixpoint.output
)
ident(
  ext_ref Fixpoint.analysis_std
)
"solving.ml" 651 20270 20275 "solving.ml" 651 20270 20284
type(
  (Equation.vertex, Equation.hedge, 'a3 Apron.Abstract1.t, unit)
  Fixpoint.manager
)
ident(
  int_ref fpmanager "solving.ml" 631 19706 19716 "solving.ml" 631 19706 19725
)
"solving.ml" 651 20270 20285 "solving.ml" 651 20270 20290
type(
  Equation.graph
)
ident(
  int_ref graph "solving.ml" 590 18506 18513 "solving.ml" 590 18506 18518
)
"solving.ml" 651 20270 20291 "solving.ml" 651 20270 20292
type(
  Equation.vertex PSette.t ref -> Equation.vertex PSette.t
)
ident(
  ext_ref Pervasives.( ! )
)
"solving.ml" 651 20270 20292 "solving.ml" 651 20270 20298
type(
  Equation.vertex PSette.t ref
)
ident(
  int_ref sstart "solving.ml" 598 18804 18812 "solving.ml" 598 18804 18818
)
"solving.ml" 651 20270 20291 "solving.ml" 651 20270 20298
type(
  Equation.vertex PSette.t
)
"solving.ml" 652 20299 20305 "solving.ml" 652 20299 20335
type(
  ?depth:int ->
  ?widening_start:int ->
  ?widening_descend:int ->
  ?priority:Equation.hedge PSHGraph.priority ->
  vertex_dummy:Equation.vertex ->
  hedge_dummy:Equation.hedge ->
  Equation.graph ->
  Equation.vertex PSette.t ->
  (Equation.vertex, Equation.hedge) Fixpoint.strategy
)
ident(
  ext_ref Fixpoint.make_strategy_default
)
"solving.ml" 653 20336 20357 "solving.ml" 653 20336 20378
type(
  Equation.vertex
)
ident(
  ext_ref Equation.vertex_dummy
)
"solving.ml" 654 20379 20399 "solving.ml" 654 20379 20419
type(
  Equation.hedge
)
ident(
  ext_ref Equation.hedge_dummy
)
"solving.ml" 655 20420 20444 "solving.ml" 655 20420 20445
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"solving.ml" 655 20420 20445 "solving.ml" 655 20420 20466
type(
  int ref
)
ident(
  ext_ref Option.widening_start
)
"solving.ml" 655 20420 20443 "solving.ml" 655 20420 20467
type(
  int
)
"solving.ml" 656 20468 20494 "solving.ml" 656 20468 20495
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"solving.ml" 656 20468 20495 "solving.ml" 656 20468 20518
type(
  int ref
)
ident(
  ext_ref Option.widening_descend
)
"solving.ml" 656 20468 20493 "solving.ml" 656 20468 20519
type(
  int
)
"solving.ml" 657 20520 20535 "solving.ml" 657 20520 20536
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"solving.ml" 657 20520 20536 "solving.ml" 657 20520 20558
type(
  int ref
)
ident(
  ext_ref Option.iteration_depth
)
"solving.ml" 657 20520 20534 "solving.ml" 657 20520 20559
type(
  int
)
"solving.ml" 658 20560 20567 "solving.ml" 658 20560 20572
type(
  Equation.graph
)
ident(
  int_ref graph "solving.ml" 590 18506 18513 "solving.ml" 590 18506 18518
)
"solving.ml" 658 20560 20573 "solving.ml" 658 20560 20574
type(
  Equation.vertex PSette.t ref -> Equation.vertex PSette.t
)
ident(
  ext_ref Pervasives.( ! )
)
"solving.ml" 658 20560 20574 "solving.ml" 658 20560 20580
type(
  Equation.vertex PSette.t ref
)
ident(
  int_ref sstart "solving.ml" 598 18804 18812 "solving.ml" 598 18804 18818
)
"solving.ml" 658 20560 20573 "solving.ml" 658 20560 20580
type(
  Equation.vertex PSette.t
)
"solving.ml" 652 20299 20304 "solving.ml" 658 20560 20581
call(
  stack
)
type(
  (Equation.vertex, Equation.hedge) Fixpoint.strategy
)
"solving.ml" 650 20245 20248 "solving.ml" 658 20560 20581
call(
  tail
)
type(
  (Equation.vertex, Equation.hedge, 'a3 Apron.Abstract1.t, unit)
  Fixpoint.output
)
"solving.ml" 637 19836 19837 "solving.ml" 658 20560 20581
type(
  (Equation.vertex, Equation.hedge, 'a3 Apron.Abstract1.t, unit)
  Fixpoint.output
)
"solving.ml" 660 20591 20597 "solving.ml" 660 20591 20599
type(
  (Equation.vertex, Equation.hedge, 'a3 Apron.Abstract1.t, unit)
  Fixpoint.output
)
ident(
  int_ref fp "solving.ml" 636 19821 19831 "solving.ml" 636 19821 19833
)
"solving.ml" 636 19821 19827 "solving.ml" 660 20591 20599
type(
  (Equation.vertex, Equation.hedge, 'a3 Apron.Abstract1.t, unit)
  Fixpoint.output
)
"solving.ml" 631 19706 19712 "solving.ml" 660 20591 20599
type(
  (Equation.vertex, Equation.hedge, 'a3 Apron.Abstract1.t, unit)
  Fixpoint.output
)
"solving.ml" 621 19450 19459 "solving.ml" 661 20600 20607
type(
  (Equation.vertex, Equation.hedge, 'a3 Apron.Abstract1.t, unit)
  Fixpoint.output
)
"solving.ml" 618 19363 19367 "solving.ml" 661 20600 20607
type(
  (Equation.vertex, Equation.hedge, 'a3 Apron.Abstract1.t, unit)
  Fixpoint.output
)
"solving.ml" 599 18866 18870 "solving.ml" 661 20600 20607
type(
  (Equation.vertex, Equation.hedge, 'a3 Apron.Abstract1.t, unit)
  Fixpoint.output
)
"solving.ml" 598 18804 18808 "solving.ml" 661 20600 20607
type(
  (Equation.vertex, Equation.hedge, 'a3 Apron.Abstract1.t, unit)
  Fixpoint.output
)
"solving.ml" 597 18766 18770 "solving.ml" 661 20600 20607
type(
  (Spl_syn.point, int, 'a3 Apron.Abstract1.t, unit) Fixpoint.output
)
type(
  (Equation.vertex, Equation.hedge, 'a3 Apron.Abstract1.t, unit)
  Fixpoint.output
)
"solving.ml" 665 20614 20618 "solving.ml" 665 20614 20636
type(
  Format.formatter -> Apron.Scalar.t -> unit
)
ident(
  def print_apron_scalar "solving.ml" 678 20998 20998 "solving.ml" 1 0 -1
)
"solving.ml" 665 20614 20637 "solving.ml" 665 20614 20640
type(
  Format.formatter
)
ident(
  def fmt "solving.ml" 665 20614 20641 "solving.ml" 676 20991 20996
)
"solving.ml" 665 20614 20641 "solving.ml" 665 20614 20647
type(
  Apron.Scalar.t
)
ident(
  def scalar "solving.ml" 666 20650 20652 "solving.ml" 676 20991 20996
)
"solving.ml" 666 20650 20656 "solving.ml" 666 20650 20659
type(
  int
)
ident(
  def res "solving.ml" 667 20694 20696 "solving.ml" 676 20991 20996
)
"solving.ml" 666 20650 20662 "solving.ml" 666 20650 20683
type(
  Apron.Scalar.t -> int
)
ident(
  ext_ref Apron.Scalar.is_infty
)
"solving.ml" 666 20650 20684 "solving.ml" 666 20650 20690
type(
  Apron.Scalar.t
)
ident(
  int_ref scalar "solving.ml" 665 20614 20641 "solving.ml" 665 20614 20647
)
"solving.ml" 666 20650 20662 "solving.ml" 666 20650 20690
call(
  stack
)
type(
  int
)
"solving.ml" 667 20694 20699 "solving.ml" 667 20694 20702
type(
  int
)
ident(
  int_ref res "solving.ml" 666 20650 20656 "solving.ml" 666 20650 20659
)
"solving.ml" 667 20694 20702 "solving.ml" 667 20694 20704
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( <> )
)
"solving.ml" 667 20694 20704 "solving.ml" 667 20694 20705
type(
  int
)
"solving.ml" 667 20694 20699 "solving.ml" 667 20694 20705
type(
  bool
)
"solving.ml" 668 20711 20715 "solving.ml" 668 20711 20730
type(
  Format.formatter -> string -> unit
)
ident(
  ext_ref Format.pp_print_string
)
"solving.ml" 668 20711 20731 "solving.ml" 668 20711 20734
type(
  Format.formatter
)
ident(
  int_ref fmt "solving.ml" 665 20614 20637 "solving.ml" 665 20614 20640
)
"solving.ml" 669 20735 20745 "solving.ml" 669 20735 20748
type(
  int
)
ident(
  int_ref res "solving.ml" 666 20650 20656 "solving.ml" 666 20650 20659
)
"solving.ml" 669 20735 20748 "solving.ml" 669 20735 20749
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( < )
)
"solving.ml" 669 20735 20749 "solving.ml" 669 20735 20750
type(
  int
)
"solving.ml" 669 20735 20745 "solving.ml" 669 20735 20750
type(
  bool
)
"solving.ml" 669 20735 20756 "solving.ml" 669 20735 20761
type(
  string
)
"solving.ml" 669 20735 20767 "solving.ml" 669 20735 20772
type(
  string
)
"solving.ml" 669 20735 20741 "solving.ml" 669 20735 20773
type(
  string
)
"solving.ml" 668 20711 20715 "solving.ml" 669 20735 20773
call(
  tail
)
type(
  unit
)
"solving.ml" 671 20787 20797 "solving.ml" 671 20787 20803
type(
  Apron.Scalar.t
)
ident(
  int_ref scalar "solving.ml" 665 20614 20641 "solving.ml" 665 20614 20647
)
"solving.ml" 672 20809 20834 "solving.ml" 672 20809 20835
type(
  float
)
"solving.ml" 672 20809 20815 "solving.ml" 672 20809 20835
type(
  Apron.Scalar.t
)
"solving.ml" 672 20809 20857 "solving.ml" 672 20809 20858
type(
  Mpfrf.t
)
"solving.ml" 672 20809 20838 "solving.ml" 672 20809 20858
type(
  Apron.Scalar.t
)
"solving.ml" 672 20809 20815 "solving.ml" 672 20809 20858
type(
  Apron.Scalar.t
)
"solving.ml" 673 20862 20863 "solving.ml" 673 20862 20881
type(
  Format.formatter -> Apron.Scalar.t -> unit
)
ident(
  ext_ref Apron.Scalar.print
)
"solving.ml" 673 20862 20882 "solving.ml" 673 20862 20885
type(
  Format.formatter
)
ident(
  int_ref fmt "solving.ml" 665 20614 20637 "solving.ml" 665 20614 20640
)
"solving.ml" 673 20862 20886 "solving.ml" 673 20862 20892
type(
  Apron.Scalar.t
)
ident(
  int_ref scalar "solving.ml" 665 20614 20641 "solving.ml" 665 20614 20647
)
"solving.ml" 673 20862 20863 "solving.ml" 673 20862 20892
call(
  tail
)
type(
  unit
)
"solving.ml" 674 20893 20917 "solving.ml" 674 20893 20921
type(
  Mpqf.t
)
ident(
  def mpqf "solving.ml" 675 20925 20926 "solving.ml" 675 20925 20990
)
"solving.ml" 674 20893 20899 "solving.ml" 674 20893 20921
type(
  Apron.Scalar.t
)
"solving.ml" 675 20925 20926 "solving.ml" 675 20925 20944
type(
  Format.formatter -> Apron.Scalar.t -> unit
)
ident(
  ext_ref Apron.Scalar.print
)
"solving.ml" 675 20925 20945 "solving.ml" 675 20925 20948
type(
  Format.formatter
)
ident(
  int_ref fmt "solving.ml" 665 20614 20637 "solving.ml" 665 20614 20640
)
"solving.ml" 675 20925 20970 "solving.ml" 675 20925 20983
type(
  Mpq.f Mpqf.tt -> float
)
ident(
  ext_ref Mpqf.to_float
)
"solving.ml" 675 20925 20984 "solving.ml" 675 20925 20988
type(
  Mpqf.t
)
ident(
  int_ref mpqf "solving.ml" 674 20893 20917 "solving.ml" 674 20893 20921
)
"solving.ml" 675 20925 20969 "solving.ml" 675 20925 20989
call(
  stack
)
type(
  float
)
"solving.ml" 675 20925 20949 "solving.ml" 675 20925 20990
type(
  Apron.Scalar.t
)
"solving.ml" 675 20925 20926 "solving.ml" 675 20925 20990
call(
  tail
)
type(
  unit
)
"solving.ml" 670 20774 20781 "solving.ml" 676 20991 20996
type(
  unit
)
"solving.ml" 667 20694 20696 "solving.ml" 676 20991 20996
type(
  unit
)
"solving.ml" 666 20650 20652 "solving.ml" 676 20991 20996
type(
  unit
)
"solving.ml" 678 20998 21002 "solving.ml" 678 20998 21022
type(
  Format.formatter -> Apron.Interval.t -> unit
)
ident(
  def print_apron_interval "solving.ml" 683 21167 21167 "solving.ml" 1 0 -1
)
"solving.ml" 678 20998 21023 "solving.ml" 678 20998 21026
type(
  Format.formatter
)
ident(
  def fmt "solving.ml" 678 20998 21027 "solving.ml" 681 21120 21165
)
"solving.ml" 678 20998 21027 "solving.ml" 678 20998 21030
type(
  Apron.Interval.t
)
ident(
  def itv "solving.ml" 679 21033 21035 "solving.ml" 681 21120 21165
)
"solving.ml" 679 21033 21035 "solving.ml" 679 21033 21049
type(
  Format.formatter ->
  ((Format.formatter -> Apron.Scalar.t -> unit) ->
   Apron.Scalar.t ->
   (Format.formatter -> Apron.Scalar.t -> unit) -> Apron.Scalar.t -> unit,
   Format.formatter, unit)
  format ->
  (Format.formatter -> Apron.Scalar.t -> unit) ->
  Apron.Scalar.t ->
  (Format.formatter -> Apron.Scalar.t -> unit) -> Apron.Scalar.t -> unit
)
ident(
  ext_ref Format.fprintf
)
"solving.ml" 679 21033 21050 "solving.ml" 679 21033 21053
type(
  Format.formatter
)
ident(
  int_ref fmt "solving.ml" 678 20998 21023 "solving.ml" 678 20998 21026
)
"solving.ml" 679 21033 21054 "solving.ml" 679 21033 21073
type(
  ((Format.formatter -> Apron.Scalar.t -> unit) ->
   Apron.Scalar.t ->
   (Format.formatter -> Apron.Scalar.t -> unit) -> Apron.Scalar.t -> unit,
   Format.formatter, unit)
  format
)
"solving.ml" 680 21074 21078 "solving.ml" 680 21074 21096
type(
  Format.formatter -> Apron.Scalar.t -> unit
)
ident(
  int_ref print_apron_scalar "solving.ml" 665 20614 20618 "solving.ml" 665 20614 20636
)
"solving.ml" 680 21074 21097 "solving.ml" 680 21074 21100
type(
  Apron.Interval.t
)
ident(
  int_ref itv "solving.ml" 678 20998 21027 "solving.ml" 678 20998 21030
)
"solving.ml" 680 21074 21097 "solving.ml" 680 21074 21119
type(
  Apron.Scalar.t
)
"solving.ml" 681 21120 21124 "solving.ml" 681 21120 21142
type(
  Format.formatter -> Apron.Scalar.t -> unit
)
ident(
  int_ref print_apron_scalar "solving.ml" 665 20614 20618 "solving.ml" 665 20614 20636
)
"solving.ml" 681 21120 21143 "solving.ml" 681 21120 21146
type(
  Apron.Interval.t
)
ident(
  int_ref itv "solving.ml" 678 20998 21027 "solving.ml" 678 20998 21030
)
"solving.ml" 681 21120 21143 "solving.ml" 681 21120 21165
type(
  Apron.Scalar.t
)
"solving.ml" 679 21033 21035 "solving.ml" 681 21120 21165
call(
  tail
)
type(
  unit
)
"solving.ml" 683 21167 21171 "solving.ml" 683 21167 21186
type(
  Format.formatter -> Apron.Abstract1.box1 -> unit
)
ident(
  def print_apron_box "solving.ml" 703 21711 21711 "solving.ml" 1 0 -1
)
"solving.ml" 683 21167 21187 "solving.ml" 683 21167 21190
type(
  Format.formatter
)
ident(
  def fmt "solving.ml" 683 21167 21191 "solving.ml" 701 21689 21709
)
"solving.ml" 683 21167 21191 "solving.ml" 683 21167 21194
type(
  Apron.Abstract1.box1
)
ident(
  def box "solving.ml" 684 21197 21199 "solving.ml" 701 21689 21709
)
"solving.ml" 684 21197 21203 "solving.ml" 684 21197 21212
type(
  Apron.Interval.t array
)
ident(
  def tinterval "solving.ml" 685 21253 21255 "solving.ml" 701 21689 21709
)
"solving.ml" 684 21197 21215 "solving.ml" 684 21197 21218
type(
  Apron.Abstract1.box1
)
ident(
  int_ref box "solving.ml" 683 21167 21191 "solving.ml" 683 21167 21194
)
"solving.ml" 684 21197 21215 "solving.ml" 684 21197 21249
type(
  Apron.Interval.t array
)
"solving.ml" 685 21253 21259 "solving.ml" 685 21253 21262
type(
  Apron.Environment.t
)
ident(
  def env "solving.ml" 686 21297 21299 "solving.ml" 701 21689 21709
)
"solving.ml" 685 21253 21265 "solving.ml" 685 21253 21268
type(
  Apron.Abstract1.box1
)
ident(
  int_ref box "solving.ml" 683 21167 21191 "solving.ml" 683 21167 21194
)
"solving.ml" 685 21253 21265 "solving.ml" 685 21253 21293
type(
  Apron.Environment.t
)
"solving.ml" 686 21297 21303 "solving.ml" 686 21297 21308
type(
  bool ref
)
ident(
  def first "solving.ml" 687 21323 21325 "solving.ml" 701 21689 21709
)
"solving.ml" 686 21297 21311 "solving.ml" 686 21297 21314
type(
  bool -> bool ref
)
ident(
  ext_ref Pervasives.ref
)
"solving.ml" 686 21297 21315 "solving.ml" 686 21297 21319
type(
  bool
)
"solving.ml" 686 21297 21311 "solving.ml" 686 21297 21319
type(
  bool ref
)
"solving.ml" 687 21323 21325 "solving.ml" 687 21323 21332
type(
  Format.formatter -> (unit, Format.formatter, unit) format -> unit
)
ident(
  ext_ref Format.fprintf
)
"solving.ml" 687 21323 21333 "solving.ml" 687 21323 21336
type(
  Format.formatter
)
ident(
  int_ref fmt "solving.ml" 683 21167 21187 "solving.ml" 683 21167 21190
)
"solving.ml" 687 21323 21337 "solving.ml" 687 21323 21343
type(
  (unit, Format.formatter, unit) format
)
"solving.ml" 687 21323 21325 "solving.ml" 687 21323 21343
call(
  stack
)
type(
  unit
)
"solving.ml" 688 21345 21347 "solving.ml" 688 21345 21358
type(
  (Apron.Dim.t -> Apron.Interval.t -> unit) -> Apron.Interval.t array -> unit
)
ident(
  ext_ref Array.iteri
)
"solving.ml" 689 21359 21374 "solving.ml" 689 21359 21375
type(
  Apron.Dim.t
)
ident(
  def i "solving.ml" 689 21359 21376 "solving.ml" 697 21651 21661
)
"solving.ml" 689 21359 21376 "solving.ml" 689 21359 21384
type(
  Apron.Interval.t
)
ident(
  def interval "solving.ml" 690 21388 21394 "solving.ml" 697 21651 21661
)
"solving.ml" 690 21388 21397 "solving.ml" 690 21388 21400
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"solving.ml" 690 21388 21402 "solving.ml" 690 21388 21423
type(
  Apron.Interval.t -> bool
)
ident(
  ext_ref Apron.Interval.is_top
)
"solving.ml" 690 21388 21424 "solving.ml" 690 21388 21432
type(
  Apron.Interval.t
)
ident(
  int_ref interval "solving.ml" 689 21359 21376 "solving.ml" 689 21359 21384
)
"solving.ml" 690 21388 21401 "solving.ml" 690 21388 21433
call(
  stack
)
type(
  bool
)
"solving.ml" 690 21388 21397 "solving.ml" 690 21388 21433
type(
  bool
)
"solving.ml" 691 21445 21449 "solving.ml" 691 21445 21452
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"solving.ml" 691 21445 21453 "solving.ml" 691 21445 21454
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"solving.ml" 691 21445 21454 "solving.ml" 691 21445 21459
type(
  bool ref
)
ident(
  int_ref first "solving.ml" 686 21297 21303 "solving.ml" 686 21297 21308
)
"solving.ml" 691 21445 21453 "solving.ml" 691 21445 21459
type(
  bool
)
"solving.ml" 691 21445 21449 "solving.ml" 691 21445 21459
type(
  bool
)
"solving.ml" 691 21445 21465 "solving.ml" 691 21445 21472
type(
  Format.formatter -> (unit, Format.formatter, unit) format -> unit
)
ident(
  ext_ref Format.fprintf
)
"solving.ml" 691 21445 21473 "solving.ml" 691 21445 21476
type(
  Format.formatter
)
ident(
  int_ref fmt "solving.ml" 683 21167 21187 "solving.ml" 683 21167 21190
)
"solving.ml" 691 21445 21477 "solving.ml" 691 21445 21482
type(
  (unit, Format.formatter, unit) format
)
"solving.ml" 691 21445 21465 "solving.ml" 691 21445 21482
call(
  stack
)
type(
  unit
)
"solving.ml" 691 21445 21446 "solving.ml" 691 21445 21482
type(
  unit
)
"solving.ml" 692 21484 21489 "solving.ml" 692 21484 21492
type(
  Apron.Var.t
)
ident(
  def var "solving.ml" 693 21533 21534 "solving.ml" 696 21635 21650
)
"solving.ml" 692 21484 21495 "solving.ml" 692 21484 21523
type(
  Apron.Environment.t -> Apron.Dim.t -> Apron.Var.t
)
ident(
  ext_ref Apron.Environment.var_of_dim
)
"solving.ml" 692 21484 21524 "solving.ml" 692 21484 21527
type(
  Apron.Environment.t
)
ident(
  int_ref env "solving.ml" 685 21253 21259 "solving.ml" 685 21253 21262
)
"solving.ml" 692 21484 21528 "solving.ml" 692 21484 21529
type(
  Apron.Dim.t
)
ident(
  int_ref i "solving.ml" 689 21359 21374 "solving.ml" 689 21359 21375
)
"solving.ml" 692 21484 21495 "solving.ml" 692 21484 21529
type(
  Apron.Var.t
)
"solving.ml" 693 21533 21538 "solving.ml" 693 21533 21542
type(
  string
)
ident(
  def name "solving.ml" 694 21572 21573 "solving.ml" 696 21635 21650
)
"solving.ml" 693 21533 21545 "solving.ml" 693 21533 21564
type(
  Apron.Var.t -> string
)
ident(
  ext_ref Apron.Var.to_string
)
"solving.ml" 693 21533 21565 "solving.ml" 693 21533 21568
type(
  Apron.Var.t
)
ident(
  int_ref var "solving.ml" 692 21484 21489 "solving.ml" 692 21484 21492
)
"solving.ml" 693 21533 21545 "solving.ml" 693 21533 21568
type(
  string
)
"solving.ml" 694 21572 21573 "solving.ml" 694 21572 21580
type(
  Format.formatter ->
  (string ->
   (Format.formatter -> Apron.Interval.t -> unit) -> Apron.Interval.t -> unit,
   Format.formatter, unit)
  format ->
  string ->
  (Format.formatter -> Apron.Interval.t -> unit) -> Apron.Interval.t -> unit
)
ident(
  ext_ref Format.fprintf
)
"solving.ml" 694 21572 21581 "solving.ml" 694 21572 21584
type(
  Format.formatter
)
ident(
  int_ref fmt "solving.ml" 683 21167 21187 "solving.ml" 683 21167 21190
)
"solving.ml" 694 21572 21585 "solving.ml" 694 21572 21595
type(
  (string ->
   (Format.formatter -> Apron.Interval.t -> unit) -> Apron.Interval.t -> unit,
   Format.formatter, unit)
  format
)
"solving.ml" 694 21572 21596 "solving.ml" 694 21572 21600
type(
  string
)
ident(
  int_ref name "solving.ml" 693 21533 21538 "solving.ml" 693 21533 21542
)
"solving.ml" 695 21601 21604 "solving.ml" 695 21601 21624
type(
  Format.formatter -> Apron.Interval.t -> unit
)
ident(
  int_ref print_apron_interval "solving.ml" 678 20998 21002 "solving.ml" 678 20998 21022
)
"solving.ml" 695 21601 21625 "solving.ml" 695 21601 21633
type(
  Apron.Interval.t
)
ident(
  int_ref interval "solving.ml" 689 21359 21376 "solving.ml" 689 21359 21384
)
"solving.ml" 694 21572 21573 "solving.ml" 695 21601 21633
call(
  stack
)
type(
  unit
)
"solving.ml" 696 21635 21636 "solving.ml" 696 21635 21641
type(
  bool ref
)
ident(
  int_ref first "solving.ml" 686 21297 21303 "solving.ml" 686 21297 21308
)
"solving.ml" 696 21635 21642 "solving.ml" 696 21635 21644
type(
  bool ref -> bool -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"solving.ml" 696 21635 21645 "solving.ml" 696 21635 21650
type(
  bool
)
"solving.ml" 696 21635 21636 "solving.ml" 696 21635 21650
type(
  unit
)
"solving.ml" 694 21572 21573 "solving.ml" 696 21635 21650
type(
  unit
)
"solving.ml" 693 21533 21534 "solving.ml" 696 21635 21650
type(
  unit
)
"solving.ml" 692 21484 21485 "solving.ml" 696 21635 21650
type(
  unit
)
"solving.ml" 690 21388 21439 "solving.ml" 697 21651 21660
type(
  unit
)
"solving.ml" 690 21388 21394 "solving.ml" 697 21651 21661
type(
  unit
)
"solving.ml" 689 21359 21363 "solving.ml" 698 21662 21670
type(
  Apron.Dim.t -> Apron.Interval.t -> unit
)
"solving.ml" 699 21671 21675 "solving.ml" 699 21671 21684
type(
  Apron.Interval.t array
)
ident(
  int_ref tinterval "solving.ml" 684 21197 21203 "solving.ml" 684 21197 21212
)
"solving.ml" 688 21345 21347 "solving.ml" 699 21671 21684
call(
  stack
)
type(
  unit
)
"solving.ml" 701 21689 21691 "solving.ml" 701 21689 21698
type(
  Format.formatter -> (unit, Format.formatter, unit) format -> unit
)
ident(
  ext_ref Format.fprintf
)
"solving.ml" 701 21689 21699 "solving.ml" 701 21689 21702
type(
  Format.formatter
)
ident(
  int_ref fmt "solving.ml" 683 21167 21187 "solving.ml" 683 21167 21190
)
"solving.ml" 701 21689 21703 "solving.ml" 701 21689 21709
type(
  (unit, Format.formatter, unit) format
)
"solving.ml" 701 21689 21691 "solving.ml" 701 21689 21709
call(
  tail
)
type(
  unit
)
"solving.ml" 688 21345 21347 "solving.ml" 701 21689 21709
type(
  unit
)
"solving.ml" 687 21323 21325 "solving.ml" 701 21689 21709
type(
  unit
)
"solving.ml" 686 21297 21299 "solving.ml" 701 21689 21709
type(
  unit
)
"solving.ml" 685 21253 21255 "solving.ml" 701 21689 21709
type(
  unit
)
"solving.ml" 684 21197 21199 "solving.ml" 701 21689 21709
type(
  unit
)
"solving.ml" 703 21711 21715 "solving.ml" 703 21711 21730
type(
  Format.formatter -> 'a Apron.Abstract1.t -> unit
)
ident(
  def print_abstract1 "solving.ml" 711 21939 21939 "solving.ml" 1 0 -1
)
"solving.ml" 703 21711 21731 "solving.ml" 703 21711 21734
type(
  Format.formatter
)
ident(
  def fmt "solving.ml" 703 21711 21735 "solving.ml" 709 21904 21937
)
"solving.ml" 703 21711 21735 "solving.ml" 703 21711 21738
type(
  'a Apron.Abstract1.t
)
ident(
  def abs "solving.ml" 704 21741 21743 "solving.ml" 709 21904 21937
)
"solving.ml" 704 21741 21746 "solving.ml" 704 21741 21747
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"solving.ml" 704 21741 21747 "solving.ml" 704 21741 21763
type(
  bool ref
)
ident(
  ext_ref Option.print_box
)
"solving.ml" 704 21741 21746 "solving.ml" 704 21741 21763
type(
  bool
)
"solving.ml" 705 21769 21779 "solving.ml" 705 21769 21782
type(
  'a Apron.Manager.t
)
ident(
  def man "solving.ml" 706 21816 21822 "solving.ml" 707 21866 21896
)
"solving.ml" 705 21769 21785 "solving.ml" 705 21769 21808
type(
  'a Apron.Abstract1.t -> 'a Apron.Manager.t
)
ident(
  ext_ref Apron.Abstract1.manager
)
"solving.ml" 705 21769 21809 "solving.ml" 705 21769 21812
type(
  'a Apron.Abstract1.t
)
ident(
  int_ref abs "solving.ml" 703 21711 21735 "solving.ml" 703 21711 21738
)
"solving.ml" 705 21769 21785 "solving.ml" 705 21769 21812
call(
  stack
)
type(
  'a Apron.Manager.t
)
"solving.ml" 706 21816 21826 "solving.ml" 706 21816 21829
type(
  Apron.Abstract1.box1
)
ident(
  def box "solving.ml" 707 21866 21872 "solving.ml" 707 21866 21896
)
"solving.ml" 706 21816 21832 "solving.ml" 706 21816 21854
type(
  'a Apron.Manager.t -> 'a Apron.Abstract1.t -> Apron.Abstract1.box1
)
ident(
  ext_ref Apron.Abstract1.to_box
)
"solving.ml" 706 21816 21855 "solving.ml" 706 21816 21858
type(
  'a Apron.Manager.t
)
ident(
  int_ref man "solving.ml" 705 21769 21779 "solving.ml" 705 21769 21782
)
"solving.ml" 706 21816 21859 "solving.ml" 706 21816 21862
type(
  'a Apron.Abstract1.t
)
ident(
  int_ref abs "solving.ml" 703 21711 21735 "solving.ml" 703 21711 21738
)
"solving.ml" 706 21816 21832 "solving.ml" 706 21816 21862
call(
  stack
)
type(
  Apron.Abstract1.box1
)
"solving.ml" 707 21866 21872 "solving.ml" 707 21866 21887
type(
  Format.formatter -> Apron.Abstract1.box1 -> unit
)
ident(
  int_ref print_apron_box "solving.ml" 683 21167 21171 "solving.ml" 683 21167 21186
)
"solving.ml" 707 21866 21888 "solving.ml" 707 21866 21891
type(
  Format.formatter
)
ident(
  int_ref fmt "solving.ml" 703 21711 21731 "solving.ml" 703 21711 21734
)
"solving.ml" 707 21866 21892 "solving.ml" 707 21866 21895
type(
  Apron.Abstract1.box1
)
ident(
  int_ref box "solving.ml" 706 21816 21826 "solving.ml" 706 21816 21829
)
"solving.ml" 707 21866 21872 "solving.ml" 707 21866 21896
call(
  tail
)
type(
  unit
)
"solving.ml" 706 21816 21822 "solving.ml" 707 21866 21896
type(
  unit
)
"solving.ml" 705 21769 21775 "solving.ml" 707 21866 21896
type(
  unit
)
"solving.ml" 709 21904 21908 "solving.ml" 709 21904 21929
type(
  Format.formatter -> 'a Apron.Abstract1.t -> unit
)
ident(
  ext_ref Apron.Abstract1.print
)
"solving.ml" 709 21904 21930 "solving.ml" 709 21904 21933
type(
  Format.formatter
)
ident(
  int_ref fmt "solving.ml" 703 21711 21731 "solving.ml" 703 21711 21734
)
"solving.ml" 709 21904 21934 "solving.ml" 709 21904 21937
type(
  'a Apron.Abstract1.t
)
ident(
  int_ref abs "solving.ml" 703 21711 21735 "solving.ml" 703 21711 21738
)
"solving.ml" 709 21904 21908 "solving.ml" 709 21904 21937
call(
  tail
)
type(
  unit
)
"solving.ml" 704 21741 21743 "solving.ml" 709 21904 21937
type(
  unit
)
"solving.ml" 711 21939 21943 "solving.ml" 711 21939 21955
type(
  Spl_syn.program ->
  Format.formatter ->
  (Spl_syn.point, 'a, 'b Apron.Abstract1.t, 'c, 'd) PSHGraph.t -> unit
)
ident(
  def print_output "solving.ml" 722 22297 22305 "solving.ml" 1 0 -1
)
"solving.ml" 711 21939 21956 "solving.ml" 711 21939 21960
type(
  Spl_syn.program
)
ident(
  def prog "solving.ml" 711 21939 21961 "solving.ml" 722 22297 22305
)
"solving.ml" 711 21939 21961 "solving.ml" 711 21939 21964
type(
  Format.formatter
)
ident(
  def fmt "solving.ml" 711 21939 21965 "solving.ml" 722 22297 22305
)
"solving.ml" 711 21939 21965 "solving.ml" 711 21939 21967
type(
  (Spl_syn.point, 'a, 'b Apron.Abstract1.t, 'c, 'd) PSHGraph.t
)
ident(
  def fp "solving.ml" 712 21970 21972 "solving.ml" 722 22297 22305
)
"solving.ml" 712 21970 21972 "solving.ml" 712 21970 21979
type(
  Format.formatter ->
  ((Format.formatter -> Spl_syn.program -> unit) -> Spl_syn.program -> unit,
   Format.formatter, unit)
  format ->
  (Format.formatter -> Spl_syn.program -> unit) -> Spl_syn.program -> unit
)
ident(
  ext_ref Format.fprintf
)
"solving.ml" 712 21970 21980 "solving.ml" 712 21970 21983
type(
  Format.formatter
)
ident(
  int_ref fmt "solving.ml" 711 21939 21961 "solving.ml" 711 21939 21964
)
"solving.ml" 712 21970 21984 "solving.ml" 712 21970 21997
type(
  ((Format.formatter -> Spl_syn.program -> unit) -> Spl_syn.program -> unit,
   Format.formatter, unit)
  format
)
"solving.ml" 713 21998 22003 "solving.ml" 713 21998 22025
type(
  (Format.formatter -> Spl_syn.point -> unit) ->
  Format.formatter -> Spl_syn.program -> unit
)
ident(
  ext_ref PSpl_syn.print_program
)
"solving.ml" 714 22026 22042 "solving.ml" 714 22026 22045
type(
  Format.formatter
)
ident(
  def fmt "solving.ml" 714 22026 22046 "solving.ml" 720 22244 22285
)
"solving.ml" 714 22026 22047 "solving.ml" 714 22026 22052
type(
  Spl_syn.point
)
ident(
  def point "solving.ml" 715 22071 22072 "solving.ml" 720 22244 22285
)
"solving.ml" 715 22071 22076 "solving.ml" 715 22071 22079
type(
  'b Apron.Abstract1.t
)
ident(
  def abs "solving.ml" 716 22114 22115 "solving.ml" 720 22244 22285
)
"solving.ml" 715 22071 22082 "solving.ml" 715 22071 22101
type(
  (Spl_syn.point, 'a, 'b Apron.Abstract1.t, 'c, 'd) PSHGraph.t ->
  Spl_syn.point -> 'b Apron.Abstract1.t
)
ident(
  ext_ref PSHGraph.attrvertex
)
"solving.ml" 715 22071 22102 "solving.ml" 715 22071 22104
type(
  (Spl_syn.point, 'a, 'b Apron.Abstract1.t, 'c, 'd) PSHGraph.t
)
ident(
  int_ref fp "solving.ml" 711 21939 21965 "solving.ml" 711 21939 21967
)
"solving.ml" 715 22071 22105 "solving.ml" 715 22071 22110
type(
  Spl_syn.point
)
ident(
  int_ref point "solving.ml" 714 22026 22047 "solving.ml" 714 22026 22052
)
"solving.ml" 715 22071 22082 "solving.ml" 715 22071 22110
call(
  stack
)
type(
  'b Apron.Abstract1.t
)
"solving.ml" 716 22114 22115 "solving.ml" 716 22114 22122
type(
  Format.formatter ->
  (string ->
   (Format.formatter -> Spl_syn.point -> unit) ->
   Spl_syn.point ->
   (Format.formatter -> 'b Apron.Abstract1.t -> unit) ->
   'b Apron.Abstract1.t -> string -> unit, Format.formatter, unit)
  format ->
  string ->
  (Format.formatter -> Spl_syn.point -> unit) ->
  Spl_syn.point ->
  (Format.formatter -> 'b Apron.Abstract1.t -> unit) ->
  'b Apron.Abstract1.t -> string -> unit
)
ident(
  ext_ref Format.fprintf
)
"solving.ml" 716 22114 22123 "solving.ml" 716 22114 22126
type(
  Format.formatter
)
ident(
  int_ref fmt "solving.ml" 714 22026 22042 "solving.ml" 714 22026 22045
)
"solving.ml" 716 22114 22127 "solving.ml" 716 22114 22148
type(
  (string ->
   (Format.formatter -> Spl_syn.point -> unit) ->
   Spl_syn.point ->
   (Format.formatter -> 'b Apron.Abstract1.t -> unit) ->
   'b Apron.Abstract1.t -> string -> unit, Format.formatter, unit)
  format
)
"solving.ml" 717 22149 22153 "solving.ml" 717 22149 22154
type(
  Option.displaytags ref -> Option.displaytags
)
ident(
  ext_ref Pervasives.( ! )
)
"solving.ml" 717 22149 22154 "solving.ml" 717 22149 22172
type(
  Option.displaytags ref
)
ident(
  ext_ref Option.displaytags
)
"solving.ml" 717 22149 22152 "solving.ml" 717 22149 22173
type(
  Option.displaytags
)
"solving.ml" 717 22149 22152 "solving.ml" 717 22149 22190
type(
  string
)
"solving.ml" 718 22191 22194 "solving.ml" 718 22191 22214
type(
  Format.formatter -> Spl_syn.point -> unit
)
ident(
  ext_ref PSpl_syn.print_point
)
"solving.ml" 718 22191 22215 "solving.ml" 718 22191 22220
type(
  Spl_syn.point
)
ident(
  int_ref point "solving.ml" 714 22026 22047 "solving.ml" 714 22026 22052
)
"solving.ml" 719 22221 22224 "solving.ml" 719 22221 22239
type(
  Format.formatter -> 'b Apron.Abstract1.t -> unit
)
ident(
  int_ref print_abstract1 "solving.ml" 703 21711 21715 "solving.ml" 703 21711 21730
)
"solving.ml" 719 22221 22240 "solving.ml" 719 22221 22243
type(
  'b Apron.Abstract1.t
)
ident(
  int_ref abs "solving.ml" 715 22071 22076 "solving.ml" 715 22071 22079
)
"solving.ml" 720 22244 22248 "solving.ml" 720 22244 22249
type(
  Option.displaytags ref -> Option.displaytags
)
ident(
  ext_ref Pervasives.( ! )
)
"solving.ml" 720 22244 22249 "solving.ml" 720 22244 22267
type(
  Option.displaytags ref
)
ident(
  ext_ref Option.displaytags
)
"solving.ml" 720 22244 22247 "solving.ml" 720 22244 22268
type(
  Option.displaytags
)
"solving.ml" 720 22244 22247 "solving.ml" 720 22244 22285
type(
  string
)
"solving.ml" 716 22114 22115 "solving.ml" 720 22244 22285
call(
  tail
)
type(
  unit
)
"solving.ml" 715 22071 22072 "solving.ml" 720 22244 22285
type(
  unit
)
"solving.ml" 714 22026 22032 "solving.ml" 721 22286 22295
type(
  Format.formatter -> Spl_syn.point -> unit
)
"solving.ml" 713 21998 22002 "solving.ml" 721 22286 22296
call(
  stack
)
type(
  Format.formatter -> Spl_syn.program -> unit
)
"solving.ml" 722 22297 22301 "solving.ml" 722 22297 22305
type(
  Spl_syn.program
)
ident(
  int_ref prog "solving.ml" 711 21939 21956 "solving.ml" 711 21939 21960
)
"solving.ml" 712 21970 21972 "solving.ml" 722 22297 22305
call(
  tail
)
type(
  unit
)
