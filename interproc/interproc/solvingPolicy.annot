"solvingPolicy.ml" 13 302 306 "solvingPolicy.ml" 13 302 318
type(
  'a Apron.Policy.man ->
  'a Apron.Policy.t Boolexpr.t -> 'a Apron.Policy.t Boolexpr.t -> bool
)
ident(
  def policy_equal "solvingPolicy.ml" 18 435 435 "solvingPolicy.ml" 1 0 -1
)
"solvingPolicy.ml" 13 302 319 "solvingPolicy.ml" 13 302 327
type(
  'a Apron.Policy.man
)
ident(
  def pmanager "solvingPolicy.ml" 13 302 328 "solvingPolicy.ml" 16 419 433
)
"solvingPolicy.ml" 13 302 328 "solvingPolicy.ml" 13 302 330
type(
  'a Apron.Policy.t Boolexpr.t
)
ident(
  def p1 "solvingPolicy.ml" 13 302 331 "solvingPolicy.ml" 16 419 433
)
"solvingPolicy.ml" 13 302 331 "solvingPolicy.ml" 13 302 333
type(
  'a Apron.Policy.t Boolexpr.t
)
ident(
  def p2 "solvingPolicy.ml" 14 336 338 "solvingPolicy.ml" 16 419 433
)
"solvingPolicy.ml" 14 336 338 "solvingPolicy.ml" 14 336 352
type(
  (bool -> 'a Apron.Policy.t -> 'a Apron.Policy.t -> bool) ->
  bool ->
  'a Apron.Policy.t Boolexpr.t -> 'a Apron.Policy.t Boolexpr.t -> bool
)
ident(
  ext_ref Boolexpr.fold2
)
"solvingPolicy.ml" 15 353 362 "solvingPolicy.ml" 15 353 365
type(
  bool
)
ident(
  def res "solvingPolicy.ml" 15 353 366 "solvingPolicy.ml" 15 353 417
)
"solvingPolicy.ml" 15 353 366 "solvingPolicy.ml" 15 353 368
type(
  'a Apron.Policy.t
)
ident(
  def p1 "solvingPolicy.ml" 15 353 369 "solvingPolicy.ml" 15 353 417
)
"solvingPolicy.ml" 15 353 369 "solvingPolicy.ml" 15 353 371
type(
  'a Apron.Policy.t
)
ident(
  def p2 "solvingPolicy.ml" 15 353 375 "solvingPolicy.ml" 15 353 417
)
"solvingPolicy.ml" 15 353 375 "solvingPolicy.ml" 15 353 378
type(
  bool
)
ident(
  int_ref res "solvingPolicy.ml" 15 353 362 "solvingPolicy.ml" 15 353 365
)
"solvingPolicy.ml" 15 353 379 "solvingPolicy.ml" 15 353 381
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( && )
)
"solvingPolicy.ml" 15 353 383 "solvingPolicy.ml" 15 353 401
type(
  'a Apron.Policy.man -> 'a Apron.Policy.t -> 'a Apron.Policy.t -> bool
)
ident(
  ext_ref Apron.Policy.equal
)
"solvingPolicy.ml" 15 353 402 "solvingPolicy.ml" 15 353 410
type(
  'a Apron.Policy.man
)
ident(
  int_ref pmanager "solvingPolicy.ml" 13 302 319 "solvingPolicy.ml" 13 302 327
)
"solvingPolicy.ml" 15 353 411 "solvingPolicy.ml" 15 353 413
type(
  'a Apron.Policy.t
)
ident(
  int_ref p1 "solvingPolicy.ml" 15 353 366 "solvingPolicy.ml" 15 353 368
)
"solvingPolicy.ml" 15 353 414 "solvingPolicy.ml" 15 353 416
type(
  'a Apron.Policy.t
)
ident(
  int_ref p2 "solvingPolicy.ml" 15 353 369 "solvingPolicy.ml" 15 353 371
)
"solvingPolicy.ml" 15 353 382 "solvingPolicy.ml" 15 353 417
type(
  bool
)
"solvingPolicy.ml" 15 353 375 "solvingPolicy.ml" 15 353 417
type(
  bool
)
"solvingPolicy.ml" 15 353 357 "solvingPolicy.ml" 15 353 418
type(
  bool -> 'a Apron.Policy.t -> 'a Apron.Policy.t -> bool
)
"solvingPolicy.ml" 16 419 423 "solvingPolicy.ml" 16 419 427
type(
  bool
)
"solvingPolicy.ml" 16 419 428 "solvingPolicy.ml" 16 419 430
type(
  'a Apron.Policy.t Boolexpr.t
)
ident(
  int_ref p1 "solvingPolicy.ml" 13 302 328 "solvingPolicy.ml" 13 302 330
)
"solvingPolicy.ml" 16 419 431 "solvingPolicy.ml" 16 419 433
type(
  'a Apron.Policy.t Boolexpr.t
)
ident(
  int_ref p2 "solvingPolicy.ml" 13 302 331 "solvingPolicy.ml" 13 302 333
)
"solvingPolicy.ml" 14 336 338 "solvingPolicy.ml" 16 419 433
call(
  tail
)
type(
  bool
)
"solvingPolicy.ml" 18 435 439 "solvingPolicy.ml" 18 435 451
type(
  'a Apron.Policy.man ->
  Format.formatter -> 'a Apron.Policy.t Boolexpr.t -> unit
)
ident(
  def policy_print "solvingPolicy.ml" 21 530 530 "solvingPolicy.ml" 1 0 -1
)
"solvingPolicy.ml" 18 435 452 "solvingPolicy.ml" 18 435 456
type(
  'a Apron.Policy.man
)
ident(
  def pman "solvingPolicy.ml" 18 435 457 "solvingPolicy.ml" 19 465 528
)
"solvingPolicy.ml" 18 435 457 "solvingPolicy.ml" 18 435 460
type(
  Format.formatter
)
ident(
  def fmt "solvingPolicy.ml" 18 435 461 "solvingPolicy.ml" 19 465 528
)
"solvingPolicy.ml" 18 435 461 "solvingPolicy.ml" 18 435 462
type(
  'a Apron.Policy.t Boolexpr.t
)
ident(
  def p "solvingPolicy.ml" 19 465 467 "solvingPolicy.ml" 19 465 528
)
"solvingPolicy.ml" 19 465 467 "solvingPolicy.ml" 19 465 481
type(
  (Format.formatter -> 'a Apron.Policy.t -> unit) ->
  Format.formatter -> 'a Apron.Policy.t Boolexpr.t -> unit
)
ident(
  ext_ref Boolexpr.print
)
"solvingPolicy.ml" 19 465 487 "solvingPolicy.ml" 19 465 490
type(
  Format.formatter
)
ident(
  def fmt "solvingPolicy.ml" 19 465 491 "solvingPolicy.ml" 19 465 521
)
"solvingPolicy.ml" 19 465 491 "solvingPolicy.ml" 19 465 492
type(
  'a Apron.Policy.t
)
ident(
  def p "solvingPolicy.ml" 19 465 496 "solvingPolicy.ml" 19 465 521
)
"solvingPolicy.ml" 19 465 496 "solvingPolicy.ml" 19 465 514
type(
  'a Apron.Policy.man -> 'a Apron.Policy.t -> unit
)
ident(
  ext_ref Apron.Policy.fdump
)
"solvingPolicy.ml" 19 465 515 "solvingPolicy.ml" 19 465 519
type(
  'a Apron.Policy.man
)
ident(
  int_ref pman "solvingPolicy.ml" 18 435 452 "solvingPolicy.ml" 18 435 456
)
"solvingPolicy.ml" 19 465 520 "solvingPolicy.ml" 19 465 521
type(
  'a Apron.Policy.t
)
ident(
  int_ref p "solvingPolicy.ml" 19 465 491 "solvingPolicy.ml" 19 465 492
)
"solvingPolicy.ml" 19 465 496 "solvingPolicy.ml" 19 465 521
type(
  unit
)
"solvingPolicy.ml" 19 465 482 "solvingPolicy.ml" 19 465 522
type(
  Format.formatter -> 'a Apron.Policy.t -> unit
)
"solvingPolicy.ml" 19 465 523 "solvingPolicy.ml" 19 465 526
type(
  Format.formatter
)
ident(
  int_ref fmt "solvingPolicy.ml" 18 435 457 "solvingPolicy.ml" 18 435 460
)
"solvingPolicy.ml" 19 465 527 "solvingPolicy.ml" 19 465 528
type(
  'a Apron.Policy.t Boolexpr.t
)
ident(
  int_ref p "solvingPolicy.ml" 18 435 461 "solvingPolicy.ml" 18 435 462
)
"solvingPolicy.ml" 19 465 467 "solvingPolicy.ml" 19 465 528
call(
  tail
)
type(
  unit
)
"solvingPolicy.ml" 21 530 534 "solvingPolicy.ml" 21 530 551
type(
  'a Apron.Policy.man ->
  Format.formatter -> (int, 'a Apron.Policy.t Boolexpr.t) Hashhe.t -> unit
)
ident(
  def hash_policy_print "solvingPolicy.ml" 31 801 801 "solvingPolicy.ml" 1 0 -1
)
"solvingPolicy.ml" 21 530 552 "solvingPolicy.ml" 21 530 556
type(
  'a Apron.Policy.man
)
ident(
  def pman "solvingPolicy.ml" 21 530 557 "solvingPolicy.ml" 28 694 722
)
"solvingPolicy.ml" 21 530 557 "solvingPolicy.ml" 21 530 560
type(
  Format.formatter
)
ident(
  def fmt "solvingPolicy.ml" 21 530 561 "solvingPolicy.ml" 28 694 722
)
"solvingPolicy.ml" 21 530 561 "solvingPolicy.ml" 21 530 562
type(
  (int, 'a Apron.Policy.t Boolexpr.t) Hashhe.t
)
ident(
  def p "solvingPolicy.ml" 22 565 567 "solvingPolicy.ml" 28 694 722
)
"solvingPolicy.ml" 22 565 567 "solvingPolicy.ml" 22 565 578
type(
  (int -> 'a Apron.Policy.t Boolexpr.t -> unit) ->
  (int, 'a Apron.Policy.t Boolexpr.t) Hashhe.t -> unit
)
ident(
  ext_ref Hashhe.iter
)
"solvingPolicy.ml" 23 579 594 "solvingPolicy.ml" 23 579 599
type(
  int
)
ident(
  def hedge "solvingPolicy.ml" 23 579 600 "solvingPolicy.ml" 25 650 677
)
"solvingPolicy.ml" 23 579 600 "solvingPolicy.ml" 23 579 606
type(
  'a Apron.Policy.t Boolexpr.t
)
ident(
  def policy "solvingPolicy.ml" 24 610 616 "solvingPolicy.ml" 25 650 677
)
"solvingPolicy.ml" 24 610 616 "solvingPolicy.ml" 24 610 623
type(
  Format.formatter ->
  (int ->
   (Format.formatter -> 'a Apron.Policy.t Boolexpr.t -> unit) ->
   'a Apron.Policy.t Boolexpr.t -> unit, Format.formatter, unit)
  format ->
  int ->
  (Format.formatter -> 'a Apron.Policy.t Boolexpr.t -> unit) ->
  'a Apron.Policy.t Boolexpr.t -> unit
)
ident(
  ext_ref Format.fprintf
)
"solvingPolicy.ml" 24 610 624 "solvingPolicy.ml" 24 610 627
type(
  Format.formatter
)
ident(
  int_ref fmt "solvingPolicy.ml" 21 530 557 "solvingPolicy.ml" 21 530 560
)
"solvingPolicy.ml" 24 610 628 "solvingPolicy.ml" 24 610 643
type(
  (int ->
   (Format.formatter -> 'a Apron.Policy.t Boolexpr.t -> unit) ->
   'a Apron.Policy.t Boolexpr.t -> unit, Format.formatter, unit)
  format
)
"solvingPolicy.ml" 24 610 644 "solvingPolicy.ml" 24 610 649
type(
  int
)
ident(
  int_ref hedge "solvingPolicy.ml" 23 579 594 "solvingPolicy.ml" 23 579 599
)
"solvingPolicy.ml" 25 650 652 "solvingPolicy.ml" 25 650 664
type(
  'a Apron.Policy.man ->
  Format.formatter -> 'a Apron.Policy.t Boolexpr.t -> unit
)
ident(
  int_ref policy_print "solvingPolicy.ml" 18 435 439 "solvingPolicy.ml" 18 435 451
)
"solvingPolicy.ml" 25 650 665 "solvingPolicy.ml" 25 650 669
type(
  'a Apron.Policy.man
)
ident(
  int_ref pman "solvingPolicy.ml" 21 530 552 "solvingPolicy.ml" 21 530 556
)
"solvingPolicy.ml" 25 650 651 "solvingPolicy.ml" 25 650 670
call(
  stack
)
type(
  Format.formatter -> 'a Apron.Policy.t Boolexpr.t -> unit
)
"solvingPolicy.ml" 25 650 671 "solvingPolicy.ml" 25 650 677
type(
  'a Apron.Policy.t Boolexpr.t
)
ident(
  int_ref policy "solvingPolicy.ml" 23 579 600 "solvingPolicy.ml" 23 579 606
)
"solvingPolicy.ml" 24 610 616 "solvingPolicy.ml" 25 650 677
call(
  tail
)
type(
  unit
)
"solvingPolicy.ml" 23 579 583 "solvingPolicy.ml" 26 678 686
type(
  int -> 'a Apron.Policy.t Boolexpr.t -> unit
)
"solvingPolicy.ml" 27 687 691 "solvingPolicy.ml" 27 687 692
type(
  (int, 'a Apron.Policy.t Boolexpr.t) Hashhe.t
)
ident(
  int_ref p "solvingPolicy.ml" 21 530 561 "solvingPolicy.ml" 21 530 562
)
"solvingPolicy.ml" 22 565 567 "solvingPolicy.ml" 27 687 692
call(
  stack
)
type(
  unit
)
"solvingPolicy.ml" 28 694 696 "solvingPolicy.ml" 28 694 703
type(
  Format.formatter -> (unit, Format.formatter, unit) format -> unit
)
ident(
  ext_ref Format.fprintf
)
"solvingPolicy.ml" 28 694 704 "solvingPolicy.ml" 28 694 707
type(
  Format.formatter
)
ident(
  int_ref fmt "solvingPolicy.ml" 21 530 557 "solvingPolicy.ml" 21 530 560
)
"solvingPolicy.ml" 28 694 708 "solvingPolicy.ml" 28 694 722
type(
  (unit, Format.formatter, unit) format
)
"solvingPolicy.ml" 28 694 696 "solvingPolicy.ml" 28 694 722
call(
  tail
)
type(
  unit
)
"solvingPolicy.ml" 22 565 567 "solvingPolicy.ml" 28 694 722
type(
  unit
)
"solvingPolicy.ml" 46 1396 1400 "solvingPolicy.ml" 46 1396 1414
type(
  fmt:Format.formatter ->
  output:(Spl_syn.point, int, 'abstract Apron.Abstract1.t, unit)
         Fixpoint.output option ref ->
  debug:int ->
  graph:Equation.graph ->
  policy:(Equation.hedge, 'abstract policy) Hashhe.t ref ->
  pman:'abstract Apron.Policy.man ->
  abstract_init:(Spl_syn.point -> 'abstract Apron.Abstract1.t) ->
  apply:(Equation.graph ->
         output:(Spl_syn.point, int, 'abstract Apron.Abstract1.t, unit)
                Fixpoint.output option ref ->
         policy:(Equation.hedge, 'abstract policy) Hashhe.t ref ->
         'abstract Apron.Policy.man ->
         Equation.hedge ->
         'abstract Apron.Abstract1.t array ->
         unit * 'abstract Apron.Abstract1.t) ->
  (Spl_syn.point, int, 'abstract Apron.Abstract1.t, unit) Fixpoint.manager
)
ident(
  def make_fpmanager "solvingPolicy.ml" 79 2537 2537 "solvingPolicy.ml" 1 0 -1
)
"solvingPolicy.ml" 47 1415 1421 "solvingPolicy.ml" 47 1415 1424
type(
  Format.formatter
)
ident(
  def fmt "solvingPolicy.ml" 48 1445 1449 "solvingPolicy.ml" 76 2469 2472
)
"solvingPolicy.ml" 48 1445 1451 "solvingPolicy.ml" 48 1445 1457
type(
  (Spl_syn.point, int, 'abstract Apron.Abstract1.t, unit) Fixpoint.output
  option ref
)
ident(
  def output "solvingPolicy.ml" 49 1537 1541 "solvingPolicy.ml" 76 2469 2472
)
"solvingPolicy.ml" 49 1537 1543 "solvingPolicy.ml" 49 1537 1548
type(
  int
)
ident(
  def debug "solvingPolicy.ml" 50 1554 1558 "solvingPolicy.ml" 76 2469 2472
)
"solvingPolicy.ml" 50 1554 1560 "solvingPolicy.ml" 50 1554 1565
type(
  Equation.graph
)
ident(
  def graph "solvingPolicy.ml" 51 1583 1587 "solvingPolicy.ml" 76 2469 2472
)
"solvingPolicy.ml" 51 1583 1589 "solvingPolicy.ml" 51 1583 1595
type(
  (Equation.hedge, 'abstract policy) Hashhe.t ref
)
ident(
  def policy "solvingPolicy.ml" 52 1638 1642 "solvingPolicy.ml" 76 2469 2472
)
"solvingPolicy.ml" 52 1638 1644 "solvingPolicy.ml" 52 1638 1648
type(
  'abstract Apron.Policy.man
)
ident(
  def pman "solvingPolicy.ml" 53 1677 1681 "solvingPolicy.ml" 76 2469 2472
)
"solvingPolicy.ml" 53 1677 1683 "solvingPolicy.ml" 53 1677 1696
type(
  Spl_syn.point -> 'abstract Apron.Abstract1.t
)
ident(
  def abstract_init "solvingPolicy.ml" 54 1738 1742 "solvingPolicy.ml" 76 2469 2472
)
"solvingPolicy.ml" 54 1738 1744 "solvingPolicy.ml" 54 1738 1749
type(
  Equation.graph ->
  output:(Spl_syn.point, int, 'abstract Apron.Abstract1.t, unit)
         Fixpoint.output option ref ->
  policy:(Equation.hedge, 'abstract policy) Hashhe.t ref ->
  'abstract Apron.Policy.man ->
  Equation.hedge ->
  'abstract Apron.Abstract1.t array -> unit * 'abstract Apron.Abstract1.t
)
ident(
  def apply "solvingPolicy.ml" 61 2048 2052 "solvingPolicy.ml" 76 2469 2472
)
"solvingPolicy.ml" 64 2130 2136 "solvingPolicy.ml" 64 2130 2139
type(
  'abstract Apron.Manager.t
)
ident(
  def man "solvingPolicy.ml" 65 2183 2185 "solvingPolicy.ml" 76 2469 2472
)
"solvingPolicy.ml" 64 2130 2142 "solvingPolicy.ml" 64 2130 2174
type(
  'abstract Apron.Policy.man -> 'abstract Apron.Manager.t
)
ident(
  ext_ref Apron.Policy.manager_get_manager
)
"solvingPolicy.ml" 64 2130 2175 "solvingPolicy.ml" 64 2130 2179
type(
  'abstract Apron.Policy.man
)
ident(
  int_ref pman "solvingPolicy.ml" 52 1638 1644 "solvingPolicy.ml" 52 1638 1648
)
"solvingPolicy.ml" 64 2130 2142 "solvingPolicy.ml" 64 2130 2179
type(
  'abstract Apron.Manager.t
)
"solvingPolicy.ml" 67 2197 2203 "solvingPolicy.ml" 67 2197 2225
type(
  fmt:Format.formatter ->
  output:(Spl_syn.point, int, 'abstract Apron.Abstract1.t, unit)
         Fixpoint.output option ->
  debug:int ->
  graph:Equation.graph ->
  man:'abstract Apron.Manager.t ->
  abstract_init:(Spl_syn.point -> 'abstract Apron.Abstract1.t) ->
  apply:(Equation.graph ->
         output:(Spl_syn.point, int, 'abstract Apron.Abstract1.t, unit)
                Fixpoint.output option ->
         'abstract Apron.Manager.t ->
         Equation.hedge ->
         'abstract Apron.Abstract1.t array ->
         unit * 'abstract Apron.Abstract1.t) ->
  (Spl_syn.point, Equation.hedge, 'abstract Apron.Abstract1.t, unit)
  Fixpoint.manager
)
ident(
  ext_ref Solving.make_fpmanager
)
"solvingPolicy.ml" 67 2197 2227 "solvingPolicy.ml" 67 2197 2230
type(
  Format.formatter
)
ident(
  int_ref fmt "solvingPolicy.ml" 47 1415 1421 "solvingPolicy.ml" 47 1415 1424
)
"solvingPolicy.ml" 67 2197 2239 "solvingPolicy.ml" 67 2197 2243
type(
  (Spl_syn.point, int, 'abstract Apron.Abstract1.t, unit) Fixpoint.output
  option
)
"solvingPolicy.ml" 67 2197 2245 "solvingPolicy.ml" 67 2197 2250
type(
  int
)
ident(
  int_ref debug "solvingPolicy.ml" 49 1537 1543 "solvingPolicy.ml" 49 1537 1548
)
"solvingPolicy.ml" 67 2197 2252 "solvingPolicy.ml" 67 2197 2257
type(
  Equation.graph
)
ident(
  int_ref graph "solvingPolicy.ml" 50 1554 1560 "solvingPolicy.ml" 50 1554 1565
)
"solvingPolicy.ml" 68 2258 2265 "solvingPolicy.ml" 68 2258 2268
type(
  'abstract Apron.Manager.t
)
ident(
  int_ref man "solvingPolicy.ml" 64 2130 2136 "solvingPolicy.ml" 64 2130 2139
)
"solvingPolicy.ml" 69 2269 2276 "solvingPolicy.ml" 69 2269 2289
type(
  Spl_syn.point -> 'abstract Apron.Abstract1.t
)
ident(
  int_ref abstract_init "solvingPolicy.ml" 53 1677 1683 "solvingPolicy.ml" 53 1677 1696
)
"solvingPolicy.ml" 69 2269 2302 "solvingPolicy.ml" 69 2269 2303
type(
  Equation.graph
)
"solvingPolicy.ml" 69 2269 2307 "solvingPolicy.ml" 69 2269 2315
type(
  string ->
  output:(Spl_syn.point, int, 'abstract Apron.Abstract1.t, unit)
         Fixpoint.output option ->
  'abstract Apron.Manager.t ->
  Equation.hedge ->
  'abstract Apron.Abstract1.t array -> unit * 'abstract Apron.Abstract1.t
)
ident(
  ext_ref Pervasives.failwith
)
"solvingPolicy.ml" 69 2269 2316 "solvingPolicy.ml" 69 2269 2318
type(
  string
)
"solvingPolicy.ml" 69 2269 2307 "solvingPolicy.ml" 69 2269 2318
call(
  tail
)
type(
  output:(Spl_syn.point, int, 'abstract Apron.Abstract1.t, unit)
         Fixpoint.output option ->
  'abstract Apron.Manager.t ->
  Equation.hedge ->
  'abstract Apron.Abstract1.t array -> unit * 'abstract Apron.Abstract1.t
)
"solvingPolicy.ml" 69 2269 2297 "solvingPolicy.ml" 69 2269 2319
type(
  Equation.graph ->
  output:(Spl_syn.point, int, 'abstract Apron.Abstract1.t, unit)
         Fixpoint.output option ->
  'abstract Apron.Manager.t ->
  Equation.hedge ->
  'abstract Apron.Abstract1.t array -> unit * 'abstract Apron.Abstract1.t
)
"solvingPolicy.ml" 66 2187 2191 "solvingPolicy.ml" 70 2320 2327
call(
  stack
)
type(
  (Spl_syn.point, Equation.hedge, 'abstract Apron.Abstract1.t, unit)
  Fixpoint.manager
)
"solvingPolicy.ml" 73 2369 2400 "solvingPolicy.ml" 73 2369 2405
type(
  Equation.hedge
)
ident(
  def hedge "solvingPolicy.ml" 73 2369 2406 "solvingPolicy.ml" 74 2412 2459
)
"solvingPolicy.ml" 73 2369 2406 "solvingPolicy.ml" 73 2369 2408
type(
  'abstract Apron.Abstract1.t array
)
ident(
  def tx "solvingPolicy.ml" 74 2412 2418 "solvingPolicy.ml" 74 2412 2459
)
"solvingPolicy.ml" 74 2412 2418 "solvingPolicy.ml" 74 2412 2423
type(
  Equation.graph ->
  output:(Spl_syn.point, int, 'abstract Apron.Abstract1.t, unit)
         Fixpoint.output option ref ->
  policy:(Equation.hedge, 'abstract policy) Hashhe.t ref ->
  'abstract Apron.Policy.man ->
  Equation.hedge ->
  'abstract Apron.Abstract1.t array -> unit * 'abstract Apron.Abstract1.t
)
ident(
  int_ref apply "solvingPolicy.ml" 54 1738 1744 "solvingPolicy.ml" 54 1738 1749
)
"solvingPolicy.ml" 74 2412 2424 "solvingPolicy.ml" 74 2412 2429
type(
  Equation.graph
)
ident(
  int_ref graph "solvingPolicy.ml" 50 1554 1560 "solvingPolicy.ml" 50 1554 1565
)
"solvingPolicy.ml" 74 2412 2431 "solvingPolicy.ml" 74 2412 2437
type(
  (Spl_syn.point, int, 'abstract Apron.Abstract1.t, unit) Fixpoint.output
  option ref
)
ident(
  int_ref output "solvingPolicy.ml" 48 1445 1451 "solvingPolicy.ml" 48 1445 1457
)
"solvingPolicy.ml" 74 2412 2439 "solvingPolicy.ml" 74 2412 2445
type(
  (Equation.hedge, 'abstract policy) Hashhe.t ref
)
ident(
  int_ref policy "solvingPolicy.ml" 51 1583 1589 "solvingPolicy.ml" 51 1583 1595
)
"solvingPolicy.ml" 74 2412 2446 "solvingPolicy.ml" 74 2412 2450
type(
  'abstract Apron.Policy.man
)
ident(
  int_ref pman "solvingPolicy.ml" 52 1638 1644 "solvingPolicy.ml" 52 1638 1648
)
"solvingPolicy.ml" 74 2412 2451 "solvingPolicy.ml" 74 2412 2456
type(
  Equation.hedge
)
ident(
  int_ref hedge "solvingPolicy.ml" 73 2369 2400 "solvingPolicy.ml" 73 2369 2405
)
"solvingPolicy.ml" 74 2412 2457 "solvingPolicy.ml" 74 2412 2459
type(
  'abstract Apron.Abstract1.t array
)
ident(
  int_ref tx "solvingPolicy.ml" 73 2369 2406 "solvingPolicy.ml" 73 2369 2408
)
"solvingPolicy.ml" 74 2412 2418 "solvingPolicy.ml" 74 2412 2459
call(
  tail
)
type(
  unit * 'abstract Apron.Abstract1.t
)
"solvingPolicy.ml" 73 2369 2390 "solvingPolicy.ml" 75 2460 2467
type(
  Equation.hedge ->
  'abstract Apron.Abstract1.t array -> unit * 'abstract Apron.Abstract1.t
)
"solvingPolicy.ml" 65 2183 2185 "solvingPolicy.ml" 76 2469 2472
type(
  (Spl_syn.point, Equation.hedge, 'abstract Apron.Abstract1.t, unit)
  Fixpoint.manager
)
"solvingPolicy.ml" 64 2130 2132 "solvingPolicy.ml" 76 2469 2472
type(
  (Spl_syn.point, int, 'abstract Apron.Abstract1.t, unit) Fixpoint.manager
)
type(
  (Spl_syn.point, Equation.hedge, 'abstract Apron.Abstract1.t, unit)
  Fixpoint.manager
)
"solvingPolicy.ml" 79 2537 2541 "solvingPolicy.ml" 79 2537 2557
type(
  (Spl_syn.point, int, 'a, 'b, Equation.info) PSHGraph.t ->
  'c Apron.Manager.t ->
  (Spl_syn.point, int, 'c Apron.Abstract1.t, unit) Fixpoint.output
)
ident(
  def make_emptyoutput "solvingPolicy.ml" 80 2585 2585 "solvingPolicy.ml" 1 0 -1
)
"solvingPolicy.ml" 79 2537 2560 "solvingPolicy.ml" 79 2537 2584
type(
  (Spl_syn.point, int, 'a, 'b, Equation.info) PSHGraph.t ->
  'c Apron.Manager.t ->
  (Spl_syn.point, int, 'c Apron.Abstract1.t, unit) Fixpoint.output
)
ident(
  ext_ref Solving.make_emptyoutput
)
"solvingPolicy.ml" 80 2585 2589 "solvingPolicy.ml" 80 2585 2608
type(
  (Apron.Var.t -> Apron.Environment.typvar) ->
  Apron.Var.t array -> Apron.Environment.t
)
ident(
  def environment_of_tvar "solvingPolicy.ml" 82 2640 2640 "solvingPolicy.ml" 1 0 -1
)
"solvingPolicy.ml" 80 2585 2611 "solvingPolicy.ml" 80 2585 2638
type(
  (Apron.Var.t -> Apron.Environment.typvar) ->
  Apron.Var.t array -> Apron.Environment.t
)
ident(
  ext_ref Solving.environment_of_tvar
)
"solvingPolicy.ml" 82 2640 2644 "solvingPolicy.ml" 82 2640 2655
type(
  'a Apron.Policy.man ->
  (Spl_syn.point, 'b, 'c, Equation.transfer, Equation.info) PSHGraph.t ->
  (Spl_syn.point, 'd, 'a Apron.Abstract1.t, 'e, 'f) PSHGraph.t option ref ->
  ('b, 'a Apron.Policy.t Boolexpr.t) Hashhe.t ref
)
ident(
  def make_policy "solvingPolicy.ml" 111 3392 3392 "solvingPolicy.ml" 1 0 -1
)
"solvingPolicy.ml" 82 2640 2656 "solvingPolicy.ml" 82 2640 2664
type(
  'a Apron.Policy.man
)
ident(
  def pmanager "solvingPolicy.ml" 82 2640 2665 "solvingPolicy.ml" 109 3378 3390
)
"solvingPolicy.ml" 82 2640 2665 "solvingPolicy.ml" 82 2640 2670
type(
  (Spl_syn.point, 'b, 'c, Equation.transfer, Equation.info) PSHGraph.t
)
ident(
  def graph "solvingPolicy.ml" 82 2640 2671 "solvingPolicy.ml" 109 3378 3390
)
"solvingPolicy.ml" 82 2640 2671 "solvingPolicy.ml" 82 2640 2679
type(
  (Spl_syn.point, 'd, 'a Apron.Abstract1.t, 'e, 'f) PSHGraph.t option ref
)
ident(
  def rooutput "solvingPolicy.ml" 83 2682 2684 "solvingPolicy.ml" 109 3378 3390
)
"solvingPolicy.ml" 83 2682 2688 "solvingPolicy.ml" 83 2682 2695
type(
  'a Apron.Manager.t
)
ident(
  def manager "solvingPolicy.ml" 84 2743 2745 "solvingPolicy.ml" 109 3378 3390
)
"solvingPolicy.ml" 83 2682 2698 "solvingPolicy.ml" 83 2682 2730
type(
  'a Apron.Policy.man -> 'a Apron.Manager.t
)
ident(
  ext_ref Apron.Policy.manager_get_manager
)
"solvingPolicy.ml" 83 2682 2731 "solvingPolicy.ml" 83 2682 2739
type(
  'a Apron.Policy.man
)
ident(
  int_ref pmanager "solvingPolicy.ml" 82 2640 2656 "solvingPolicy.ml" 82 2640 2664
)
"solvingPolicy.ml" 83 2682 2698 "solvingPolicy.ml" 83 2682 2739
type(
  'a Apron.Manager.t
)
"solvingPolicy.ml" 84 2743 2749 "solvingPolicy.ml" 84 2743 2753
type(
  Equation.info
)
ident(
  def info "solvingPolicy.ml" 85 2779 2781 "solvingPolicy.ml" 109 3378 3390
)
"solvingPolicy.ml" 84 2743 2756 "solvingPolicy.ml" 84 2743 2769
type(
  (Spl_syn.point, 'b, 'c, Equation.transfer, Equation.info) PSHGraph.t ->
  Equation.info
)
ident(
  ext_ref PSHGraph.info
)
"solvingPolicy.ml" 84 2743 2770 "solvingPolicy.ml" 84 2743 2775
type(
  (Spl_syn.point, 'b, 'c, Equation.transfer, Equation.info) PSHGraph.t
)
ident(
  int_ref graph "solvingPolicy.ml" 82 2640 2665 "solvingPolicy.ml" 82 2640 2670
)
"solvingPolicy.ml" 84 2743 2756 "solvingPolicy.ml" 84 2743 2775
call(
  stack
)
type(
  Equation.info
)
"solvingPolicy.ml" 85 2779 2785 "solvingPolicy.ml" 85 2779 2791
type(
  ('b, 'a Apron.Policy.t Boolexpr.t) Hashhe.t
)
ident(
  def policy "solvingPolicy.ml" 86 2814 2816 "solvingPolicy.ml" 109 3378 3390
)
"solvingPolicy.ml" 85 2779 2794 "solvingPolicy.ml" 85 2779 2807
type(
  int -> ('b, 'a Apron.Policy.t Boolexpr.t) Hashhe.t
)
ident(
  ext_ref Hashhe.create
)
"solvingPolicy.ml" 85 2779 2808 "solvingPolicy.ml" 85 2779 2810
type(
  int
)
"solvingPolicy.ml" 85 2779 2794 "solvingPolicy.ml" 85 2779 2810
call(
  stack
)
type(
  ('b, 'a Apron.Policy.t Boolexpr.t) Hashhe.t
)
"solvingPolicy.ml" 86 2814 2816 "solvingPolicy.ml" 86 2814 2835
type(
  (Spl_syn.point, 'b, 'c, Equation.transfer, Equation.info) PSHGraph.t ->
  ('b ->
   Equation.transfer ->
   pred:Spl_syn.point array -> succ:Spl_syn.point array -> unit) ->
  unit
)
ident(
  ext_ref PSHGraph.iter_hedge
)
"solvingPolicy.ml" 86 2814 2836 "solvingPolicy.ml" 86 2814 2841
type(
  (Spl_syn.point, 'b, 'c, Equation.transfer, Equation.info) PSHGraph.t
)
ident(
  int_ref graph "solvingPolicy.ml" 82 2640 2665 "solvingPolicy.ml" 82 2640 2670
)
"solvingPolicy.ml" 87 2842 2857 "solvingPolicy.ml" 87 2842 2862
type(
  'b
)
ident(
  def hedge "solvingPolicy.ml" 87 2842 2863 "solvingPolicy.ml" 106 3355 3364
)
"solvingPolicy.ml" 87 2842 2863 "solvingPolicy.ml" 87 2842 2871
type(
  Equation.transfer
)
ident(
  def transfer "solvingPolicy.ml" 87 2842 2872 "solvingPolicy.ml" 106 3355 3364
)
"solvingPolicy.ml" 87 2842 2873 "solvingPolicy.ml" 87 2842 2877
type(
  Spl_syn.point array
)
ident(
  def pred "solvingPolicy.ml" 87 2842 2878 "solvingPolicy.ml" 106 3355 3364
)
"solvingPolicy.ml" 87 2842 2879 "solvingPolicy.ml" 87 2842 2883
type(
  Spl_syn.point array
)
ident(
  def succ "solvingPolicy.ml" 88 2887 2893 "solvingPolicy.ml" 106 3355 3364
)
"solvingPolicy.ml" 88 2887 2905 "solvingPolicy.ml" 88 2887 2913
type(
  Equation.transfer
)
ident(
  int_ref transfer "solvingPolicy.ml" 87 2842 2863 "solvingPolicy.ml" 87 2842 2871
)
"solvingPolicy.ml" 89 2919 2946 "solvingPolicy.ml" 89 2919 2950
type(
  Apron.Tcons1.earray Boolexpr.t
)
ident(
  def cond "solvingPolicy.ml" 90 2954 2957 "solvingPolicy.ml" 104 3309 3338
)
"solvingPolicy.ml" 89 2919 2927 "solvingPolicy.ml" 89 2919 2950
type(
  Equation.transfer
)
"solvingPolicy.ml" 90 2954 2961 "solvingPolicy.ml" 90 2954 2964
type(
  Apron.Environment.t
)
ident(
  def env "solvingPolicy.ml" 91 3014 3017 "solvingPolicy.ml" 104 3309 3338
)
"solvingPolicy.ml" 90 2954 2967 "solvingPolicy.ml" 90 2954 2978
type(
  (Spl_syn.point, Apron.Environment.t) Hashhe.t ->
  Spl_syn.point -> Apron.Environment.t
)
ident(
  ext_ref Hashhe.find
)
"solvingPolicy.ml" 90 2954 2979 "solvingPolicy.ml" 90 2954 2983
type(
  Equation.info
)
ident(
  int_ref info "solvingPolicy.ml" 84 2743 2749 "solvingPolicy.ml" 84 2743 2753
)
"solvingPolicy.ml" 90 2954 2979 "solvingPolicy.ml" 90 2954 3001
type(
  (Spl_syn.point, Apron.Environment.t) Hashhe.t
)
"solvingPolicy.ml" 90 2954 3002 "solvingPolicy.ml" 90 2954 3006
type(
  Spl_syn.point array
)
ident(
  int_ref pred "solvingPolicy.ml" 87 2842 2873 "solvingPolicy.ml" 87 2842 2877
)
"solvingPolicy.ml" 90 2954 3008 "solvingPolicy.ml" 90 2954 3009
type(
  int
)
"solvingPolicy.ml" 90 2954 3002 "solvingPolicy.ml" 90 2954 3010
type(
  Spl_syn.point
)
"solvingPolicy.ml" 90 2954 2967 "solvingPolicy.ml" 90 2954 3010
call(
  stack
)
type(
  Apron.Environment.t
)
"solvingPolicy.ml" 91 3014 3021 "solvingPolicy.ml" 91 3014 3024
type(
  'a Apron.Abstract1.t
)
ident(
  def abs "solvingPolicy.ml" 97 3164 3167 "solvingPolicy.ml" 104 3309 3338
)
"solvingPolicy.ml" 91 3014 3033 "solvingPolicy.ml" 91 3014 3034
type(
  (Spl_syn.point, 'd, 'a Apron.Abstract1.t, 'e, 'f) PSHGraph.t option ref ->
  (Spl_syn.point, 'd, 'a Apron.Abstract1.t, 'e, 'f) PSHGraph.t option
)
ident(
  ext_ref Pervasives.( ! )
)
"solvingPolicy.ml" 91 3014 3034 "solvingPolicy.ml" 91 3014 3042
type(
  (Spl_syn.point, 'd, 'a Apron.Abstract1.t, 'e, 'f) PSHGraph.t option ref
)
ident(
  int_ref rooutput "solvingPolicy.ml" 82 2640 2671 "solvingPolicy.ml" 82 2640 2679
)
"solvingPolicy.ml" 91 3014 3033 "solvingPolicy.ml" 91 3014 3042
type(
  (Spl_syn.point, 'd, 'a Apron.Abstract1.t, 'e, 'f) PSHGraph.t option
)
"solvingPolicy.ml" 92 3048 3055 "solvingPolicy.ml" 92 3048 3059
type(
  (Spl_syn.point, 'd, 'a Apron.Abstract1.t, 'e, 'f) PSHGraph.t option
)
"solvingPolicy.ml" 93 3063 3065 "solvingPolicy.ml" 93 3063 3084
type(
  'a Apron.Manager.t -> Apron.Environment.t -> 'a Apron.Abstract1.t
)
ident(
  ext_ref Apron.Abstract1.top
)
"solvingPolicy.ml" 93 3063 3085 "solvingPolicy.ml" 93 3063 3092
type(
  'a Apron.Manager.t
)
ident(
  int_ref manager "solvingPolicy.ml" 83 2682 2688 "solvingPolicy.ml" 83 2682 2695
)
"solvingPolicy.ml" 93 3063 3093 "solvingPolicy.ml" 93 3063 3096
type(
  Apron.Environment.t
)
ident(
  int_ref env "solvingPolicy.ml" 90 2954 2961 "solvingPolicy.ml" 90 2954 2964
)
"solvingPolicy.ml" 93 3063 3065 "solvingPolicy.ml" 93 3063 3096
type(
  'a Apron.Abstract1.t
)
"solvingPolicy.ml" 94 3097 3109 "solvingPolicy.ml" 94 3097 3115
ident(
  def output "solvingPolicy.ml" 95 3120 3122 "solvingPolicy.ml" 95 3120 3157
)
"solvingPolicy.ml" 94 3097 3108 "solvingPolicy.ml" 94 3097 3116
type(
  (Spl_syn.point, 'd, 'a Apron.Abstract1.t, 'e, 'f) PSHGraph.t
)
"solvingPolicy.ml" 94 3097 3104 "solvingPolicy.ml" 94 3097 3116
type(
  (Spl_syn.point, 'd, 'a Apron.Abstract1.t, 'e, 'f) PSHGraph.t option
)
"solvingPolicy.ml" 95 3120 3122 "solvingPolicy.ml" 95 3120 3141
type(
  (Spl_syn.point, 'd, 'a Apron.Abstract1.t, 'e, 'f) PSHGraph.t ->
  Spl_syn.point -> 'a Apron.Abstract1.t
)
ident(
  ext_ref PSHGraph.attrvertex
)
"solvingPolicy.ml" 95 3120 3142 "solvingPolicy.ml" 95 3120 3148
type(
  (Spl_syn.point, 'd, 'a Apron.Abstract1.t, 'e, 'f) PSHGraph.t
)
ident(
  int_ref output "solvingPolicy.ml" 94 3097 3108 "solvingPolicy.ml" 94 3097 3116
)
"solvingPolicy.ml" 95 3120 3149 "solvingPolicy.ml" 95 3120 3153
type(
  Spl_syn.point array
)
ident(
  int_ref pred "solvingPolicy.ml" 87 2842 2873 "solvingPolicy.ml" 87 2842 2877
)
"solvingPolicy.ml" 95 3120 3155 "solvingPolicy.ml" 95 3120 3156
type(
  int
)
"solvingPolicy.ml" 95 3120 3149 "solvingPolicy.ml" 95 3120 3157
type(
  Spl_syn.point
)
"solvingPolicy.ml" 95 3120 3122 "solvingPolicy.ml" 95 3120 3157
call(
  stack
)
type(
  'a Apron.Abstract1.t
)
"solvingPolicy.ml" 91 3014 3027 "solvingPolicy.ml" 95 3120 3157
type(
  'a Apron.Abstract1.t
)
"solvingPolicy.ml" 97 3164 3171 "solvingPolicy.ml" 97 3164 3172
type(
  'a Apron.Policy.t Boolexpr.t
)
ident(
  def p "solvingPolicy.ml" 104 3309 3312 "solvingPolicy.ml" 104 3309 3338
)
"solvingPolicy.ml" 98 3175 3180 "solvingPolicy.ml" 98 3175 3192
type(
  (Apron.Tcons1.earray -> 'a Apron.Policy.t) ->
  Apron.Tcons1.earray Boolexpr.t -> 'a Apron.Policy.t Boolexpr.t
)
ident(
  ext_ref Boolexpr.map
)
"solvingPolicy.ml" 99 3193 3205 "solvingPolicy.ml" 99 3193 3209
type(
  Apron.Tcons1.earray
)
ident(
  def conj "solvingPolicy.ml" 100 3213 3215 "solvingPolicy.ml" 101 3263 3289
)
"solvingPolicy.ml" 100 3213 3215 "solvingPolicy.ml" 100 3213 3262
type(
  'a Apron.Policy.man ->
  'a Apron.Policy.t option ->
  'a Apron.Abstract1.t -> Apron.Tcons1.earray -> 'a Apron.Policy.t
)
ident(
  ext_ref Apron.Policy.Abstract1.meet_tcons_array_improve
)
"solvingPolicy.ml" 101 3263 3267 "solvingPolicy.ml" 101 3263 3275
type(
  'a Apron.Policy.man
)
ident(
  int_ref pmanager "solvingPolicy.ml" 82 2640 2656 "solvingPolicy.ml" 82 2640 2664
)
"solvingPolicy.ml" 101 3263 3276 "solvingPolicy.ml" 101 3263 3280
type(
  'a Apron.Policy.t option
)
"solvingPolicy.ml" 101 3263 3281 "solvingPolicy.ml" 101 3263 3284
type(
  'a Apron.Abstract1.t
)
ident(
  int_ref abs "solvingPolicy.ml" 91 3014 3021 "solvingPolicy.ml" 91 3014 3024
)
"solvingPolicy.ml" 101 3263 3285 "solvingPolicy.ml" 101 3263 3289
type(
  Apron.Tcons1.earray
)
ident(
  int_ref conj "solvingPolicy.ml" 99 3193 3205 "solvingPolicy.ml" 99 3193 3209
)
"solvingPolicy.ml" 100 3213 3215 "solvingPolicy.ml" 101 3263 3289
type(
  'a Apron.Policy.t
)
"solvingPolicy.ml" 99 3193 3200 "solvingPolicy.ml" 101 3263 3290
type(
  Apron.Tcons1.earray -> 'a Apron.Policy.t
)
"solvingPolicy.ml" 102 3291 3298 "solvingPolicy.ml" 102 3291 3302
type(
  Apron.Tcons1.earray Boolexpr.t
)
ident(
  int_ref cond "solvingPolicy.ml" 89 2919 2946 "solvingPolicy.ml" 89 2919 2950
)
"solvingPolicy.ml" 98 3175 3180 "solvingPolicy.ml" 102 3291 3302
call(
  stack
)
type(
  'a Apron.Policy.t Boolexpr.t
)
"solvingPolicy.ml" 104 3309 3312 "solvingPolicy.ml" 104 3309 3322
type(
  ('b, 'a Apron.Policy.t Boolexpr.t) Hashhe.t ->
  'b -> 'a Apron.Policy.t Boolexpr.t -> unit
)
ident(
  ext_ref Hashhe.add
)
"solvingPolicy.ml" 104 3309 3323 "solvingPolicy.ml" 104 3309 3329
type(
  ('b, 'a Apron.Policy.t Boolexpr.t) Hashhe.t
)
ident(
  int_ref policy "solvingPolicy.ml" 85 2779 2785 "solvingPolicy.ml" 85 2779 2791
)
"solvingPolicy.ml" 104 3309 3330 "solvingPolicy.ml" 104 3309 3335
type(
  'b
)
ident(
  int_ref hedge "solvingPolicy.ml" 87 2842 2857 "solvingPolicy.ml" 87 2842 2862
)
"solvingPolicy.ml" 104 3309 3336 "solvingPolicy.ml" 104 3309 3337
type(
  'a Apron.Policy.t Boolexpr.t
)
ident(
  int_ref p "solvingPolicy.ml" 97 3164 3171 "solvingPolicy.ml" 97 3164 3172
)
"solvingPolicy.ml" 104 3309 3312 "solvingPolicy.ml" 104 3309 3338
call(
  tail
)
type(
  unit
)
"solvingPolicy.ml" 97 3164 3167 "solvingPolicy.ml" 104 3309 3338
type(
  unit
)
"solvingPolicy.ml" 91 3014 3017 "solvingPolicy.ml" 104 3309 3338
type(
  unit
)
"solvingPolicy.ml" 90 2954 2957 "solvingPolicy.ml" 104 3309 3338
type(
  unit
)
"solvingPolicy.ml" 105 3339 3347 "solvingPolicy.ml" 105 3339 3348
type(
  Equation.transfer
)
"solvingPolicy.ml" 105 3339 3352 "solvingPolicy.ml" 105 3339 3354
type(
  unit
)
"solvingPolicy.ml" 88 2887 2893 "solvingPolicy.ml" 106 3355 3364
type(
  unit
)
"solvingPolicy.ml" 87 2842 2846 "solvingPolicy.ml" 107 3365 3373
type(
  'b ->
  Equation.transfer ->
  pred:Spl_syn.point array -> succ:Spl_syn.point array -> unit
)
"solvingPolicy.ml" 86 2814 2816 "solvingPolicy.ml" 107 3365 3373
call(
  stack
)
type(
  unit
)
"solvingPolicy.ml" 109 3378 3380 "solvingPolicy.ml" 109 3378 3383
type(
  ('b, 'a Apron.Policy.t Boolexpr.t) Hashhe.t ->
  ('b, 'a Apron.Policy.t Boolexpr.t) Hashhe.t ref
)
ident(
  ext_ref Pervasives.ref
)
"solvingPolicy.ml" 109 3378 3384 "solvingPolicy.ml" 109 3378 3390
type(
  ('b, 'a Apron.Policy.t Boolexpr.t) Hashhe.t
)
ident(
  int_ref policy "solvingPolicy.ml" 85 2779 2785 "solvingPolicy.ml" 85 2779 2791
)
"solvingPolicy.ml" 109 3378 3380 "solvingPolicy.ml" 109 3378 3390
type(
  ('b, 'a Apron.Policy.t Boolexpr.t) Hashhe.t ref
)
"solvingPolicy.ml" 86 2814 2816 "solvingPolicy.ml" 109 3378 3390
type(
  ('b, 'a Apron.Policy.t Boolexpr.t) Hashhe.t ref
)
"solvingPolicy.ml" 85 2779 2781 "solvingPolicy.ml" 109 3378 3390
type(
  ('b, 'a Apron.Policy.t Boolexpr.t) Hashhe.t ref
)
"solvingPolicy.ml" 84 2743 2745 "solvingPolicy.ml" 109 3378 3390
type(
  ('b, 'a Apron.Policy.t Boolexpr.t) Hashhe.t ref
)
"solvingPolicy.ml" 83 2682 2684 "solvingPolicy.ml" 109 3378 3390
type(
  ('b, 'a Apron.Policy.t Boolexpr.t) Hashhe.t ref
)
"solvingPolicy.ml" 111 3392 3396 "solvingPolicy.ml" 111 3392 3411
type(
  'a Apron.Policy.man ->
  'a Apron.Policy.t Boolexpr.t ->
  'a Apron.Abstract1.t ->
  Apron.Tcons1.earray Boolexpr.t ->
  'a Apron.Abstract1.t option -> 'a Apron.Abstract1.t
)
ident(
  def apply_condition "solvingPolicy.ml" 146 4337 4337 "solvingPolicy.ml" 1 0 -1
)
"solvingPolicy.ml" 112 3412 3417 "solvingPolicy.ml" 112 3412 3425
type(
  'a Apron.Policy.man
)
ident(
  def pmanager "solvingPolicy.ml" 113 3447 3451 "solvingPolicy.ml" 144 4264 4335
)
"solvingPolicy.ml" 113 3447 3452 "solvingPolicy.ml" 113 3447 3459
type(
  'a Apron.Policy.t Boolexpr.t
)
ident(
  def bpolicy "solvingPolicy.ml" 114 3490 3494 "solvingPolicy.ml" 144 4264 4335
)
"solvingPolicy.ml" 114 3490 3495 "solvingPolicy.ml" 114 3490 3503
type(
  'a Apron.Abstract1.t
)
ident(
  def abstract "solvingPolicy.ml" 115 3526 3530 "solvingPolicy.ml" 144 4264 4335
)
"solvingPolicy.ml" 115 3526 3531 "solvingPolicy.ml" 115 3526 3535
type(
  Apron.Tcons1.earray Boolexpr.t
)
ident(
  def expr "solvingPolicy.ml" 116 3568 3572 "solvingPolicy.ml" 144 4264 4335
)
"solvingPolicy.ml" 116 3568 3573 "solvingPolicy.ml" 116 3568 3577
type(
  'a Apron.Abstract1.t option
)
ident(
  def dest "solvingPolicy.ml" 117 3607 3611 "solvingPolicy.ml" 144 4264 4335
)
"solvingPolicy.ml" 120 3644 3650 "solvingPolicy.ml" 120 3644 3659
type(
  'a Apron.Abstract1.t Boolexpr.t
)
ident(
  def dabstract "solvingPolicy.ml" 127 3811 3813 "solvingPolicy.ml" 144 4264 4335
)
"solvingPolicy.ml" 121 3662 3666 "solvingPolicy.ml" 121 3662 3679
type(
  ('a Apron.Policy.t -> Apron.Tcons1.earray -> 'a Apron.Abstract1.t) ->
  'a Apron.Policy.t Boolexpr.t ->
  Apron.Tcons1.earray Boolexpr.t -> 'a Apron.Abstract1.t Boolexpr.t
)
ident(
  ext_ref Boolexpr.map2
)
"solvingPolicy.ml" 122 3680 3691 "solvingPolicy.ml" 122 3680 3697
type(
  'a Apron.Policy.t
)
ident(
  def policy "solvingPolicy.ml" 122 3680 3698 "solvingPolicy.ml" 124 3753 3785
)
"solvingPolicy.ml" 122 3680 3698 "solvingPolicy.ml" 122 3680 3702
type(
  Apron.Tcons1.earray
)
ident(
  def conj "solvingPolicy.ml" 123 3706 3707 "solvingPolicy.ml" 124 3753 3785
)
"solvingPolicy.ml" 123 3706 3707 "solvingPolicy.ml" 123 3706 3752
type(
  'a Apron.Policy.man ->
  'a Apron.Policy.t ->
  'a Apron.Abstract1.t -> Apron.Tcons1.earray -> 'a Apron.Abstract1.t
)
ident(
  ext_ref Apron.Policy.Abstract1.meet_tcons_array_apply
)
"solvingPolicy.ml" 124 3753 3756 "solvingPolicy.ml" 124 3753 3764
type(
  'a Apron.Policy.man
)
ident(
  int_ref pmanager "solvingPolicy.ml" 112 3412 3417 "solvingPolicy.ml" 112 3412 3425
)
"solvingPolicy.ml" 124 3753 3765 "solvingPolicy.ml" 124 3753 3771
type(
  'a Apron.Policy.t
)
ident(
  int_ref policy "solvingPolicy.ml" 122 3680 3691 "solvingPolicy.ml" 122 3680 3697
)
"solvingPolicy.ml" 124 3753 3772 "solvingPolicy.ml" 124 3753 3780
type(
  'a Apron.Abstract1.t
)
ident(
  int_ref abstract "solvingPolicy.ml" 114 3490 3495 "solvingPolicy.ml" 114 3490 3503
)
"solvingPolicy.ml" 124 3753 3781 "solvingPolicy.ml" 124 3753 3785
type(
  Apron.Tcons1.earray
)
ident(
  int_ref conj "solvingPolicy.ml" 122 3680 3698 "solvingPolicy.ml" 122 3680 3702
)
"solvingPolicy.ml" 123 3706 3707 "solvingPolicy.ml" 124 3753 3785
type(
  'a Apron.Abstract1.t
)
"solvingPolicy.ml" 122 3680 3686 "solvingPolicy.ml" 124 3753 3786
type(
  'a Apron.Policy.t -> Apron.Tcons1.earray -> 'a Apron.Abstract1.t
)
"solvingPolicy.ml" 125 3787 3793 "solvingPolicy.ml" 125 3787 3800
type(
  'a Apron.Policy.t Boolexpr.t
)
ident(
  int_ref bpolicy "solvingPolicy.ml" 113 3447 3452 "solvingPolicy.ml" 113 3447 3459
)
"solvingPolicy.ml" 125 3787 3801 "solvingPolicy.ml" 125 3787 3805
type(
  Apron.Tcons1.earray Boolexpr.t
)
ident(
  int_ref expr "solvingPolicy.ml" 115 3526 3531 "solvingPolicy.ml" 115 3526 3535
)
"solvingPolicy.ml" 121 3662 3666 "solvingPolicy.ml" 125 3787 3805
call(
  stack
)
type(
  'a Apron.Abstract1.t Boolexpr.t
)
"solvingPolicy.ml" 127 3811 3817 "solvingPolicy.ml" 127 3811 3826
type(
  'a Apron.Abstract1.t list
)
ident(
  def labstract "solvingPolicy.ml" 131 3916 3918 "solvingPolicy.ml" 144 4264 4335
)
"solvingPolicy.ml" 127 3811 3835 "solvingPolicy.ml" 127 3811 3844
type(
  'a Apron.Abstract1.t Boolexpr.t
)
ident(
  int_ref dabstract "solvingPolicy.ml" 120 3644 3650 "solvingPolicy.ml" 120 3644 3659
)
"solvingPolicy.ml" 128 3850 3856 "solvingPolicy.ml" 128 3850 3869
type(
  'a Apron.Abstract1.t Boolexpr.t
)
"solvingPolicy.ml" 128 3850 3874 "solvingPolicy.ml" 128 3850 3882
type(
  'a Apron.Abstract1.t
)
ident(
  int_ref abstract "solvingPolicy.ml" 114 3490 3495 "solvingPolicy.ml" 114 3490 3503
)
"solvingPolicy.ml" 128 3850 3873 "solvingPolicy.ml" 128 3850 3883
type(
  'a Apron.Abstract1.t list
)
"solvingPolicy.ml" 129 3884 3904 "solvingPolicy.ml" 129 3884 3905
type(
  'a Apron.Abstract1.t list
)
ident(
  def l "solvingPolicy.ml" 129 3884 3909 "solvingPolicy.ml" 129 3884 3910
)
"solvingPolicy.ml" 129 3884 3890 "solvingPolicy.ml" 129 3884 3905
type(
  'a Apron.Abstract1.t Boolexpr.t
)
"solvingPolicy.ml" 129 3884 3909 "solvingPolicy.ml" 129 3884 3910
type(
  'a Apron.Abstract1.t list
)
ident(
  int_ref l "solvingPolicy.ml" 129 3884 3904 "solvingPolicy.ml" 129 3884 3905
)
"solvingPolicy.ml" 127 3811 3829 "solvingPolicy.ml" 129 3884 3910
type(
  'a Apron.Abstract1.t list
)
"solvingPolicy.ml" 131 3916 3922 "solvingPolicy.ml" 131 3916 3929
type(
  'a Apron.Manager.t
)
ident(
  def manager "solvingPolicy.ml" 132 3977 3979 "solvingPolicy.ml" 144 4264 4335
)
"solvingPolicy.ml" 131 3916 3932 "solvingPolicy.ml" 131 3916 3964
type(
  'a Apron.Policy.man -> 'a Apron.Manager.t
)
ident(
  ext_ref Apron.Policy.manager_get_manager
)
"solvingPolicy.ml" 131 3916 3965 "solvingPolicy.ml" 131 3916 3973
type(
  'a Apron.Policy.man
)
ident(
  int_ref pmanager "solvingPolicy.ml" 112 3412 3417 "solvingPolicy.ml" 112 3412 3425
)
"solvingPolicy.ml" 131 3916 3932 "solvingPolicy.ml" 131 3916 3973
type(
  'a Apron.Manager.t
)
"solvingPolicy.ml" 132 3977 3983 "solvingPolicy.ml" 132 3977 3992
type(
  'a Apron.Abstract1.t list
)
ident(
  def labstract "solvingPolicy.ml" 140 4150 4152 "solvingPolicy.ml" 144 4264 4335
)
"solvingPolicy.ml" 133 3995 4005 "solvingPolicy.ml" 133 3995 4009
type(
  'a Apron.Abstract1.t option
)
ident(
  int_ref dest "solvingPolicy.ml" 116 3568 3573 "solvingPolicy.ml" 116 3568 3577
)
"solvingPolicy.ml" 134 4015 4021 "solvingPolicy.ml" 134 4015 4025
type(
  'a Apron.Abstract1.t option
)
"solvingPolicy.ml" 134 4015 4029 "solvingPolicy.ml" 134 4015 4038
type(
  'a Apron.Abstract1.t list
)
ident(
  int_ref labstract "solvingPolicy.ml" 127 3811 3817 "solvingPolicy.ml" 127 3811 3826
)
"solvingPolicy.ml" 135 4039 4050 "solvingPolicy.ml" 135 4039 4054
type(
  'a Apron.Abstract1.t
)
ident(
  def dest "solvingPolicy.ml" 136 4058 4059 "solvingPolicy.ml" 138 4132 4144
)
"solvingPolicy.ml" 135 4039 4045 "solvingPolicy.ml" 135 4039 4054
type(
  'a Apron.Abstract1.t option
)
"solvingPolicy.ml" 136 4058 4059 "solvingPolicy.ml" 136 4058 4067
type(
  ('a Apron.Abstract1.t -> 'a Apron.Abstract1.t) ->
  'a Apron.Abstract1.t list -> 'a Apron.Abstract1.t list
)
ident(
  ext_ref List.map
)
"solvingPolicy.ml" 137 4068 4076 "solvingPolicy.ml" 137 4068 4084
type(
  'a Apron.Abstract1.t
)
ident(
  def abstract "solvingPolicy.ml" 137 4068 4088 "solvingPolicy.ml" 137 4068 4130
)
"solvingPolicy.ml" 137 4068 4088 "solvingPolicy.ml" 137 4068 4108
type(
  'a Apron.Manager.t ->
  'a Apron.Abstract1.t -> 'a Apron.Abstract1.t -> 'a Apron.Abstract1.t
)
ident(
  ext_ref Apron.Abstract1.meet
)
"solvingPolicy.ml" 137 4068 4109 "solvingPolicy.ml" 137 4068 4116
type(
  'a Apron.Manager.t
)
ident(
  int_ref manager "solvingPolicy.ml" 131 3916 3922 "solvingPolicy.ml" 131 3916 3929
)
"solvingPolicy.ml" 137 4068 4117 "solvingPolicy.ml" 137 4068 4125
type(
  'a Apron.Abstract1.t
)
ident(
  int_ref abstract "solvingPolicy.ml" 137 4068 4076 "solvingPolicy.ml" 137 4068 4084
)
"solvingPolicy.ml" 137 4068 4126 "solvingPolicy.ml" 137 4068 4130
type(
  'a Apron.Abstract1.t
)
ident(
  int_ref dest "solvingPolicy.ml" 135 4039 4050 "solvingPolicy.ml" 135 4039 4054
)
"solvingPolicy.ml" 137 4068 4088 "solvingPolicy.ml" 137 4068 4130
type(
  'a Apron.Abstract1.t
)
"solvingPolicy.ml" 137 4068 4071 "solvingPolicy.ml" 137 4068 4131
type(
  'a Apron.Abstract1.t -> 'a Apron.Abstract1.t
)
"solvingPolicy.ml" 138 4132 4135 "solvingPolicy.ml" 138 4132 4144
type(
  'a Apron.Abstract1.t list
)
ident(
  int_ref labstract "solvingPolicy.ml" 127 3811 3817 "solvingPolicy.ml" 127 3811 3826
)
"solvingPolicy.ml" 136 4058 4059 "solvingPolicy.ml" 138 4132 4144
call(
  stack
)
type(
  'a Apron.Abstract1.t list
)
"solvingPolicy.ml" 133 3995 3999 "solvingPolicy.ml" 138 4132 4144
type(
  'a Apron.Abstract1.t list
)
"solvingPolicy.ml" 140 4150 4158 "solvingPolicy.ml" 140 4150 4167
type(
  'a Apron.Abstract1.t list
)
ident(
  int_ref labstract "solvingPolicy.ml" 132 3977 3983 "solvingPolicy.ml" 132 3977 3992
)
"solvingPolicy.ml" 141 4173 4177 "solvingPolicy.ml" 141 4173 4179
type(
  'a Apron.Abstract1.t list
)
"solvingPolicy.ml" 142 4183 4189 "solvingPolicy.ml" 142 4183 4211
type(
  'a Apron.Manager.t -> Apron.Environment.t -> 'a Apron.Abstract1.t
)
ident(
  ext_ref Apron.Abstract1.bottom
)
"solvingPolicy.ml" 142 4183 4212 "solvingPolicy.ml" 142 4183 4219
type(
  'a Apron.Manager.t
)
ident(
  int_ref manager "solvingPolicy.ml" 131 3916 3922 "solvingPolicy.ml" 131 3916 3929
)
"solvingPolicy.ml" 142 4183 4221 "solvingPolicy.ml" 142 4183 4240
type(
  'a Apron.Abstract1.t -> Apron.Environment.t
)
ident(
  ext_ref Apron.Abstract1.env
)
"solvingPolicy.ml" 142 4183 4241 "solvingPolicy.ml" 142 4183 4249
type(
  'a Apron.Abstract1.t
)
ident(
  int_ref abstract "solvingPolicy.ml" 114 3490 3495 "solvingPolicy.ml" 114 3490 3503
)
"solvingPolicy.ml" 142 4183 4220 "solvingPolicy.ml" 142 4183 4250
call(
  stack
)
type(
  Apron.Environment.t
)
"solvingPolicy.ml" 142 4183 4189 "solvingPolicy.ml" 142 4183 4250
type(
  'a Apron.Abstract1.t
)
"solvingPolicy.ml" 143 4251 4256 "solvingPolicy.ml" 143 4251 4257
type(
  'a Apron.Abstract1.t
)
ident(
  def x "solvingPolicy.ml" 143 4251 4262 "solvingPolicy.ml" 143 4251 4263
)
"solvingPolicy.ml" 143 4251 4255 "solvingPolicy.ml" 143 4251 4258
type(
  'a Apron.Abstract1.t list
)
"solvingPolicy.ml" 143 4251 4262 "solvingPolicy.ml" 143 4251 4263
type(
  'a Apron.Abstract1.t
)
ident(
  int_ref x "solvingPolicy.ml" 143 4251 4256 "solvingPolicy.ml" 143 4251 4257
)
"solvingPolicy.ml" 144 4264 4268 "solvingPolicy.ml" 144 4264 4269
type(
  'a Apron.Abstract1.t list
)
"solvingPolicy.ml" 144 4264 4275 "solvingPolicy.ml" 144 4264 4301
type(
  'a Apron.Manager.t -> 'a Apron.Abstract1.t array -> 'a Apron.Abstract1.t
)
ident(
  ext_ref Apron.Abstract1.join_array
)
"solvingPolicy.ml" 144 4264 4302 "solvingPolicy.ml" 144 4264 4309
type(
  'a Apron.Manager.t
)
ident(
  int_ref manager "solvingPolicy.ml" 131 3916 3922 "solvingPolicy.ml" 131 3916 3929
)
"solvingPolicy.ml" 144 4264 4311 "solvingPolicy.ml" 144 4264 4324
type(
  'a Apron.Abstract1.t list -> 'a Apron.Abstract1.t array
)
ident(
  ext_ref Array.of_list
)
"solvingPolicy.ml" 144 4264 4325 "solvingPolicy.ml" 144 4264 4334
type(
  'a Apron.Abstract1.t list
)
ident(
  int_ref labstract "solvingPolicy.ml" 132 3977 3983 "solvingPolicy.ml" 132 3977 3992
)
"solvingPolicy.ml" 144 4264 4310 "solvingPolicy.ml" 144 4264 4335
call(
  stack
)
type(
  'a Apron.Abstract1.t array
)
"solvingPolicy.ml" 144 4264 4275 "solvingPolicy.ml" 144 4264 4335
type(
  'a Apron.Abstract1.t
)
"solvingPolicy.ml" 140 4150 4152 "solvingPolicy.ml" 144 4264 4335
type(
  'a Apron.Abstract1.t
)
"solvingPolicy.ml" 132 3977 3979 "solvingPolicy.ml" 144 4264 4335
type(
  'a Apron.Abstract1.t
)
"solvingPolicy.ml" 131 3916 3918 "solvingPolicy.ml" 144 4264 4335
type(
  'a Apron.Abstract1.t
)
"solvingPolicy.ml" 127 3811 3813 "solvingPolicy.ml" 144 4264 4335
type(
  'a Apron.Abstract1.t
)
"solvingPolicy.ml" 120 3644 3646 "solvingPolicy.ml" 144 4264 4335
type(
  'a Apron.Abstract1.t
)
type(
  'a Apron.Abstract1.t
)
"solvingPolicy.ml" 146 4337 4341 "solvingPolicy.ml" 146 4337 4358
type(
  'a Apron.Policy.man ->
  'a Apron.Policy.t Boolexpr.t option ->
  'a Apron.Abstract1.t ->
  Apron.Tcons1.earray Boolexpr.t ->
  'a Apron.Abstract1.t option -> 'a Apron.Policy.t Boolexpr.t
)
ident(
  def improve_condition "solvingPolicy.ml" 170 5013 5013 "solvingPolicy.ml" 1 0 -1
)
"solvingPolicy.ml" 147 4359 4364 "solvingPolicy.ml" 147 4359 4372
type(
  'a Apron.Policy.man
)
ident(
  def pmanager "solvingPolicy.ml" 148 4394 4398 "solvingPolicy.ml" 167 4920 4933
)
"solvingPolicy.ml" 148 4394 4399 "solvingPolicy.ml" 148 4394 4407
type(
  'a Apron.Policy.t Boolexpr.t option
)
ident(
  def obpolicy "solvingPolicy.ml" 149 4445 4449 "solvingPolicy.ml" 167 4920 4933
)
"solvingPolicy.ml" 149 4445 4450 "solvingPolicy.ml" 149 4445 4458
type(
  'a Apron.Abstract1.t
)
ident(
  def abstract "solvingPolicy.ml" 150 4481 4485 "solvingPolicy.ml" 167 4920 4933
)
"solvingPolicy.ml" 150 4481 4486 "solvingPolicy.ml" 150 4481 4490
type(
  Apron.Tcons1.earray Boolexpr.t
)
ident(
  def expr "solvingPolicy.ml" 151 4523 4527 "solvingPolicy.ml" 167 4920 4933
)
"solvingPolicy.ml" 151 4523 4528 "solvingPolicy.ml" 151 4523 4532
type(
  'a Apron.Abstract1.t option
)
ident(
  def dest "solvingPolicy.ml" 152 4562 4566 "solvingPolicy.ml" 167 4920 4933
)
"solvingPolicy.ml" 155 4607 4615 "solvingPolicy.ml" 155 4607 4623
type(
  'a Apron.Policy.t Boolexpr.t option
)
ident(
  int_ref obpolicy "solvingPolicy.ml" 148 4394 4399 "solvingPolicy.ml" 148 4394 4407
)
"solvingPolicy.ml" 156 4629 4633 "solvingPolicy.ml" 156 4629 4637
type(
  'a Apron.Policy.t Boolexpr.t option
)
"solvingPolicy.ml" 157 4641 4647 "solvingPolicy.ml" 157 4641 4659
type(
  (Apron.Tcons1.earray -> 'a Apron.Policy.t) ->
  Apron.Tcons1.earray Boolexpr.t -> 'a Apron.Policy.t Boolexpr.t
)
ident(
  ext_ref Boolexpr.map
)
"solvingPolicy.ml" 158 4660 4666 "solvingPolicy.ml" 158 4660 4670
type(
  Apron.Tcons1.earray
)
ident(
  def conj "solvingPolicy.ml" 159 4674 4677 "solvingPolicy.ml" 160 4725 4757
)
"solvingPolicy.ml" 159 4674 4677 "solvingPolicy.ml" 159 4674 4724
type(
  'a Apron.Policy.man ->
  'a Apron.Policy.t option ->
  'a Apron.Abstract1.t -> Apron.Tcons1.earray -> 'a Apron.Policy.t
)
ident(
  ext_ref Apron.Policy.Abstract1.meet_tcons_array_improve
)
"solvingPolicy.ml" 160 4725 4730 "solvingPolicy.ml" 160 4725 4738
type(
  'a Apron.Policy.man
)
ident(
  int_ref pmanager "solvingPolicy.ml" 147 4359 4364 "solvingPolicy.ml" 147 4359 4372
)
"solvingPolicy.ml" 160 4725 4739 "solvingPolicy.ml" 160 4725 4743
type(
  'a Apron.Policy.t option
)
"solvingPolicy.ml" 160 4725 4744 "solvingPolicy.ml" 160 4725 4752
type(
  'a Apron.Abstract1.t
)
ident(
  int_ref abstract "solvingPolicy.ml" 149 4445 4450 "solvingPolicy.ml" 149 4445 4458
)
"solvingPolicy.ml" 160 4725 4753 "solvingPolicy.ml" 160 4725 4757
type(
  Apron.Tcons1.earray
)
ident(
  int_ref conj "solvingPolicy.ml" 158 4660 4666 "solvingPolicy.ml" 158 4660 4670
)
"solvingPolicy.ml" 159 4674 4677 "solvingPolicy.ml" 160 4725 4757
type(
  'a Apron.Policy.t
)
"solvingPolicy.ml" 158 4660 4661 "solvingPolicy.ml" 160 4725 4758
type(
  Apron.Tcons1.earray -> 'a Apron.Policy.t
)
"solvingPolicy.ml" 161 4759 4760 "solvingPolicy.ml" 161 4759 4764
type(
  Apron.Tcons1.earray Boolexpr.t
)
ident(
  int_ref expr "solvingPolicy.ml" 150 4481 4486 "solvingPolicy.ml" 150 4481 4490
)
"solvingPolicy.ml" 157 4641 4647 "solvingPolicy.ml" 161 4759 4764
call(
  tail
)
type(
  'a Apron.Policy.t Boolexpr.t
)
"solvingPolicy.ml" 162 4765 4774 "solvingPolicy.ml" 162 4765 4781
type(
  'a Apron.Policy.t Boolexpr.t
)
ident(
  def bpolicy "solvingPolicy.ml" 163 4785 4791 "solvingPolicy.ml" 167 4920 4933
)
"solvingPolicy.ml" 162 4765 4769 "solvingPolicy.ml" 162 4765 4781
type(
  'a Apron.Policy.t Boolexpr.t option
)
"solvingPolicy.ml" 163 4785 4791 "solvingPolicy.ml" 163 4785 4804
type(
  ('a Apron.Policy.t -> Apron.Tcons1.earray -> 'a Apron.Policy.t) ->
  'a Apron.Policy.t Boolexpr.t ->
  Apron.Tcons1.earray Boolexpr.t -> 'a Apron.Policy.t Boolexpr.t
)
ident(
  ext_ref Boolexpr.map2
)
"solvingPolicy.ml" 164 4805 4811 "solvingPolicy.ml" 164 4805 4817
type(
  'a Apron.Policy.t
)
ident(
  def policy "solvingPolicy.ml" 164 4805 4818 "solvingPolicy.ml" 166 4877 4918
)
"solvingPolicy.ml" 164 4805 4818 "solvingPolicy.ml" 164 4805 4822
type(
  Apron.Tcons1.earray
)
ident(
  def conj "solvingPolicy.ml" 165 4826 4829 "solvingPolicy.ml" 166 4877 4918
)
"solvingPolicy.ml" 165 4826 4829 "solvingPolicy.ml" 165 4826 4876
type(
  'a Apron.Policy.man ->
  'a Apron.Policy.t option ->
  'a Apron.Abstract1.t -> Apron.Tcons1.earray -> 'a Apron.Policy.t
)
ident(
  ext_ref Apron.Policy.Abstract1.meet_tcons_array_improve
)
"solvingPolicy.ml" 166 4877 4882 "solvingPolicy.ml" 166 4877 4890
type(
  'a Apron.Policy.man
)
ident(
  int_ref pmanager "solvingPolicy.ml" 147 4359 4364 "solvingPolicy.ml" 147 4359 4372
)
"solvingPolicy.ml" 166 4877 4897 "solvingPolicy.ml" 166 4877 4903
type(
  'a Apron.Policy.t
)
ident(
  int_ref policy "solvingPolicy.ml" 164 4805 4811 "solvingPolicy.ml" 164 4805 4817
)
"solvingPolicy.ml" 166 4877 4891 "solvingPolicy.ml" 166 4877 4904
type(
  'a Apron.Policy.t option
)
"solvingPolicy.ml" 166 4877 4905 "solvingPolicy.ml" 166 4877 4913
type(
  'a Apron.Abstract1.t
)
ident(
  int_ref abstract "solvingPolicy.ml" 149 4445 4450 "solvingPolicy.ml" 149 4445 4458
)
"solvingPolicy.ml" 166 4877 4914 "solvingPolicy.ml" 166 4877 4918
type(
  Apron.Tcons1.earray
)
ident(
  int_ref conj "solvingPolicy.ml" 164 4805 4818 "solvingPolicy.ml" 164 4805 4822
)
"solvingPolicy.ml" 165 4826 4829 "solvingPolicy.ml" 166 4877 4918
type(
  'a Apron.Policy.t
)
"solvingPolicy.ml" 164 4805 4806 "solvingPolicy.ml" 166 4877 4919
type(
  'a Apron.Policy.t -> Apron.Tcons1.earray -> 'a Apron.Policy.t
)
"solvingPolicy.ml" 167 4920 4921 "solvingPolicy.ml" 167 4920 4928
type(
  'a Apron.Policy.t Boolexpr.t
)
ident(
  int_ref bpolicy "solvingPolicy.ml" 162 4765 4774 "solvingPolicy.ml" 162 4765 4781
)
"solvingPolicy.ml" 167 4920 4929 "solvingPolicy.ml" 167 4920 4933
type(
  Apron.Tcons1.earray Boolexpr.t
)
ident(
  int_ref expr "solvingPolicy.ml" 150 4481 4486 "solvingPolicy.ml" 150 4481 4490
)
"solvingPolicy.ml" 163 4785 4791 "solvingPolicy.ml" 167 4920 4933
call(
  tail
)
type(
  'a Apron.Policy.t Boolexpr.t
)
"solvingPolicy.ml" 155 4607 4609 "solvingPolicy.ml" 167 4920 4933
type(
  'a Apron.Policy.t Boolexpr.t
)
type(
  'a Apron.Policy.t Boolexpr.t
)
"solvingPolicy.ml" 180 5368 5374 "solvingPolicy.ml" 180 5368 5379
type(
  Equation.graph ->
  output:(Spl_syn.point, int, 'a Apron.Abstract1.t, unit) Fixpoint.output
         option ref ->
  policy:(Equation.hedge, 'a policy) Hashhe.t ref ->
  'a Apron.Policy.man ->
  int -> 'a Apron.Abstract1.t array -> unit * 'a Apron.Abstract1.t
)
ident(
  def apply "solvingPolicy.ml" 218 6734 6736 "solvingPolicy.ml" 325 9835 9838
)
"solvingPolicy.ml" 181 5380 5385 "solvingPolicy.ml" 181 5380 5390
type(
  Equation.graph
)
ident(
  def graph "solvingPolicy.ml" 182 5407 5411 "solvingPolicy.ml" 215 6641 6653
)
"solvingPolicy.ml" 182 5407 5413 "solvingPolicy.ml" 182 5407 5419
type(
  (Spl_syn.point, int, 'a Apron.Abstract1.t, unit) Fixpoint.output option ref
)
ident(
  def output "solvingPolicy.ml" 183 5499 5503 "solvingPolicy.ml" 215 6641 6653
)
"solvingPolicy.ml" 183 5499 5505 "solvingPolicy.ml" 183 5499 5511
type(
  (Equation.hedge, 'a policy) Hashhe.t ref
)
ident(
  def policy "solvingPolicy.ml" 184 5554 5558 "solvingPolicy.ml" 215 6641 6653
)
"solvingPolicy.ml" 184 5554 5559 "solvingPolicy.ml" 184 5554 5567
type(
  'a Apron.Policy.man
)
ident(
  def pmanager "solvingPolicy.ml" 185 5589 5593 "solvingPolicy.ml" 215 6641 6653
)
"solvingPolicy.ml" 185 5589 5594 "solvingPolicy.ml" 185 5589 5599
type(
  int
)
ident(
  def hedge "solvingPolicy.ml" 186 5605 5609 "solvingPolicy.ml" 215 6641 6653
)
"solvingPolicy.ml" 186 5605 5610 "solvingPolicy.ml" 186 5605 5614
type(
  'a Apron.Abstract1.t array
)
ident(
  def tabs "solvingPolicy.ml" 187 5643 5647 "solvingPolicy.ml" 215 6641 6653
)
"solvingPolicy.ml" 190 5687 5695 "solvingPolicy.ml" 190 5687 5703
type(
  Equation.transfer
)
ident(
  def transfer "solvingPolicy.ml" 191 5740 5744 "solvingPolicy.ml" 215 6641 6653
)
"solvingPolicy.ml" 190 5687 5706 "solvingPolicy.ml" 190 5687 5724
type(
  Equation.graph -> Equation.hedge -> Equation.transfer
)
ident(
  ext_ref PSHGraph.attrhedge
)
"solvingPolicy.ml" 190 5687 5725 "solvingPolicy.ml" 190 5687 5730
type(
  Equation.graph
)
ident(
  int_ref graph "solvingPolicy.ml" 181 5380 5385 "solvingPolicy.ml" 181 5380 5390
)
"solvingPolicy.ml" 190 5687 5731 "solvingPolicy.ml" 190 5687 5736
type(
  Equation.hedge
)
ident(
  int_ref hedge "solvingPolicy.ml" 185 5589 5594 "solvingPolicy.ml" 185 5589 5599
)
"solvingPolicy.ml" 190 5687 5706 "solvingPolicy.ml" 190 5687 5736
call(
  stack
)
type(
  Equation.transfer
)
"solvingPolicy.ml" 191 5740 5748 "solvingPolicy.ml" 191 5740 5751
type(
  'a Apron.Abstract1.t
)
ident(
  def abs "solvingPolicy.ml" 192 5766 5770 "solvingPolicy.ml" 215 6641 6653
)
"solvingPolicy.ml" 191 5740 5754 "solvingPolicy.ml" 191 5740 5758
type(
  'a Apron.Abstract1.t array
)
ident(
  int_ref tabs "solvingPolicy.ml" 186 5605 5610 "solvingPolicy.ml" 186 5605 5614
)
"solvingPolicy.ml" 191 5740 5760 "solvingPolicy.ml" 191 5740 5761
type(
  int
)
"solvingPolicy.ml" 191 5740 5754 "solvingPolicy.ml" 191 5740 5762
type(
  'a Apron.Abstract1.t
)
"solvingPolicy.ml" 192 5766 5774 "solvingPolicy.ml" 192 5766 5778
type(
  'a Apron.Abstract1.t option
)
ident(
  def dest "solvingPolicy.ml" 200 6004 6008 "solvingPolicy.ml" 215 6641 6653
)
"solvingPolicy.ml" 192 5766 5787 "solvingPolicy.ml" 192 5766 5788
type(
  (Equation.vertex, int, 'a Apron.Abstract1.t, unit) Fixpoint.output option
  ref ->
  (Equation.vertex, int, 'a Apron.Abstract1.t, unit) Fixpoint.output option
)
ident(
  ext_ref Pervasives.( ! )
)
"solvingPolicy.ml" 192 5766 5788 "solvingPolicy.ml" 192 5766 5794
type(
  (Equation.vertex, int, 'a Apron.Abstract1.t, unit) Fixpoint.output option
  ref
)
ident(
  int_ref output "solvingPolicy.ml" 182 5407 5413 "solvingPolicy.ml" 182 5407 5419
)
"solvingPolicy.ml" 192 5766 5787 "solvingPolicy.ml" 192 5766 5794
type(
  (Equation.vertex, int, 'a Apron.Abstract1.t, unit) Fixpoint.output option
)
"solvingPolicy.ml" 193 5800 5808 "solvingPolicy.ml" 193 5800 5812
type(
  (Equation.vertex, int, 'a Apron.Abstract1.t, unit) Fixpoint.output option
)
"solvingPolicy.ml" 193 5800 5816 "solvingPolicy.ml" 193 5800 5820
type(
  'a Apron.Abstract1.t option
)
"solvingPolicy.ml" 194 5821 5834 "solvingPolicy.ml" 194 5821 5840
ident(
  def output "solvingPolicy.ml" 195 5845 5848 "solvingPolicy.ml" 198 5984 5996
)
"solvingPolicy.ml" 194 5821 5833 "solvingPolicy.ml" 194 5821 5841
type(
  (Equation.vertex, int, 'a Apron.Abstract1.t, unit) Fixpoint.output
)
"solvingPolicy.ml" 194 5821 5829 "solvingPolicy.ml" 194 5821 5841
type(
  (Equation.vertex, int, 'a Apron.Abstract1.t, unit) Fixpoint.output option
)
"solvingPolicy.ml" 195 5845 5852 "solvingPolicy.ml" 195 5845 5857
type(
  Equation.vertex array
)
ident(
  def tdest "solvingPolicy.ml" 196 5895 5898 "solvingPolicy.ml" 198 5984 5996
)
"solvingPolicy.ml" 195 5845 5860 "solvingPolicy.ml" 195 5845 5879
type(
  Equation.graph -> Equation.hedge -> Equation.vertex array
)
ident(
  ext_ref PSHGraph.succvertex
)
"solvingPolicy.ml" 195 5845 5880 "solvingPolicy.ml" 195 5845 5885
type(
  Equation.graph
)
ident(
  int_ref graph "solvingPolicy.ml" 181 5380 5385 "solvingPolicy.ml" 181 5380 5390
)
"solvingPolicy.ml" 195 5845 5886 "solvingPolicy.ml" 195 5845 5891
type(
  Equation.hedge
)
ident(
  int_ref hedge "solvingPolicy.ml" 185 5589 5594 "solvingPolicy.ml" 185 5589 5599
)
"solvingPolicy.ml" 195 5845 5860 "solvingPolicy.ml" 195 5845 5891
call(
  stack
)
type(
  Equation.vertex array
)
"solvingPolicy.ml" 196 5895 5905 "solvingPolicy.ml" 196 5895 5917
type(
  Equation.vertex array -> int
)
ident(
  ext_ref Array.length
)
"solvingPolicy.ml" 196 5895 5918 "solvingPolicy.ml" 196 5895 5923
type(
  Equation.vertex array
)
ident(
  int_ref tdest "solvingPolicy.ml" 195 5845 5852 "solvingPolicy.ml" 195 5845 5857
)
"solvingPolicy.ml" 196 5895 5905 "solvingPolicy.ml" 196 5895 5923
type(
  int
)
"solvingPolicy.ml" 196 5895 5924 "solvingPolicy.ml" 196 5895 5925
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"solvingPolicy.ml" 196 5895 5926 "solvingPolicy.ml" 196 5895 5927
type(
  int
)
"solvingPolicy.ml" 196 5895 5904 "solvingPolicy.ml" 196 5895 5928
type(
  bool
)
"solvingPolicy.ml" 196 5895 5898 "solvingPolicy.ml" 196 5895 5928
type(
  unit
)
"solvingPolicy.ml" 197 5930 5937 "solvingPolicy.ml" 197 5930 5941
type(
  'a Apron.Abstract1.t
)
ident(
  def dest "solvingPolicy.ml" 198 5984 5987 "solvingPolicy.ml" 198 5984 5996
)
"solvingPolicy.ml" 197 5930 5944 "solvingPolicy.ml" 197 5930 5963
type(
  (Equation.vertex, int, 'a Apron.Abstract1.t, unit) Fixpoint.output ->
  Equation.vertex -> 'a Apron.Abstract1.t
)
ident(
  ext_ref PSHGraph.attrvertex
)
"solvingPolicy.ml" 197 5930 5964 "solvingPolicy.ml" 197 5930 5970
type(
  (Equation.vertex, int, 'a Apron.Abstract1.t, unit) Fixpoint.output
)
ident(
  int_ref output "solvingPolicy.ml" 194 5821 5833 "solvingPolicy.ml" 194 5821 5841
)
"solvingPolicy.ml" 197 5930 5971 "solvingPolicy.ml" 197 5930 5976
type(
  Equation.vertex array
)
ident(
  int_ref tdest "solvingPolicy.ml" 195 5845 5852 "solvingPolicy.ml" 195 5845 5857
)
"solvingPolicy.ml" 197 5930 5978 "solvingPolicy.ml" 197 5930 5979
type(
  int
)
"solvingPolicy.ml" 197 5930 5971 "solvingPolicy.ml" 197 5930 5980
type(
  Equation.vertex
)
"solvingPolicy.ml" 197 5930 5944 "solvingPolicy.ml" 197 5930 5980
call(
  stack
)
type(
  'a Apron.Abstract1.t
)
"solvingPolicy.ml" 198 5984 5992 "solvingPolicy.ml" 198 5984 5996
type(
  'a Apron.Abstract1.t
)
ident(
  int_ref dest "solvingPolicy.ml" 197 5930 5937 "solvingPolicy.ml" 197 5930 5941
)
"solvingPolicy.ml" 198 5984 5987 "solvingPolicy.ml" 198 5984 5996
type(
  'a Apron.Abstract1.t option
)
"solvingPolicy.ml" 197 5930 5933 "solvingPolicy.ml" 198 5984 5996
type(
  'a Apron.Abstract1.t option
)
"solvingPolicy.ml" 196 5895 5898 "solvingPolicy.ml" 198 5984 5996
type(
  'a Apron.Abstract1.t option
)
"solvingPolicy.ml" 195 5845 5848 "solvingPolicy.ml" 198 5984 5996
type(
  'a Apron.Abstract1.t option
)
"solvingPolicy.ml" 192 5766 5781 "solvingPolicy.ml" 198 5984 5996
type(
  'a Apron.Abstract1.t option
)
"solvingPolicy.ml" 200 6004 6012 "solvingPolicy.ml" 200 6004 6019
type(
  'a Apron.Manager.t
)
ident(
  def manager "solvingPolicy.ml" 201 6067 6071 "solvingPolicy.ml" 215 6641 6653
)
"solvingPolicy.ml" 200 6004 6022 "solvingPolicy.ml" 200 6004 6054
type(
  'a Apron.Policy.man -> 'a Apron.Manager.t
)
ident(
  ext_ref Apron.Policy.manager_get_manager
)
"solvingPolicy.ml" 200 6004 6055 "solvingPolicy.ml" 200 6004 6063
type(
  'a Apron.Policy.man
)
ident(
  int_ref pmanager "solvingPolicy.ml" 184 5554 5559 "solvingPolicy.ml" 184 5554 5567
)
"solvingPolicy.ml" 200 6004 6022 "solvingPolicy.ml" 200 6004 6063
type(
  'a Apron.Manager.t
)
"solvingPolicy.ml" 201 6067 6075 "solvingPolicy.ml" 201 6067 6078
type(
  'a Apron.Abstract1.t
)
ident(
  def res "solvingPolicy.ml" 215 6641 6645 "solvingPolicy.ml" 215 6641 6653
)
"solvingPolicy.ml" 202 6081 6093 "solvingPolicy.ml" 202 6081 6101
type(
  Equation.transfer
)
ident(
  int_ref transfer "solvingPolicy.ml" 190 5687 5695 "solvingPolicy.ml" 190 5687 5703
)
"solvingPolicy.ml" 203 6107 6132 "solvingPolicy.ml" 203 6107 6135
type(
  Apron.Var.t
)
ident(
  def var "solvingPolicy.ml" 204 6145 6148 "solvingPolicy.ml" 204 6145 6203
)
"solvingPolicy.ml" 203 6107 6136 "solvingPolicy.ml" 203 6107 6140
type(
  Apron.Texpr1.t
)
ident(
  def expr "solvingPolicy.ml" 204 6145 6148 "solvingPolicy.ml" 204 6145 6203
)
"solvingPolicy.ml" 203 6107 6115 "solvingPolicy.ml" 203 6107 6141
type(
  Equation.transfer
)
"solvingPolicy.ml" 204 6145 6148 "solvingPolicy.ml" 204 6145 6177
type(
  'a Apron.Manager.t ->
  'a Apron.Abstract1.t ->
  Apron.Var.t ->
  Apron.Texpr1.t -> 'a Apron.Abstract1.t option -> 'a Apron.Abstract1.t
)
ident(
  ext_ref Solving.Forward.apply_tassign
)
"solvingPolicy.ml" 204 6145 6178 "solvingPolicy.ml" 204 6145 6185
type(
  'a Apron.Manager.t
)
ident(
  int_ref manager "solvingPolicy.ml" 200 6004 6012 "solvingPolicy.ml" 200 6004 6019
)
"solvingPolicy.ml" 204 6145 6186 "solvingPolicy.ml" 204 6145 6189
type(
  'a Apron.Abstract1.t
)
ident(
  int_ref abs "solvingPolicy.ml" 191 5740 5748 "solvingPolicy.ml" 191 5740 5751
)
"solvingPolicy.ml" 204 6145 6190 "solvingPolicy.ml" 204 6145 6193
type(
  Apron.Var.t
)
ident(
  int_ref var "solvingPolicy.ml" 203 6107 6132 "solvingPolicy.ml" 203 6107 6135
)
"solvingPolicy.ml" 204 6145 6194 "solvingPolicy.ml" 204 6145 6198
type(
  Apron.Texpr1.t
)
ident(
  int_ref expr "solvingPolicy.ml" 203 6107 6136 "solvingPolicy.ml" 203 6107 6140
)
"solvingPolicy.ml" 204 6145 6199 "solvingPolicy.ml" 204 6145 6203
type(
  'a Apron.Abstract1.t option
)
ident(
  int_ref dest "solvingPolicy.ml" 192 5766 5774 "solvingPolicy.ml" 192 5766 5778
)
"solvingPolicy.ml" 204 6145 6148 "solvingPolicy.ml" 204 6145 6203
call(
  stack
)
type(
  'a Apron.Abstract1.t
)
"solvingPolicy.ml" 205 6204 6229 "solvingPolicy.ml" 205 6204 6230
type(
  Apron.Linexpr1.t
)
type(
  Apron.Var.t
)
"solvingPolicy.ml" 205 6204 6212 "solvingPolicy.ml" 205 6204 6230
type(
  Equation.transfer
)
"solvingPolicy.ml" 206 6234 6237 "solvingPolicy.ml" 206 6234 6245
type(
  string -> 'a Apron.Abstract1.t
)
ident(
  ext_ref Pervasives.failwith
)
"solvingPolicy.ml" 206 6234 6246 "solvingPolicy.ml" 206 6234 6248
type(
  string
)
"solvingPolicy.ml" 206 6234 6237 "solvingPolicy.ml" 206 6234 6248
call(
  stack
)
type(
  'a Apron.Abstract1.t
)
"solvingPolicy.ml" 207 6249 6276 "solvingPolicy.ml" 207 6249 6280
type(
  Apron.Tcons1.earray Boolexpr.t
)
ident(
  def cond "solvingPolicy.ml" 208 6284 6287 "solvingPolicy.ml" 209 6329 6377
)
"solvingPolicy.ml" 207 6249 6257 "solvingPolicy.ml" 207 6249 6280
type(
  Equation.transfer
)
"solvingPolicy.ml" 208 6284 6291 "solvingPolicy.ml" 208 6284 6297
type(
  'a policy
)
ident(
  def policy "solvingPolicy.ml" 209 6329 6332 "solvingPolicy.ml" 209 6329 6377
)
"solvingPolicy.ml" 208 6284 6300 "solvingPolicy.ml" 208 6284 6311
type(
  (Equation.hedge, 'a policy) Hashhe.t -> Equation.hedge -> 'a policy
)
ident(
  ext_ref Hashhe.find
)
"solvingPolicy.ml" 208 6284 6312 "solvingPolicy.ml" 208 6284 6313
type(
  (Equation.hedge, 'a policy) Hashhe.t ref ->
  (Equation.hedge, 'a policy) Hashhe.t
)
ident(
  ext_ref Pervasives.( ! )
)
"solvingPolicy.ml" 208 6284 6313 "solvingPolicy.ml" 208 6284 6319
type(
  (Equation.hedge, 'a policy) Hashhe.t ref
)
ident(
  int_ref policy "solvingPolicy.ml" 183 5499 5505 "solvingPolicy.ml" 183 5499 5511
)
"solvingPolicy.ml" 208 6284 6312 "solvingPolicy.ml" 208 6284 6319
type(
  (Equation.hedge, 'a policy) Hashhe.t
)
"solvingPolicy.ml" 208 6284 6320 "solvingPolicy.ml" 208 6284 6325
type(
  Equation.hedge
)
ident(
  int_ref hedge "solvingPolicy.ml" 185 5589 5594 "solvingPolicy.ml" 185 5589 5599
)
"solvingPolicy.ml" 208 6284 6300 "solvingPolicy.ml" 208 6284 6325
call(
  stack
)
type(
  'a policy
)
"solvingPolicy.ml" 209 6329 6332 "solvingPolicy.ml" 209 6329 6347
type(
  'a Apron.Policy.man ->
  'a policy ->
  'a Apron.Abstract1.t ->
  Apron.Tcons1.earray Boolexpr.t ->
  'a Apron.Abstract1.t option -> 'a Apron.Abstract1.t
)
ident(
  int_ref apply_condition "solvingPolicy.ml" 111 3392 3396 "solvingPolicy.ml" 111 3392 3411
)
"solvingPolicy.ml" 209 6329 6348 "solvingPolicy.ml" 209 6329 6356
type(
  'a Apron.Policy.man
)
ident(
  int_ref pmanager "solvingPolicy.ml" 184 5554 5559 "solvingPolicy.ml" 184 5554 5567
)
"solvingPolicy.ml" 209 6329 6357 "solvingPolicy.ml" 209 6329 6363
type(
  'a policy
)
ident(
  int_ref policy "solvingPolicy.ml" 208 6284 6291 "solvingPolicy.ml" 208 6284 6297
)
"solvingPolicy.ml" 209 6329 6364 "solvingPolicy.ml" 209 6329 6367
type(
  'a Apron.Abstract1.t
)
ident(
  int_ref abs "solvingPolicy.ml" 191 5740 5748 "solvingPolicy.ml" 191 5740 5751
)
"solvingPolicy.ml" 209 6329 6368 "solvingPolicy.ml" 209 6329 6372
type(
  Apron.Tcons1.earray Boolexpr.t
)
ident(
  int_ref cond "solvingPolicy.ml" 207 6249 6276 "solvingPolicy.ml" 207 6249 6280
)
"solvingPolicy.ml" 209 6329 6373 "solvingPolicy.ml" 209 6329 6377
type(
  'a Apron.Abstract1.t option
)
ident(
  int_ref dest "solvingPolicy.ml" 192 5766 5774 "solvingPolicy.ml" 192 5766 5778
)
"solvingPolicy.ml" 209 6329 6332 "solvingPolicy.ml" 209 6329 6377
call(
  stack
)
type(
  'a Apron.Abstract1.t
)
"solvingPolicy.ml" 208 6284 6287 "solvingPolicy.ml" 209 6329 6377
type(
  'a Apron.Abstract1.t
)
"solvingPolicy.ml" 210 6378 6400 "solvingPolicy.ml" 210 6378 6410
type(
  Equation.procinfo
)
ident(
  def callerinfo "solvingPolicy.ml" 211 6435 6438 "solvingPolicy.ml" 211 6435 6496
)
"solvingPolicy.ml" 210 6378 6411 "solvingPolicy.ml" 210 6378 6421
type(
  Equation.procinfo
)
ident(
  def calleeinfo "solvingPolicy.ml" 211 6435 6438 "solvingPolicy.ml" 211 6435 6496
)
"solvingPolicy.ml" 210 6378 6422 "solvingPolicy.ml" 210 6378 6425
type(
  Apron.Var.t array
)
ident(
  def tin "solvingPolicy.ml" 211 6435 6438 "solvingPolicy.ml" 211 6435 6496
)
"solvingPolicy.ml" 210 6378 6426 "solvingPolicy.ml" 210 6378 6430
type(
  Apron.Var.t array
)
ident(
  def tout "solvingPolicy.ml" 211 6435 6438 "solvingPolicy.ml" 211 6435 6496
)
"solvingPolicy.ml" 210 6378 6386 "solvingPolicy.ml" 210 6378 6431
type(
  Equation.transfer
)
"solvingPolicy.ml" 211 6435 6438 "solvingPolicy.ml" 211 6435 6464
type(
  'a Apron.Manager.t ->
  'a Apron.Abstract1.t ->
  Equation.procinfo ->
  Apron.Var.t array -> 'a Apron.Abstract1.t option -> 'a Apron.Abstract1.t
)
ident(
  ext_ref Solving.Forward.apply_call
)
"solvingPolicy.ml" 211 6435 6465 "solvingPolicy.ml" 211 6435 6472
type(
  'a Apron.Manager.t
)
ident(
  int_ref manager "solvingPolicy.ml" 200 6004 6012 "solvingPolicy.ml" 200 6004 6019
)
"solvingPolicy.ml" 211 6435 6473 "solvingPolicy.ml" 211 6435 6476
type(
  'a Apron.Abstract1.t
)
ident(
  int_ref abs "solvingPolicy.ml" 191 5740 5748 "solvingPolicy.ml" 191 5740 5751
)
"solvingPolicy.ml" 211 6435 6477 "solvingPolicy.ml" 211 6435 6487
type(
  Equation.procinfo
)
ident(
  int_ref calleeinfo "solvingPolicy.ml" 210 6378 6411 "solvingPolicy.ml" 210 6378 6421
)
"solvingPolicy.ml" 211 6435 6488 "solvingPolicy.ml" 211 6435 6491
type(
  Apron.Var.t array
)
ident(
  int_ref tin "solvingPolicy.ml" 210 6378 6422 "solvingPolicy.ml" 210 6378 6425
)
"solvingPolicy.ml" 211 6435 6492 "solvingPolicy.ml" 211 6435 6496
type(
  'a Apron.Abstract1.t option
)
ident(
  int_ref dest "solvingPolicy.ml" 192 5766 5774 "solvingPolicy.ml" 192 5766 5778
)
"solvingPolicy.ml" 211 6435 6438 "solvingPolicy.ml" 211 6435 6496
call(
  stack
)
type(
  'a Apron.Abstract1.t
)
"solvingPolicy.ml" 212 6497 6521 "solvingPolicy.ml" 212 6497 6531
type(
  Equation.procinfo
)
ident(
  def callerinfo "solvingPolicy.ml" 213 6556 6559 "solvingPolicy.ml" 213 6556 6633
)
"solvingPolicy.ml" 212 6497 6532 "solvingPolicy.ml" 212 6497 6542
type(
  Equation.procinfo
)
ident(
  def calleeinfo "solvingPolicy.ml" 213 6556 6559 "solvingPolicy.ml" 213 6556 6633
)
"solvingPolicy.ml" 212 6497 6543 "solvingPolicy.ml" 212 6497 6546
type(
  Apron.Var.t array
)
ident(
  def tin "solvingPolicy.ml" 213 6556 6559 "solvingPolicy.ml" 213 6556 6633
)
"solvingPolicy.ml" 212 6497 6547 "solvingPolicy.ml" 212 6497 6551
type(
  Apron.Var.t array
)
ident(
  def tout "solvingPolicy.ml" 213 6556 6559 "solvingPolicy.ml" 213 6556 6633
)
"solvingPolicy.ml" 212 6497 6505 "solvingPolicy.ml" 212 6497 6552
type(
  Equation.transfer
)
"solvingPolicy.ml" 213 6556 6559 "solvingPolicy.ml" 213 6556 6587
type(
  'a Apron.Manager.t ->
  'a Apron.Abstract1.t ->
  'a Apron.Abstract1.t ->
  Equation.procinfo ->
  Apron.Var.t array ->
  Apron.Var.t array -> 'a Apron.Abstract1.t option -> 'a Apron.Abstract1.t
)
ident(
  ext_ref Solving.Forward.apply_return
)
"solvingPolicy.ml" 213 6556 6588 "solvingPolicy.ml" 213 6556 6595
type(
  'a Apron.Manager.t
)
ident(
  int_ref manager "solvingPolicy.ml" 200 6004 6012 "solvingPolicy.ml" 200 6004 6019
)
"solvingPolicy.ml" 213 6556 6596 "solvingPolicy.ml" 213 6556 6599
type(
  'a Apron.Abstract1.t
)
ident(
  int_ref abs "solvingPolicy.ml" 191 5740 5748 "solvingPolicy.ml" 191 5740 5751
)
"solvingPolicy.ml" 213 6556 6600 "solvingPolicy.ml" 213 6556 6604
type(
  'a Apron.Abstract1.t array
)
ident(
  int_ref tabs "solvingPolicy.ml" 186 5605 5610 "solvingPolicy.ml" 186 5605 5614
)
"solvingPolicy.ml" 213 6556 6606 "solvingPolicy.ml" 213 6556 6607
type(
  int
)
"solvingPolicy.ml" 213 6556 6600 "solvingPolicy.ml" 213 6556 6608
type(
  'a Apron.Abstract1.t
)
"solvingPolicy.ml" 213 6556 6609 "solvingPolicy.ml" 213 6556 6619
type(
  Equation.procinfo
)
ident(
  int_ref calleeinfo "solvingPolicy.ml" 212 6497 6532 "solvingPolicy.ml" 212 6497 6542
)
"solvingPolicy.ml" 213 6556 6620 "solvingPolicy.ml" 213 6556 6623
type(
  Apron.Var.t array
)
ident(
  int_ref tin "solvingPolicy.ml" 212 6497 6543 "solvingPolicy.ml" 212 6497 6546
)
"solvingPolicy.ml" 213 6556 6624 "solvingPolicy.ml" 213 6556 6628
type(
  Apron.Var.t array
)
ident(
  int_ref tout "solvingPolicy.ml" 212 6497 6547 "solvingPolicy.ml" 212 6497 6551
)
"solvingPolicy.ml" 213 6556 6629 "solvingPolicy.ml" 213 6556 6633
type(
  'a Apron.Abstract1.t option
)
ident(
  int_ref dest "solvingPolicy.ml" 192 5766 5774 "solvingPolicy.ml" 192 5766 5778
)
"solvingPolicy.ml" 213 6556 6559 "solvingPolicy.ml" 213 6556 6633
call(
  stack
)
type(
  'a Apron.Abstract1.t
)
"solvingPolicy.ml" 202 6081 6087 "solvingPolicy.ml" 213 6556 6633
type(
  'a Apron.Abstract1.t
)
"solvingPolicy.ml" 215 6641 6646 "solvingPolicy.ml" 215 6641 6648
type(
  unit
)
"solvingPolicy.ml" 215 6641 6649 "solvingPolicy.ml" 215 6641 6652
type(
  'a Apron.Abstract1.t
)
ident(
  int_ref res "solvingPolicy.ml" 201 6067 6075 "solvingPolicy.ml" 201 6067 6078
)
"solvingPolicy.ml" 215 6641 6645 "solvingPolicy.ml" 215 6641 6653
type(
  unit * 'a Apron.Abstract1.t
)
"solvingPolicy.ml" 201 6067 6071 "solvingPolicy.ml" 215 6641 6653
type(
  unit * 'a Apron.Abstract1.t
)
"solvingPolicy.ml" 200 6004 6008 "solvingPolicy.ml" 215 6641 6653
type(
  unit * 'a Apron.Abstract1.t
)
"solvingPolicy.ml" 192 5766 5770 "solvingPolicy.ml" 215 6641 6653
type(
  unit * 'a Apron.Abstract1.t
)
"solvingPolicy.ml" 191 5740 5744 "solvingPolicy.ml" 215 6641 6653
type(
  unit * 'a Apron.Abstract1.t
)
"solvingPolicy.ml" 190 5687 5691 "solvingPolicy.ml" 215 6641 6653
type(
  unit * 'a Apron.Abstract1.t
)
type(
  unit * 'a Apron.Abstract1.t
)
"solvingPolicy.ml" 221 6850 6856 "solvingPolicy.ml" 221 6850 6863
type(
  fmt:Format.formatter ->
  Spl_syn.program ->
  Equation.graph ->
  output:(Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
         option ->
  'a0 Apron.Policy.man ->
  debug:int ->
  (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
)
ident(
  def compute "solvingPolicy.ml" 323 9826 9833 "solvingPolicy.ml" 325 9835 9838
)
"solvingPolicy.ml" 222 6864 6872 "solvingPolicy.ml" 222 6864 6875
type(
  Format.formatter
)
ident(
  def fmt "solvingPolicy.ml" 223 6896 6902 "solvingPolicy.ml" 323 9826 9833
)
"solvingPolicy.ml" 223 6896 6903 "solvingPolicy.ml" 223 6896 6907
type(
  Spl_syn.program
)
ident(
  def prog "solvingPolicy.ml" 224 6925 6931 "solvingPolicy.ml" 323 9826 9833
)
"solvingPolicy.ml" 224 6925 6932 "solvingPolicy.ml" 224 6925 6937
type(
  Equation.graph
)
ident(
  def graph "solvingPolicy.ml" 225 6954 6960 "solvingPolicy.ml" 323 9826 9833
)
"solvingPolicy.ml" 225 6954 6962 "solvingPolicy.ml" 225 6954 6968
type(
  (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output option
)
ident(
  def output "solvingPolicy.ml" 226 7044 7050 "solvingPolicy.ml" 323 9826 9833
)
"solvingPolicy.ml" 226 7044 7051 "solvingPolicy.ml" 226 7044 7059
type(
  'a0 Apron.Policy.man
)
ident(
  def pmanager "solvingPolicy.ml" 227 7081 7087 "solvingPolicy.ml" 323 9826 9833
)
"solvingPolicy.ml" 227 7081 7089 "solvingPolicy.ml" 227 7081 7094
type(
  int
)
ident(
  def debug "solvingPolicy.ml" 228 7100 7106 "solvingPolicy.ml" 323 9826 9833
)
"solvingPolicy.ml" 231 7187 7195 "solvingPolicy.ml" 231 7187 7202
type(
  'a0 Apron.Manager.t
)
ident(
  def manager "solvingPolicy.ml" 232 7250 7254 "solvingPolicy.ml" 323 9826 9833
)
"solvingPolicy.ml" 231 7187 7205 "solvingPolicy.ml" 231 7187 7237
type(
  'a0 Apron.Policy.man -> 'a0 Apron.Manager.t
)
ident(
  ext_ref Apron.Policy.manager_get_manager
)
"solvingPolicy.ml" 231 7187 7238 "solvingPolicy.ml" 231 7187 7246
type(
  'a0 Apron.Policy.man
)
ident(
  int_ref pmanager "solvingPolicy.ml" 226 7044 7051 "solvingPolicy.ml" 226 7044 7059
)
"solvingPolicy.ml" 231 7187 7205 "solvingPolicy.ml" 231 7187 7246
type(
  'a0 Apron.Manager.t
)
"solvingPolicy.ml" 232 7250 7258 "solvingPolicy.ml" 232 7250 7262
type(
  Equation.info
)
ident(
  def info "solvingPolicy.ml" 234 7289 7293 "solvingPolicy.ml" 323 9826 9833
)
"solvingPolicy.ml" 232 7250 7265 "solvingPolicy.ml" 232 7250 7278
type(
  Equation.graph -> Equation.info
)
ident(
  ext_ref PSHGraph.info
)
"solvingPolicy.ml" 232 7250 7279 "solvingPolicy.ml" 232 7250 7284
type(
  Equation.graph
)
ident(
  int_ref graph "solvingPolicy.ml" 224 6925 6932 "solvingPolicy.ml" 224 6925 6937
)
"solvingPolicy.ml" 232 7250 7265 "solvingPolicy.ml" 232 7250 7284
call(
  stack
)
type(
  Equation.info
)
"solvingPolicy.ml" 234 7289 7297 "solvingPolicy.ml" 234 7289 7303
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref
)
ident(
  def output "solvingPolicy.ml" 235 7320 7324 "solvingPolicy.ml" 323 9826 9833
)
"solvingPolicy.ml" 234 7289 7306 "solvingPolicy.ml" 234 7289 7309
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ->
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref
)
ident(
  ext_ref Pervasives.ref
)
"solvingPolicy.ml" 234 7289 7310 "solvingPolicy.ml" 234 7289 7316
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option
)
ident(
  int_ref output "solvingPolicy.ml" 225 6954 6962 "solvingPolicy.ml" 225 6954 6968
)
"solvingPolicy.ml" 234 7289 7306 "solvingPolicy.ml" 234 7289 7316
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref
)
"solvingPolicy.ml" 235 7320 7328 "solvingPolicy.ml" 235 7320 7334
type(
  Equation.vertex PSette.t
)
ident(
  def sstart "solvingPolicy.ml" 249 7791 7795 "solvingPolicy.ml" 323 9826 9833
)
"solvingPolicy.ml" 236 7337 7347 "solvingPolicy.ml" 236 7337 7355
type(
  Equation.procinfo
)
ident(
  def maininfo "solvingPolicy.ml" 237 7399 7405 "solvingPolicy.ml" 247 7774 7783
)
"solvingPolicy.ml" 236 7337 7358 "solvingPolicy.ml" 236 7337 7369
type(
  (string, Equation.procinfo) Hashhe.t -> string -> Equation.procinfo
)
ident(
  ext_ref Hashhe.find
)
"solvingPolicy.ml" 236 7337 7370 "solvingPolicy.ml" 236 7337 7374
type(
  Equation.info
)
ident(
  int_ref info "solvingPolicy.ml" 232 7250 7258 "solvingPolicy.ml" 232 7250 7262
)
"solvingPolicy.ml" 236 7337 7370 "solvingPolicy.ml" 236 7337 7392
type(
  (string, Equation.procinfo) Hashhe.t
)
"solvingPolicy.ml" 236 7337 7393 "solvingPolicy.ml" 236 7337 7395
type(
  string
)
"solvingPolicy.ml" 236 7337 7358 "solvingPolicy.ml" 236 7337 7395
call(
  stack
)
type(
  Equation.procinfo
)
"solvingPolicy.ml" 237 7399 7409 "solvingPolicy.ml" 237 7399 7414
type(
  Spl_syn.point
)
ident(
  def start "solvingPolicy.ml" 238 7445 7451 "solvingPolicy.ml" 247 7774 7783
)
"solvingPolicy.ml" 237 7399 7417 "solvingPolicy.ml" 237 7399 7425
type(
  Equation.procinfo
)
ident(
  int_ref maininfo "solvingPolicy.ml" 236 7337 7347 "solvingPolicy.ml" 236 7337 7355
)
"solvingPolicy.ml" 237 7399 7417 "solvingPolicy.ml" 237 7399 7441
type(
  Spl_syn.point
)
"solvingPolicy.ml" 238 7445 7463 "solvingPolicy.ml" 238 7445 7464
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref ->
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option
)
ident(
  ext_ref Pervasives.( ! )
)
"solvingPolicy.ml" 238 7445 7464 "solvingPolicy.ml" 238 7445 7470
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref
)
ident(
  int_ref output "solvingPolicy.ml" 234 7289 7297 "solvingPolicy.ml" 234 7289 7303
)
"solvingPolicy.ml" 238 7445 7463 "solvingPolicy.ml" 238 7445 7470
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option
)
"solvingPolicy.ml" 239 7476 7484 "solvingPolicy.ml" 239 7476 7488
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option
)
"solvingPolicy.ml" 240 7492 7495 "solvingPolicy.ml" 240 7492 7511
type(
  (Equation.vertex -> Equation.vertex -> int) ->
  Equation.vertex -> Equation.vertex PSette.t
)
ident(
  ext_ref PSette.singleton
)
"solvingPolicy.ml" 240 7492 7512 "solvingPolicy.ml" 240 7492 7534
type(
  Equation.vertex -> Equation.vertex -> int
)
ident(
  ext_ref Equation.compare_point
)
"solvingPolicy.ml" 240 7492 7535 "solvingPolicy.ml" 240 7492 7540
type(
  Equation.vertex
)
ident(
  int_ref start "solvingPolicy.ml" 237 7399 7409 "solvingPolicy.ml" 237 7399 7414
)
"solvingPolicy.ml" 240 7492 7495 "solvingPolicy.ml" 240 7492 7540
call(
  stack
)
type(
  Equation.vertex PSette.t
)
"solvingPolicy.ml" 241 7541 7554 "solvingPolicy.ml" 241 7541 7560
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output
)
ident(
  def output "solvingPolicy.ml" 242 7564 7567 "solvingPolicy.ml" 246 7721 7773
)
"solvingPolicy.ml" 241 7541 7549 "solvingPolicy.ml" 241 7541 7560
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option
)
"solvingPolicy.ml" 242 7564 7571 "solvingPolicy.ml" 242 7564 7579
type(
  'a0 Apron.Abstract1.t
)
ident(
  def abstract "solvingPolicy.ml" 243 7618 7621 "solvingPolicy.ml" 246 7721 7773
)
"solvingPolicy.ml" 242 7564 7582 "solvingPolicy.ml" 242 7564 7601
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output -> Equation.vertex -> 'a0 Apron.Abstract1.t
)
ident(
  ext_ref PSHGraph.attrvertex
)
"solvingPolicy.ml" 242 7564 7602 "solvingPolicy.ml" 242 7564 7608
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output
)
ident(
  int_ref output "solvingPolicy.ml" 241 7541 7554 "solvingPolicy.ml" 241 7541 7560
)
"solvingPolicy.ml" 242 7564 7609 "solvingPolicy.ml" 242 7564 7614
type(
  Equation.vertex
)
ident(
  int_ref start "solvingPolicy.ml" 237 7399 7409 "solvingPolicy.ml" 237 7399 7414
)
"solvingPolicy.ml" 242 7564 7582 "solvingPolicy.ml" 242 7564 7614
call(
  stack
)
type(
  'a0 Apron.Abstract1.t
)
"solvingPolicy.ml" 243 7618 7624 "solvingPolicy.ml" 243 7618 7649
type(
  'a0 Apron.Manager.t -> 'a0 Apron.Abstract1.t -> bool
)
ident(
  ext_ref Apron.Abstract1.is_bottom
)
"solvingPolicy.ml" 243 7618 7650 "solvingPolicy.ml" 243 7618 7657
type(
  'a0 Apron.Manager.t
)
ident(
  int_ref manager "solvingPolicy.ml" 231 7187 7195 "solvingPolicy.ml" 231 7187 7202
)
"solvingPolicy.ml" 243 7618 7658 "solvingPolicy.ml" 243 7618 7666
type(
  'a0 Apron.Abstract1.t
)
ident(
  int_ref abstract "solvingPolicy.ml" 242 7564 7571 "solvingPolicy.ml" 242 7564 7579
)
"solvingPolicy.ml" 243 7618 7624 "solvingPolicy.ml" 243 7618 7666
call(
  stack
)
type(
  bool
)
"solvingPolicy.ml" 244 7672 7677 "solvingPolicy.ml" 244 7672 7689
type(
  (Equation.vertex -> Equation.vertex -> int) -> Equation.vertex PSette.t
)
ident(
  ext_ref PSette.empty
)
"solvingPolicy.ml" 244 7672 7690 "solvingPolicy.ml" 244 7672 7712
type(
  Equation.vertex -> Equation.vertex -> int
)
ident(
  ext_ref Equation.compare_point
)
"solvingPolicy.ml" 244 7672 7677 "solvingPolicy.ml" 244 7672 7712
call(
  stack
)
type(
  Equation.vertex PSette.t
)
"solvingPolicy.ml" 246 7721 7727 "solvingPolicy.ml" 246 7721 7743
type(
  (Equation.vertex -> Equation.vertex -> int) ->
  Equation.vertex -> Equation.vertex PSette.t
)
ident(
  ext_ref PSette.singleton
)
"solvingPolicy.ml" 246 7721 7744 "solvingPolicy.ml" 246 7721 7766
type(
  Equation.vertex -> Equation.vertex -> int
)
ident(
  ext_ref Equation.compare_point
)
"solvingPolicy.ml" 246 7721 7767 "solvingPolicy.ml" 246 7721 7772
type(
  Equation.vertex
)
ident(
  int_ref start "solvingPolicy.ml" 237 7399 7409 "solvingPolicy.ml" 237 7399 7414
)
"solvingPolicy.ml" 246 7721 7726 "solvingPolicy.ml" 246 7721 7773
call(
  stack
)
type(
  Equation.vertex PSette.t
)
"solvingPolicy.ml" 243 7618 7621 "solvingPolicy.ml" 246 7721 7773
type(
  Equation.vertex PSette.t
)
"solvingPolicy.ml" 242 7564 7567 "solvingPolicy.ml" 246 7721 7773
type(
  Equation.vertex PSette.t
)
"solvingPolicy.ml" 238 7445 7451 "solvingPolicy.ml" 247 7774 7783
type(
  Equation.vertex PSette.t
)
"solvingPolicy.ml" 237 7399 7405 "solvingPolicy.ml" 247 7774 7783
type(
  Equation.vertex PSette.t
)
"solvingPolicy.ml" 236 7337 7343 "solvingPolicy.ml" 247 7774 7783
type(
  Equation.vertex PSette.t
)
"solvingPolicy.ml" 249 7791 7798 "solvingPolicy.ml" 249 7791 7813
type(
  Equation.vertex PSette.t -> bool
)
ident(
  ext_ref PSette.is_empty
)
"solvingPolicy.ml" 249 7791 7814 "solvingPolicy.ml" 249 7791 7820
type(
  Equation.vertex PSette.t
)
ident(
  int_ref sstart "solvingPolicy.ml" 235 7320 7328 "solvingPolicy.ml" 235 7320 7334
)
"solvingPolicy.ml" 249 7791 7798 "solvingPolicy.ml" 249 7791 7820
call(
  stack
)
type(
  bool
)
"solvingPolicy.ml" 250 7832 7838 "solvingPolicy.ml" 250 7832 7854
type(
  Equation.graph ->
  'a0 Apron.Manager.t ->
  (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
)
ident(
  int_ref make_emptyoutput "solvingPolicy.ml" 79 2537 2541 "solvingPolicy.ml" 79 2537 2557
)
"solvingPolicy.ml" 250 7832 7855 "solvingPolicy.ml" 250 7832 7860
type(
  Equation.graph
)
ident(
  int_ref graph "solvingPolicy.ml" 224 6925 6932 "solvingPolicy.ml" 224 6925 6937
)
"solvingPolicy.ml" 250 7832 7861 "solvingPolicy.ml" 250 7832 7868
type(
  'a0 Apron.Manager.t
)
ident(
  int_ref manager "solvingPolicy.ml" 231 7187 7195 "solvingPolicy.ml" 231 7187 7202
)
"solvingPolicy.ml" 249 7791 7826 "solvingPolicy.ml" 251 7869 7876
call(
  tail
)
type(
  (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
)
"solvingPolicy.ml" 253 7892 7902 "solvingPolicy.ml" 253 7892 7915
type(
  Equation.vertex -> 'a0 Apron.Abstract1.t
)
ident(
  def abstract_init "solvingPolicy.ml" 262 8134 8140 "solvingPolicy.ml" 322 9816 9825
)
"solvingPolicy.ml" 253 7892 7928 "solvingPolicy.ml" 253 7892 7934
type(
  Equation.vertex
)
ident(
  def vertex "solvingPolicy.ml" 254 7938 7939 "solvingPolicy.ml" 259 8110 8114
)
"solvingPolicy.ml" 254 7938 7951 "solvingPolicy.ml" 254 7938 7952
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref ->
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option
)
ident(
  ext_ref Pervasives.( ! )
)
"solvingPolicy.ml" 254 7938 7952 "solvingPolicy.ml" 254 7938 7958
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref
)
ident(
  int_ref output "solvingPolicy.ml" 234 7289 7297 "solvingPolicy.ml" 234 7289 7303
)
"solvingPolicy.ml" 254 7938 7951 "solvingPolicy.ml" 254 7938 7958
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option
)
"solvingPolicy.ml" 255 7964 7967 "solvingPolicy.ml" 255 7964 7971
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option
)
"solvingPolicy.ml" 256 7975 7980 "solvingPolicy.ml" 256 7975 7999
type(
  'a0 Apron.Manager.t -> Apron.Environment.t -> 'a0 Apron.Abstract1.t
)
ident(
  ext_ref Apron.Abstract1.top
)
"solvingPolicy.ml" 256 7975 8000 "solvingPolicy.ml" 256 7975 8007
type(
  'a0 Apron.Manager.t
)
ident(
  int_ref manager "solvingPolicy.ml" 231 7187 7195 "solvingPolicy.ml" 231 7187 7202
)
"solvingPolicy.ml" 256 7975 8009 "solvingPolicy.ml" 256 7975 8020
type(
  (Equation.vertex, Apron.Environment.t) Hashhe.t ->
  Equation.vertex -> Apron.Environment.t
)
ident(
  ext_ref Hashhe.find
)
"solvingPolicy.ml" 256 7975 8021 "solvingPolicy.ml" 256 7975 8025
type(
  Equation.info
)
ident(
  int_ref info "solvingPolicy.ml" 232 7250 7258 "solvingPolicy.ml" 232 7250 7262
)
"solvingPolicy.ml" 256 7975 8021 "solvingPolicy.ml" 256 7975 8043
type(
  (Equation.vertex, Apron.Environment.t) Hashhe.t
)
"solvingPolicy.ml" 256 7975 8044 "solvingPolicy.ml" 256 7975 8050
type(
  Equation.vertex
)
ident(
  int_ref vertex "solvingPolicy.ml" 253 7892 7928 "solvingPolicy.ml" 253 7892 7934
)
"solvingPolicy.ml" 256 7975 8008 "solvingPolicy.ml" 256 7975 8051
call(
  stack
)
type(
  Apron.Environment.t
)
"solvingPolicy.ml" 256 7975 7980 "solvingPolicy.ml" 256 7975 8051
type(
  'a0 Apron.Abstract1.t
)
"solvingPolicy.ml" 257 8052 8060 "solvingPolicy.ml" 257 8052 8066
ident(
  def output "solvingPolicy.ml" 258 8071 8076 "solvingPolicy.ml" 258 8071 8109
)
"solvingPolicy.ml" 257 8052 8059 "solvingPolicy.ml" 257 8052 8067
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output
)
"solvingPolicy.ml" 257 8052 8055 "solvingPolicy.ml" 257 8052 8067
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option
)
"solvingPolicy.ml" 258 8071 8076 "solvingPolicy.ml" 258 8071 8095
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output -> Equation.vertex -> 'a0 Apron.Abstract1.t
)
ident(
  ext_ref PSHGraph.attrvertex
)
"solvingPolicy.ml" 258 8071 8096 "solvingPolicy.ml" 258 8071 8102
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output
)
ident(
  int_ref output "solvingPolicy.ml" 257 8052 8059 "solvingPolicy.ml" 257 8052 8067
)
"solvingPolicy.ml" 258 8071 8103 "solvingPolicy.ml" 258 8071 8109
type(
  Equation.vertex
)
ident(
  int_ref vertex "solvingPolicy.ml" 253 7892 7928 "solvingPolicy.ml" 253 7892 7934
)
"solvingPolicy.ml" 258 8071 8076 "solvingPolicy.ml" 258 8071 8109
call(
  tail
)
type(
  'a0 Apron.Abstract1.t
)
"solvingPolicy.ml" 254 7938 7939 "solvingPolicy.ml" 259 8110 8114
type(
  'a0 Apron.Abstract1.t
)
"solvingPolicy.ml" 253 7892 7918 "solvingPolicy.ml" 260 8115 8124
type(
  Equation.vertex -> 'a0 Apron.Abstract1.t
)
"solvingPolicy.ml" 262 8134 8144 "solvingPolicy.ml" 262 8134 8150
type(
  (Equation.hedge, 'a0 policy) Hashhe.t ref
)
ident(
  def policy "solvingPolicy.ml" 263 8190 8196 "solvingPolicy.ml" 322 9816 9825
)
"solvingPolicy.ml" 262 8134 8153 "solvingPolicy.ml" 262 8134 8164
type(
  'a0 Apron.Policy.man ->
  Equation.graph ->
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref -> (Equation.hedge, 'a0 policy) Hashhe.t ref
)
ident(
  int_ref make_policy "solvingPolicy.ml" 82 2640 2644 "solvingPolicy.ml" 82 2640 2655
)
"solvingPolicy.ml" 262 8134 8165 "solvingPolicy.ml" 262 8134 8173
type(
  'a0 Apron.Policy.man
)
ident(
  int_ref pmanager "solvingPolicy.ml" 226 7044 7051 "solvingPolicy.ml" 226 7044 7059
)
"solvingPolicy.ml" 262 8134 8174 "solvingPolicy.ml" 262 8134 8179
type(
  Equation.graph
)
ident(
  int_ref graph "solvingPolicy.ml" 224 6925 6932 "solvingPolicy.ml" 224 6925 6937
)
"solvingPolicy.ml" 262 8134 8180 "solvingPolicy.ml" 262 8134 8186
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref
)
ident(
  int_ref output "solvingPolicy.ml" 234 7289 7297 "solvingPolicy.ml" 234 7289 7303
)
"solvingPolicy.ml" 262 8134 8153 "solvingPolicy.ml" 262 8134 8186
call(
  stack
)
type(
  (Equation.hedge, 'a0 policy) Hashhe.t ref
)
"solvingPolicy.ml" 263 8190 8200 "solvingPolicy.ml" 263 8190 8209
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.manager
)
ident(
  def fpmanager "solvingPolicy.ml" 269 8318 8324 "solvingPolicy.ml" 322 9816 9825
)
"solvingPolicy.ml" 264 8212 8213 "solvingPolicy.ml" 264 8212 8227
type(
  fmt:Format.formatter ->
  output:(Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
         Fixpoint.output option ref ->
  debug:int ->
  graph:Equation.graph ->
  policy:(Equation.hedge, 'a0 policy) Hashhe.t ref ->
  pman:'a0 Apron.Policy.man ->
  abstract_init:(Equation.vertex -> 'a0 Apron.Abstract1.t) ->
  apply:(Equation.graph ->
         output:(Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit)
                Fixpoint.output option ref ->
         policy:(Equation.hedge, 'a0 policy) Hashhe.t ref ->
         'a0 Apron.Policy.man ->
         Equation.hedge ->
         'a0 Apron.Abstract1.t array -> unit * 'a0 Apron.Abstract1.t) ->
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.manager
)
ident(
  int_ref make_fpmanager "solvingPolicy.ml" 46 1396 1400 "solvingPolicy.ml" 46 1396 1414
)
"solvingPolicy.ml" 264 8212 8229 "solvingPolicy.ml" 264 8212 8232
type(
  Format.formatter
)
ident(
  int_ref fmt "solvingPolicy.ml" 222 6864 6872 "solvingPolicy.ml" 222 6864 6875
)
"solvingPolicy.ml" 264 8212 8234 "solvingPolicy.ml" 264 8212 8240
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref
)
ident(
  int_ref output "solvingPolicy.ml" 234 7289 7297 "solvingPolicy.ml" 234 7289 7303
)
"solvingPolicy.ml" 264 8212 8242 "solvingPolicy.ml" 264 8212 8247
type(
  int
)
ident(
  int_ref debug "solvingPolicy.ml" 227 7081 7089 "solvingPolicy.ml" 227 7081 7094
)
"solvingPolicy.ml" 264 8212 8249 "solvingPolicy.ml" 264 8212 8254
type(
  Equation.graph
)
ident(
  int_ref graph "solvingPolicy.ml" 224 6925 6932 "solvingPolicy.ml" 224 6925 6937
)
"solvingPolicy.ml" 265 8255 8259 "solvingPolicy.ml" 265 8255 8265
type(
  (Equation.hedge, 'a0 policy) Hashhe.t ref
)
ident(
  int_ref policy "solvingPolicy.ml" 262 8134 8144 "solvingPolicy.ml" 262 8134 8150
)
"solvingPolicy.ml" 266 8266 8275 "solvingPolicy.ml" 266 8266 8283
type(
  'a0 Apron.Policy.man
)
ident(
  int_ref pmanager "solvingPolicy.ml" 226 7044 7051 "solvingPolicy.ml" 226 7044 7059
)
"solvingPolicy.ml" 267 8284 8288 "solvingPolicy.ml" 267 8284 8301
type(
  Equation.vertex -> 'a0 Apron.Abstract1.t
)
ident(
  int_ref abstract_init "solvingPolicy.ml" 253 7892 7902 "solvingPolicy.ml" 253 7892 7915
)
"solvingPolicy.ml" 267 8284 8303 "solvingPolicy.ml" 267 8284 8308
type(
  Equation.graph ->
  output:(Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
         option ref ->
  policy:(Equation.hedge, 'a0 policy) Hashhe.t ref ->
  'a0 Apron.Policy.man ->
  Equation.hedge ->
  'a0 Apron.Abstract1.t array -> unit * 'a0 Apron.Abstract1.t
)
ident(
  int_ref apply "solvingPolicy.ml" 180 5368 5374 "solvingPolicy.ml" 180 5368 5379
)
"solvingPolicy.ml" 264 8212 8213 "solvingPolicy.ml" 267 8284 8308
call(
  stack
)
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.manager
)
"solvingPolicy.ml" 269 8318 8328 "solvingPolicy.ml" 269 8318 8334
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref
)
ident(
  def result "solvingPolicy.ml" 270 8349 8355 "solvingPolicy.ml" 322 9816 9825
)
"solvingPolicy.ml" 269 8318 8337 "solvingPolicy.ml" 269 8318 8340
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ->
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref
)
ident(
  ext_ref Pervasives.ref
)
"solvingPolicy.ml" 269 8318 8341 "solvingPolicy.ml" 269 8318 8345
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option
)
"solvingPolicy.ml" 269 8318 8337 "solvingPolicy.ml" 269 8318 8345
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref
)
"solvingPolicy.ml" 270 8349 8359 "solvingPolicy.ml" 270 8349 8363
type(
  bool ref
)
ident(
  def loop "solvingPolicy.ml" 271 8378 8384 "solvingPolicy.ml" 322 9816 9825
)
"solvingPolicy.ml" 270 8349 8366 "solvingPolicy.ml" 270 8349 8369
type(
  bool -> bool ref
)
ident(
  ext_ref Pervasives.ref
)
"solvingPolicy.ml" 270 8349 8370 "solvingPolicy.ml" 270 8349 8374
type(
  bool
)
"solvingPolicy.ml" 270 8349 8366 "solvingPolicy.ml" 270 8349 8374
type(
  bool ref
)
"solvingPolicy.ml" 271 8378 8390 "solvingPolicy.ml" 271 8378 8391
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"solvingPolicy.ml" 271 8378 8391 "solvingPolicy.ml" 271 8378 8395
type(
  bool ref
)
ident(
  int_ref loop "solvingPolicy.ml" 270 8349 8359 "solvingPolicy.ml" 270 8349 8363
)
"solvingPolicy.ml" 271 8378 8390 "solvingPolicy.ml" 271 8378 8395
type(
  bool
)
"solvingPolicy.ml" 272 8399 8404 "solvingPolicy.ml" 272 8399 8406
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output
)
ident(
  def fp "solvingPolicy.ml" 290 8894 8895 "solvingPolicy.ml" 317 9704 9723
)
"solvingPolicy.ml" 273 8409 8415 "solvingPolicy.ml" 273 8409 8416
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"solvingPolicy.ml" 273 8409 8416 "solvingPolicy.ml" 273 8409 8439
type(
  bool ref
)
ident(
  ext_ref Option.iteration_guided
)
"solvingPolicy.ml" 273 8409 8415 "solvingPolicy.ml" 273 8409 8439
type(
  bool
)
"solvingPolicy.ml" 274 8445 8450 "solvingPolicy.ml" 274 8445 8474
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.manager ->
  Equation.graph ->
  Equation.vertex PSette.t ->
  ((Equation.hedge -> bool) ->
   (Equation.vertex, Equation.hedge) Fixpoint.strategy) ->
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output
)
ident(
  ext_ref Fixpoint.analysis_guided
)
"solvingPolicy.ml" 275 8475 8482 "solvingPolicy.ml" 275 8475 8491
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.manager
)
ident(
  int_ref fpmanager "solvingPolicy.ml" 263 8190 8200 "solvingPolicy.ml" 263 8190 8209
)
"solvingPolicy.ml" 275 8475 8492 "solvingPolicy.ml" 275 8475 8497
type(
  Equation.graph
)
ident(
  int_ref graph "solvingPolicy.ml" 224 6925 6932 "solvingPolicy.ml" 224 6925 6937
)
"solvingPolicy.ml" 275 8475 8498 "solvingPolicy.ml" 275 8475 8504
type(
  Equation.vertex PSette.t
)
ident(
  int_ref sstart "solvingPolicy.ml" 235 7320 7328 "solvingPolicy.ml" 235 7320 7334
)
"solvingPolicy.ml" 276 8505 8517 "solvingPolicy.ml" 276 8505 8523
type(
  Equation.hedge -> bool
)
ident(
  def filter "solvingPolicy.ml" 277 8528 8530 "solvingPolicy.ml" 281 8678 8694
)
"solvingPolicy.ml" 277 8528 8530 "solvingPolicy.ml" 277 8528 8560
type(
  ?depth:int ->
  ?widening_start:int ->
  ?widening_descend:int ->
  ?priority:Equation.hedge PSHGraph.priority ->
  vertex_dummy:Equation.vertex ->
  hedge_dummy:Equation.hedge ->
  Equation.graph ->
  Equation.vertex PSette.t ->
  (Equation.vertex, Equation.hedge) Fixpoint.strategy
)
ident(
  ext_ref Fixpoint.make_strategy_default
)
"solvingPolicy.ml" 278 8561 8579 "solvingPolicy.ml" 278 8561 8600
type(
  Equation.vertex
)
ident(
  ext_ref Equation.vertex_dummy
)
"solvingPolicy.ml" 279 8601 8618 "solvingPolicy.ml" 279 8601 8638
type(
  Equation.hedge
)
ident(
  ext_ref Equation.hedge_dummy
)
"solvingPolicy.ml" 280 8639 8670 "solvingPolicy.ml" 280 8639 8676
type(
  Equation.hedge -> bool
)
ident(
  int_ref filter "solvingPolicy.ml" 276 8505 8517 "solvingPolicy.ml" 276 8505 8523
)
"solvingPolicy.ml" 280 8639 8653 "solvingPolicy.ml" 280 8639 8677
type(
  Equation.hedge PSHGraph.priority
)
"solvingPolicy.ml" 281 8678 8682 "solvingPolicy.ml" 281 8678 8687
type(
  Equation.graph
)
ident(
  int_ref graph "solvingPolicy.ml" 224 6925 6932 "solvingPolicy.ml" 224 6925 6937
)
"solvingPolicy.ml" 281 8678 8688 "solvingPolicy.ml" 281 8678 8694
type(
  Equation.vertex PSette.t
)
ident(
  int_ref sstart "solvingPolicy.ml" 235 7320 7328 "solvingPolicy.ml" 235 7320 7334
)
"solvingPolicy.ml" 277 8528 8530 "solvingPolicy.ml" 281 8678 8694
call(
  tail
)
type(
  (Equation.vertex, Equation.hedge) Fixpoint.strategy
)
"solvingPolicy.ml" 276 8505 8512 "solvingPolicy.ml" 281 8678 8695
type(
  (Equation.hedge -> bool) ->
  (Equation.vertex, Equation.hedge) Fixpoint.strategy
)
"solvingPolicy.ml" 274 8445 8450 "solvingPolicy.ml" 281 8678 8695
call(
  stack
)
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output
)
"solvingPolicy.ml" 283 8704 8709 "solvingPolicy.ml" 283 8704 8730
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.manager ->
  Equation.graph ->
  Equation.vertex PSette.t ->
  (Equation.vertex, Equation.hedge) Fixpoint.strategy ->
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output
)
ident(
  ext_ref Fixpoint.analysis_std
)
"solvingPolicy.ml" 284 8731 8738 "solvingPolicy.ml" 284 8731 8747
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.manager
)
ident(
  int_ref fpmanager "solvingPolicy.ml" 263 8190 8200 "solvingPolicy.ml" 263 8190 8209
)
"solvingPolicy.ml" 284 8731 8748 "solvingPolicy.ml" 284 8731 8753
type(
  Equation.graph
)
ident(
  int_ref graph "solvingPolicy.ml" 224 6925 6932 "solvingPolicy.ml" 224 6925 6937
)
"solvingPolicy.ml" 284 8731 8754 "solvingPolicy.ml" 284 8731 8760
type(
  Equation.vertex PSette.t
)
ident(
  int_ref sstart "solvingPolicy.ml" 235 7320 7328 "solvingPolicy.ml" 235 7320 7334
)
"solvingPolicy.ml" 285 8761 8769 "solvingPolicy.ml" 285 8761 8799
type(
  ?depth:int ->
  ?widening_start:int ->
  ?widening_descend:int ->
  ?priority:Equation.hedge PSHGraph.priority ->
  vertex_dummy:Equation.vertex ->
  hedge_dummy:Equation.hedge ->
  Equation.graph ->
  Equation.vertex PSette.t ->
  (Equation.vertex, Equation.hedge) Fixpoint.strategy
)
ident(
  ext_ref Fixpoint.make_strategy_default
)
"solvingPolicy.ml" 286 8800 8816 "solvingPolicy.ml" 286 8800 8837
type(
  Equation.vertex
)
ident(
  ext_ref Equation.vertex_dummy
)
"solvingPolicy.ml" 287 8838 8853 "solvingPolicy.ml" 287 8838 8873
type(
  Equation.hedge
)
ident(
  ext_ref Equation.hedge_dummy
)
"solvingPolicy.ml" 288 8874 8876 "solvingPolicy.ml" 288 8874 8881
type(
  Equation.graph
)
ident(
  int_ref graph "solvingPolicy.ml" 224 6925 6932 "solvingPolicy.ml" 224 6925 6937
)
"solvingPolicy.ml" 288 8874 8882 "solvingPolicy.ml" 288 8874 8888
type(
  Equation.vertex PSette.t
)
ident(
  int_ref sstart "solvingPolicy.ml" 235 7320 7328 "solvingPolicy.ml" 235 7320 7334
)
"solvingPolicy.ml" 285 8761 8768 "solvingPolicy.ml" 288 8874 8889
call(
  stack
)
type(
  (Equation.vertex, Equation.hedge) Fixpoint.strategy
)
"solvingPolicy.ml" 283 8704 8709 "solvingPolicy.ml" 288 8874 8889
call(
  stack
)
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output
)
"solvingPolicy.ml" 273 8409 8412 "solvingPolicy.ml" 288 8874 8889
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output
)
"solvingPolicy.ml" 290 8894 8895 "solvingPolicy.ml" 290 8894 8901
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref
)
ident(
  int_ref result "solvingPolicy.ml" 269 8318 8328 "solvingPolicy.ml" 269 8318 8334
)
"solvingPolicy.ml" 290 8894 8902 "solvingPolicy.ml" 290 8894 8904
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref ->
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"solvingPolicy.ml" 290 8894 8910 "solvingPolicy.ml" 290 8894 8912
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output
)
ident(
  int_ref fp "solvingPolicy.ml" 272 8399 8404 "solvingPolicy.ml" 272 8399 8406
)
"solvingPolicy.ml" 290 8894 8905 "solvingPolicy.ml" 290 8894 8912
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option
)
"solvingPolicy.ml" 290 8894 8895 "solvingPolicy.ml" 290 8894 8912
type(
  unit
)
"solvingPolicy.ml" 292 8929 8933 "solvingPolicy.ml" 292 8929 8934
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"solvingPolicy.ml" 292 8929 8934 "solvingPolicy.ml" 292 8929 8946
type(
  int ref
)
ident(
  ext_ref Option.debug
)
"solvingPolicy.ml" 292 8929 8933 "solvingPolicy.ml" 292 8929 8946
type(
  int
)
"solvingPolicy.ml" 292 8929 8946 "solvingPolicy.ml" 292 8929 8947
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( > )
)
"solvingPolicy.ml" 292 8929 8947 "solvingPolicy.ml" 292 8929 8948
type(
  int
)
"solvingPolicy.ml" 292 8929 8933 "solvingPolicy.ml" 292 8929 8948
type(
  bool
)
"solvingPolicy.ml" 293 8960 8963 "solvingPolicy.ml" 293 8960 8969
type(
  ((Format.formatter -> (Equation.hedge, 'a0 policy) Hashhe.t -> unit) ->
   (Equation.hedge, 'a0 policy) Hashhe.t -> unit, Format.formatter, unit)
  format ->
  (Format.formatter -> (Equation.hedge, 'a0 policy) Hashhe.t -> unit) ->
  (Equation.hedge, 'a0 policy) Hashhe.t -> unit
)
ident(
  ext_ref Format.printf
)
"solvingPolicy.ml" 293 8960 8970 "solvingPolicy.ml" 293 8960 8981
type(
  ((Format.formatter -> (Equation.hedge, 'a0 policy) Hashhe.t -> unit) ->
   (Equation.hedge, 'a0 policy) Hashhe.t -> unit, Format.formatter, unit)
  format
)
"solvingPolicy.ml" 293 8960 8983 "solvingPolicy.ml" 293 8960 9000
type(
  'a0 Apron.Policy.man ->
  Format.formatter -> (Equation.hedge, 'a0 policy) Hashhe.t -> unit
)
ident(
  int_ref hash_policy_print "solvingPolicy.ml" 21 530 534 "solvingPolicy.ml" 21 530 551
)
"solvingPolicy.ml" 293 8960 9001 "solvingPolicy.ml" 293 8960 9009
type(
  'a0 Apron.Policy.man
)
ident(
  int_ref pmanager "solvingPolicy.ml" 226 7044 7051 "solvingPolicy.ml" 226 7044 7059
)
"solvingPolicy.ml" 293 8960 8982 "solvingPolicy.ml" 293 8960 9010
call(
  stack
)
type(
  Format.formatter -> (Equation.hedge, 'a0 policy) Hashhe.t -> unit
)
"solvingPolicy.ml" 293 8960 9011 "solvingPolicy.ml" 293 8960 9012
type(
  (Equation.hedge, 'a0 policy) Hashhe.t ref ->
  (Equation.hedge, 'a0 policy) Hashhe.t
)
ident(
  ext_ref Pervasives.( ! )
)
"solvingPolicy.ml" 293 8960 9012 "solvingPolicy.ml" 293 8960 9018
type(
  (Equation.hedge, 'a0 policy) Hashhe.t ref
)
ident(
  int_ref policy "solvingPolicy.ml" 262 8134 8144 "solvingPolicy.ml" 262 8134 8150
)
"solvingPolicy.ml" 293 8960 9011 "solvingPolicy.ml" 293 8960 9018
type(
  (Equation.hedge, 'a0 policy) Hashhe.t
)
"solvingPolicy.ml" 293 8960 8963 "solvingPolicy.ml" 293 8960 9018
call(
  stack
)
type(
  unit
)
"solvingPolicy.ml" 294 9020 9023 "solvingPolicy.ml" 294 9020 9043
type(
  Spl_syn.program ->
  Format.formatter ->
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output -> unit
)
ident(
  ext_ref Solving.print_output
)
"solvingPolicy.ml" 294 9020 9044 "solvingPolicy.ml" 294 9020 9048
type(
  Spl_syn.program
)
ident(
  int_ref prog "solvingPolicy.ml" 223 6896 6903 "solvingPolicy.ml" 223 6896 6907
)
"solvingPolicy.ml" 294 9020 9049 "solvingPolicy.ml" 294 9020 9052
type(
  Format.formatter
)
ident(
  int_ref fmt "solvingPolicy.ml" 222 6864 6872 "solvingPolicy.ml" 222 6864 6875
)
"solvingPolicy.ml" 294 9020 9053 "solvingPolicy.ml" 294 9020 9055
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output
)
ident(
  int_ref fp "solvingPolicy.ml" 272 8399 8404 "solvingPolicy.ml" 272 8399 8406
)
"solvingPolicy.ml" 294 9020 9023 "solvingPolicy.ml" 294 9020 9056
call(
  stack
)
type(
  unit
)
"solvingPolicy.ml" 292 8929 8954 "solvingPolicy.ml" 295 9057 9061
type(
  unit
)
"solvingPolicy.ml" 292 8929 8930 "solvingPolicy.ml" 295 9057 9061
type(
  unit
)
"solvingPolicy.ml" 297 9099 9100 "solvingPolicy.ml" 297 9099 9104
type(
  bool ref
)
ident(
  int_ref loop "solvingPolicy.ml" 270 8349 8359 "solvingPolicy.ml" 270 8349 8363
)
"solvingPolicy.ml" 297 9099 9105 "solvingPolicy.ml" 297 9099 9107
type(
  bool ref -> bool -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"solvingPolicy.ml" 297 9099 9108 "solvingPolicy.ml" 297 9099 9113
type(
  bool
)
"solvingPolicy.ml" 297 9099 9100 "solvingPolicy.ml" 297 9099 9113
type(
  unit
)
"solvingPolicy.ml" 298 9115 9116 "solvingPolicy.ml" 298 9115 9122
type(
  (Equation.hedge, 'a0 policy) Hashhe.t ref
)
ident(
  int_ref policy "solvingPolicy.ml" 262 8134 8144 "solvingPolicy.ml" 262 8134 8150
)
"solvingPolicy.ml" 298 9115 9123 "solvingPolicy.ml" 298 9115 9125
type(
  (Equation.hedge, 'a0 policy) Hashhe.t ref ->
  (Equation.hedge, 'a0 policy) Hashhe.t -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"solvingPolicy.ml" 299 9126 9129 "solvingPolicy.ml" 299 9126 9139
type(
  (Equation.hedge -> 'a0 policy -> 'a0 policy) ->
  (Equation.hedge, 'a0 policy) Hashhe.t ->
  (Equation.hedge, 'a0 policy) Hashhe.t
)
ident(
  ext_ref Hashhe.map
)
"solvingPolicy.ml" 300 9140 9156 "solvingPolicy.ml" 300 9140 9161
type(
  Equation.hedge
)
ident(
  def hedge "solvingPolicy.ml" 300 9140 9162 "solvingPolicy.ml" 312 9602 9615
)
"solvingPolicy.ml" 300 9140 9162 "solvingPolicy.ml" 300 9140 9171
type(
  'a0 policy
)
ident(
  def oldpolicy "solvingPolicy.ml" 301 9175 9182 "solvingPolicy.ml" 312 9602 9615
)
"solvingPolicy.ml" 301 9175 9186 "solvingPolicy.ml" 301 9175 9196
type(
  Equation.vertex
)
ident(
  def predvertex "solvingPolicy.ml" 302 9240 9247 "solvingPolicy.ml" 312 9602 9615
)
"solvingPolicy.ml" 301 9175 9200 "solvingPolicy.ml" 301 9175 9219
type(
  Equation.graph -> Equation.hedge -> Equation.vertex array
)
ident(
  ext_ref PSHGraph.predvertex
)
"solvingPolicy.ml" 301 9175 9220 "solvingPolicy.ml" 301 9175 9225
type(
  Equation.graph
)
ident(
  int_ref graph "solvingPolicy.ml" 224 6925 6932 "solvingPolicy.ml" 224 6925 6937
)
"solvingPolicy.ml" 301 9175 9226 "solvingPolicy.ml" 301 9175 9231
type(
  Equation.hedge
)
ident(
  int_ref hedge "solvingPolicy.ml" 300 9140 9156 "solvingPolicy.ml" 300 9140 9161
)
"solvingPolicy.ml" 301 9175 9199 "solvingPolicy.ml" 301 9175 9232
call(
  stack
)
type(
  Equation.vertex array
)
"solvingPolicy.ml" 301 9175 9234 "solvingPolicy.ml" 301 9175 9235
type(
  int
)
"solvingPolicy.ml" 301 9175 9199 "solvingPolicy.ml" 301 9175 9236
type(
  Equation.vertex
)
"solvingPolicy.ml" 302 9240 9251 "solvingPolicy.ml" 302 9240 9254
type(
  'a0 Apron.Abstract1.t
)
ident(
  def abs "solvingPolicy.ml" 303 9294 9301 "solvingPolicy.ml" 312 9602 9615
)
"solvingPolicy.ml" 302 9240 9257 "solvingPolicy.ml" 302 9240 9276
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output -> Equation.vertex -> 'a0 Apron.Abstract1.t
)
ident(
  ext_ref PSHGraph.attrvertex
)
"solvingPolicy.ml" 302 9240 9277 "solvingPolicy.ml" 302 9240 9279
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output
)
ident(
  int_ref fp "solvingPolicy.ml" 272 8399 8404 "solvingPolicy.ml" 272 8399 8406
)
"solvingPolicy.ml" 302 9240 9280 "solvingPolicy.ml" 302 9240 9290
type(
  Equation.vertex
)
ident(
  int_ref predvertex "solvingPolicy.ml" 301 9175 9186 "solvingPolicy.ml" 301 9175 9196
)
"solvingPolicy.ml" 302 9240 9257 "solvingPolicy.ml" 302 9240 9290
call(
  stack
)
type(
  'a0 Apron.Abstract1.t
)
"solvingPolicy.ml" 303 9294 9305 "solvingPolicy.ml" 303 9294 9313
type(
  Equation.transfer
)
ident(
  def transfer "solvingPolicy.ml" 304 9350 9357 "solvingPolicy.ml" 312 9602 9615
)
"solvingPolicy.ml" 303 9294 9316 "solvingPolicy.ml" 303 9294 9334
type(
  Equation.graph -> Equation.hedge -> Equation.transfer
)
ident(
  ext_ref PSHGraph.attrhedge
)
"solvingPolicy.ml" 303 9294 9335 "solvingPolicy.ml" 303 9294 9340
type(
  Equation.graph
)
ident(
  int_ref graph "solvingPolicy.ml" 224 6925 6932 "solvingPolicy.ml" 224 6925 6937
)
"solvingPolicy.ml" 303 9294 9341 "solvingPolicy.ml" 303 9294 9346
type(
  Equation.hedge
)
ident(
  int_ref hedge "solvingPolicy.ml" 300 9140 9156 "solvingPolicy.ml" 300 9140 9161
)
"solvingPolicy.ml" 303 9294 9316 "solvingPolicy.ml" 303 9294 9346
call(
  stack
)
type(
  Equation.transfer
)
"solvingPolicy.ml" 304 9350 9361 "solvingPolicy.ml" 304 9350 9367
type(
  'a0 Apron.Policy.t Boolexpr.t
)
ident(
  def policy "solvingPolicy.ml" 311 9530 9537 "solvingPolicy.ml" 312 9602 9615
)
"solvingPolicy.ml" 305 9370 9384 "solvingPolicy.ml" 305 9370 9392
type(
  Equation.transfer
)
ident(
  int_ref transfer "solvingPolicy.ml" 303 9294 9305 "solvingPolicy.ml" 303 9294 9313
)
"solvingPolicy.ml" 306 9398 9421 "solvingPolicy.ml" 306 9398 9425
type(
  Apron.Tcons1.earray Boolexpr.t
)
ident(
  def cond "solvingPolicy.ml" 307 9429 9435 "solvingPolicy.ml" 307 9429 9492
)
"solvingPolicy.ml" 306 9398 9402 "solvingPolicy.ml" 306 9398 9425
type(
  Equation.transfer
)
"solvingPolicy.ml" 307 9429 9435 "solvingPolicy.ml" 307 9429 9452
type(
  'a0 Apron.Policy.man ->
  'a0 policy option ->
  'a0 Apron.Abstract1.t ->
  Apron.Tcons1.earray Boolexpr.t ->
  'a0 Apron.Abstract1.t option -> 'a0 Apron.Policy.t Boolexpr.t
)
ident(
  int_ref improve_condition "solvingPolicy.ml" 146 4337 4341 "solvingPolicy.ml" 146 4337 4358
)
"solvingPolicy.ml" 307 9429 9453 "solvingPolicy.ml" 307 9429 9461
type(
  'a0 Apron.Policy.man
)
ident(
  int_ref pmanager "solvingPolicy.ml" 226 7044 7051 "solvingPolicy.ml" 226 7044 7059
)
"solvingPolicy.ml" 307 9429 9468 "solvingPolicy.ml" 307 9429 9477
type(
  'a0 policy
)
ident(
  int_ref oldpolicy "solvingPolicy.ml" 300 9140 9162 "solvingPolicy.ml" 300 9140 9171
)
"solvingPolicy.ml" 307 9429 9462 "solvingPolicy.ml" 307 9429 9478
type(
  'a0 policy option
)
"solvingPolicy.ml" 307 9429 9479 "solvingPolicy.ml" 307 9429 9482
type(
  'a0 Apron.Abstract1.t
)
ident(
  int_ref abs "solvingPolicy.ml" 302 9240 9251 "solvingPolicy.ml" 302 9240 9254
)
"solvingPolicy.ml" 307 9429 9483 "solvingPolicy.ml" 307 9429 9487
type(
  Apron.Tcons1.earray Boolexpr.t
)
ident(
  int_ref cond "solvingPolicy.ml" 306 9398 9421 "solvingPolicy.ml" 306 9398 9425
)
"solvingPolicy.ml" 307 9429 9488 "solvingPolicy.ml" 307 9429 9492
type(
  'a0 Apron.Abstract1.t option
)
"solvingPolicy.ml" 307 9429 9435 "solvingPolicy.ml" 307 9429 9492
call(
  stack
)
type(
  'a0 Apron.Policy.t Boolexpr.t
)
"solvingPolicy.ml" 308 9493 9497 "solvingPolicy.ml" 308 9493 9498
type(
  Equation.transfer
)
"solvingPolicy.ml" 308 9493 9502 "solvingPolicy.ml" 308 9493 9510
type(
  string -> 'a0 Apron.Policy.t Boolexpr.t
)
ident(
  ext_ref Pervasives.failwith
)
"solvingPolicy.ml" 308 9493 9511 "solvingPolicy.ml" 308 9493 9513
type(
  string
)
"solvingPolicy.ml" 308 9493 9502 "solvingPolicy.ml" 308 9493 9513
call(
  stack
)
type(
  'a0 Apron.Policy.t Boolexpr.t
)
"solvingPolicy.ml" 305 9370 9372 "solvingPolicy.ml" 309 9514 9519
type(
  'a0 Apron.Policy.t Boolexpr.t
)
"solvingPolicy.ml" 311 9530 9537 "solvingPolicy.ml" 311 9530 9541
type(
  bool ref
)
ident(
  int_ref loop "solvingPolicy.ml" 270 8349 8359 "solvingPolicy.ml" 270 8349 8363
)
"solvingPolicy.ml" 311 9530 9542 "solvingPolicy.ml" 311 9530 9544
type(
  bool ref -> bool -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"solvingPolicy.ml" 311 9530 9545 "solvingPolicy.ml" 311 9530 9546
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"solvingPolicy.ml" 311 9530 9546 "solvingPolicy.ml" 311 9530 9550
type(
  bool ref
)
ident(
  int_ref loop "solvingPolicy.ml" 270 8349 8359 "solvingPolicy.ml" 270 8349 8363
)
"solvingPolicy.ml" 311 9530 9545 "solvingPolicy.ml" 311 9530 9550
type(
  bool
)
"solvingPolicy.ml" 311 9530 9551 "solvingPolicy.ml" 311 9530 9553
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( || )
)
"solvingPolicy.ml" 311 9530 9555 "solvingPolicy.ml" 311 9530 9558
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"solvingPolicy.ml" 311 9530 9560 "solvingPolicy.ml" 311 9530 9572
type(
  'a0 Apron.Policy.man -> 'a0 policy -> 'a0 Apron.Policy.t Boolexpr.t -> bool
)
ident(
  int_ref policy_equal "solvingPolicy.ml" 13 302 306 "solvingPolicy.ml" 13 302 318
)
"solvingPolicy.ml" 311 9530 9573 "solvingPolicy.ml" 311 9530 9581
type(
  'a0 Apron.Policy.man
)
ident(
  int_ref pmanager "solvingPolicy.ml" 226 7044 7051 "solvingPolicy.ml" 226 7044 7059
)
"solvingPolicy.ml" 311 9530 9582 "solvingPolicy.ml" 311 9530 9591
type(
  'a0 policy
)
ident(
  int_ref oldpolicy "solvingPolicy.ml" 300 9140 9162 "solvingPolicy.ml" 300 9140 9171
)
"solvingPolicy.ml" 311 9530 9592 "solvingPolicy.ml" 311 9530 9598
type(
  'a0 Apron.Policy.t Boolexpr.t
)
ident(
  int_ref policy "solvingPolicy.ml" 304 9350 9361 "solvingPolicy.ml" 304 9350 9367
)
"solvingPolicy.ml" 311 9530 9559 "solvingPolicy.ml" 311 9530 9599
call(
  stack
)
type(
  bool
)
"solvingPolicy.ml" 311 9530 9554 "solvingPolicy.ml" 311 9530 9600
type(
  bool
)
"solvingPolicy.ml" 311 9530 9545 "solvingPolicy.ml" 311 9530 9600
type(
  bool
)
"solvingPolicy.ml" 311 9530 9537 "solvingPolicy.ml" 311 9530 9600
type(
  unit
)
"solvingPolicy.ml" 312 9602 9609 "solvingPolicy.ml" 312 9602 9615
type(
  'a0 policy
)
ident(
  int_ref policy "solvingPolicy.ml" 304 9350 9361 "solvingPolicy.ml" 304 9350 9367
)
"solvingPolicy.ml" 311 9530 9537 "solvingPolicy.ml" 312 9602 9615
type(
  'a0 policy
)
"solvingPolicy.ml" 304 9350 9357 "solvingPolicy.ml" 312 9602 9615
type(
  'a0 policy
)
"solvingPolicy.ml" 303 9294 9301 "solvingPolicy.ml" 312 9602 9615
type(
  'a0 policy
)
"solvingPolicy.ml" 302 9240 9247 "solvingPolicy.ml" 312 9602 9615
type(
  'a0 policy
)
"solvingPolicy.ml" 301 9175 9182 "solvingPolicy.ml" 312 9602 9615
type(
  'a0 policy
)
"solvingPolicy.ml" 300 9140 9145 "solvingPolicy.ml" 313 9616 9625
type(
  Equation.hedge -> 'a0 policy -> 'a0 policy
)
"solvingPolicy.ml" 314 9626 9631 "solvingPolicy.ml" 314 9626 9632
type(
  (Equation.hedge, 'a0 policy) Hashhe.t ref ->
  (Equation.hedge, 'a0 policy) Hashhe.t
)
ident(
  ext_ref Pervasives.( ! )
)
"solvingPolicy.ml" 314 9626 9632 "solvingPolicy.ml" 314 9626 9638
type(
  (Equation.hedge, 'a0 policy) Hashhe.t ref
)
ident(
  int_ref policy "solvingPolicy.ml" 262 8134 8144 "solvingPolicy.ml" 262 8134 8150
)
"solvingPolicy.ml" 314 9626 9631 "solvingPolicy.ml" 314 9626 9638
type(
  (Equation.hedge, 'a0 policy) Hashhe.t
)
"solvingPolicy.ml" 299 9126 9129 "solvingPolicy.ml" 314 9626 9638
call(
  stack
)
type(
  (Equation.hedge, 'a0 policy) Hashhe.t
)
"solvingPolicy.ml" 298 9115 9116 "solvingPolicy.ml" 314 9626 9638
type(
  unit
)
"solvingPolicy.ml" 317 9704 9705 "solvingPolicy.ml" 317 9704 9711
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref
)
ident(
  int_ref output "solvingPolicy.ml" 234 7289 7297 "solvingPolicy.ml" 234 7289 7303
)
"solvingPolicy.ml" 317 9704 9712 "solvingPolicy.ml" 317 9704 9714
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref ->
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"solvingPolicy.ml" 317 9704 9715 "solvingPolicy.ml" 317 9704 9716
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref ->
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option
)
ident(
  ext_ref Pervasives.( ! )
)
"solvingPolicy.ml" 317 9704 9716 "solvingPolicy.ml" 317 9704 9722
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref
)
ident(
  int_ref result "solvingPolicy.ml" 269 8318 8328 "solvingPolicy.ml" 269 8318 8334
)
"solvingPolicy.ml" 317 9704 9715 "solvingPolicy.ml" 317 9704 9722
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option
)
"solvingPolicy.ml" 317 9704 9705 "solvingPolicy.ml" 317 9704 9723
type(
  unit
)
"solvingPolicy.ml" 298 9115 9116 "solvingPolicy.ml" 317 9704 9723
type(
  unit
)
"solvingPolicy.ml" 297 9099 9100 "solvingPolicy.ml" 317 9704 9723
type(
  unit
)
"solvingPolicy.ml" 292 8929 8930 "solvingPolicy.ml" 317 9704 9723
type(
  unit
)
"solvingPolicy.ml" 290 8894 8895 "solvingPolicy.ml" 317 9704 9723
type(
  unit
)
"solvingPolicy.ml" 272 8399 8400 "solvingPolicy.ml" 317 9704 9723
type(
  unit
)
"solvingPolicy.ml" 271 8378 8384 "solvingPolicy.ml" 318 9724 9735
type(
  unit
)
"solvingPolicy.ml" 319 9737 9755 "solvingPolicy.ml" 319 9737 9756
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref ->
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option
)
ident(
  ext_ref Pervasives.( ! )
)
"solvingPolicy.ml" 319 9737 9756 "solvingPolicy.ml" 319 9737 9762
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref
)
ident(
  int_ref result "solvingPolicy.ml" 269 8318 8328 "solvingPolicy.ml" 269 8318 8334
)
"solvingPolicy.ml" 319 9737 9755 "solvingPolicy.ml" 319 9737 9762
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option
)
"solvingPolicy.ml" 320 9768 9781 "solvingPolicy.ml" 320 9768 9782
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output
)
ident(
  def x "solvingPolicy.ml" 320 9768 9786 "solvingPolicy.ml" 320 9768 9787
)
"solvingPolicy.ml" 320 9768 9776 "solvingPolicy.ml" 320 9768 9782
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option
)
"solvingPolicy.ml" 320 9768 9786 "solvingPolicy.ml" 320 9768 9787
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output
)
ident(
  int_ref x "solvingPolicy.ml" 320 9768 9781 "solvingPolicy.ml" 320 9768 9782
)
"solvingPolicy.ml" 321 9788 9796 "solvingPolicy.ml" 321 9788 9800
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option
)
"solvingPolicy.ml" 321 9788 9804 "solvingPolicy.ml" 321 9788 9812
type(
  string -> (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
)
ident(
  ext_ref Pervasives.failwith
)
"solvingPolicy.ml" 321 9788 9813 "solvingPolicy.ml" 321 9788 9815
type(
  string
)
"solvingPolicy.ml" 321 9788 9804 "solvingPolicy.ml" 321 9788 9815
call(
  tail
)
type(
  (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
)
"solvingPolicy.ml" 319 9737 9743 "solvingPolicy.ml" 322 9816 9825
type(
  (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
)
"solvingPolicy.ml" 271 8378 8384 "solvingPolicy.ml" 322 9816 9825
type(
  (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
)
"solvingPolicy.ml" 270 8349 8355 "solvingPolicy.ml" 322 9816 9825
type(
  (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
)
"solvingPolicy.ml" 269 8318 8324 "solvingPolicy.ml" 322 9816 9825
type(
  (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
)
"solvingPolicy.ml" 263 8190 8196 "solvingPolicy.ml" 322 9816 9825
type(
  (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
)
"solvingPolicy.ml" 262 8134 8140 "solvingPolicy.ml" 322 9816 9825
type(
  (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
)
"solvingPolicy.ml" 252 7877 7886 "solvingPolicy.ml" 323 9826 9833
type(
  (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
)
"solvingPolicy.ml" 249 7791 7795 "solvingPolicy.ml" 323 9826 9833
type(
  (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
)
"solvingPolicy.ml" 235 7320 7324 "solvingPolicy.ml" 323 9826 9833
type(
  (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
)
"solvingPolicy.ml" 234 7289 7293 "solvingPolicy.ml" 323 9826 9833
type(
  (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
)
"solvingPolicy.ml" 232 7250 7254 "solvingPolicy.ml" 323 9826 9833
type(
  (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
)
"solvingPolicy.ml" 231 7187 7191 "solvingPolicy.ml" 323 9826 9833
type(
  (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
)
type(
  (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
)
"solvingPolicy.ml" 337 10273 10279 "solvingPolicy.ml" 337 10273 10284
type(
  Equation.graph ->
  output:(Spl_syn.point, int, 'a Apron.Abstract1.t, unit) Fixpoint.output
         option ref ->
  policy:(Equation.hedge, 'a policy) Hashhe.t ref ->
  'a Apron.Policy.man ->
  int -> 'a Apron.Abstract1.t array -> unit * 'a Apron.Abstract1.t
)
ident(
  def apply "solvingPolicy.ml" 375 11655 11657 "solvingPolicy.ml" 487 14849 14852
)
"solvingPolicy.ml" 338 10285 10290 "solvingPolicy.ml" 338 10285 10295
type(
  Equation.graph
)
ident(
  def graph "solvingPolicy.ml" 339 10312 10316 "solvingPolicy.ml" 372 11562 11574
)
"solvingPolicy.ml" 339 10312 10318 "solvingPolicy.ml" 339 10312 10324
type(
  (Spl_syn.point, int, 'a Apron.Abstract1.t, unit) Fixpoint.output option ref
)
ident(
  def output "solvingPolicy.ml" 340 10404 10408 "solvingPolicy.ml" 372 11562 11574
)
"solvingPolicy.ml" 340 10404 10410 "solvingPolicy.ml" 340 10404 10416
type(
  (Equation.hedge, 'a policy) Hashhe.t ref
)
ident(
  def policy "solvingPolicy.ml" 341 10459 10463 "solvingPolicy.ml" 372 11562 11574
)
"solvingPolicy.ml" 341 10459 10464 "solvingPolicy.ml" 341 10459 10472
type(
  'a Apron.Policy.man
)
ident(
  def pmanager "solvingPolicy.ml" 342 10494 10498 "solvingPolicy.ml" 372 11562 11574
)
"solvingPolicy.ml" 342 10494 10499 "solvingPolicy.ml" 342 10494 10504
type(
  int
)
ident(
  def hedge "solvingPolicy.ml" 343 10510 10514 "solvingPolicy.ml" 372 11562 11574
)
"solvingPolicy.ml" 343 10510 10515 "solvingPolicy.ml" 343 10510 10519
type(
  'a Apron.Abstract1.t array
)
ident(
  def tabs "solvingPolicy.ml" 344 10548 10552 "solvingPolicy.ml" 372 11562 11574
)
"solvingPolicy.ml" 347 10592 10600 "solvingPolicy.ml" 347 10592 10607
type(
  'a Apron.Manager.t
)
ident(
  def manager "solvingPolicy.ml" 348 10655 10659 "solvingPolicy.ml" 372 11562 11574
)
"solvingPolicy.ml" 347 10592 10610 "solvingPolicy.ml" 347 10592 10642
type(
  'a Apron.Policy.man -> 'a Apron.Manager.t
)
ident(
  ext_ref Apron.Policy.manager_get_manager
)
"solvingPolicy.ml" 347 10592 10643 "solvingPolicy.ml" 347 10592 10651
type(
  'a Apron.Policy.man
)
ident(
  int_ref pmanager "solvingPolicy.ml" 341 10459 10464 "solvingPolicy.ml" 341 10459 10472
)
"solvingPolicy.ml" 347 10592 10610 "solvingPolicy.ml" 347 10592 10651
type(
  'a Apron.Manager.t
)
"solvingPolicy.ml" 348 10655 10663 "solvingPolicy.ml" 348 10655 10671
type(
  Equation.transfer
)
ident(
  def transfer "solvingPolicy.ml" 349 10708 10712 "solvingPolicy.ml" 372 11562 11574
)
"solvingPolicy.ml" 348 10655 10674 "solvingPolicy.ml" 348 10655 10692
type(
  Equation.graph -> Equation.hedge -> Equation.transfer
)
ident(
  ext_ref PSHGraph.attrhedge
)
"solvingPolicy.ml" 348 10655 10693 "solvingPolicy.ml" 348 10655 10698
type(
  Equation.graph
)
ident(
  int_ref graph "solvingPolicy.ml" 338 10285 10290 "solvingPolicy.ml" 338 10285 10295
)
"solvingPolicy.ml" 348 10655 10699 "solvingPolicy.ml" 348 10655 10704
type(
  Equation.hedge
)
ident(
  int_ref hedge "solvingPolicy.ml" 342 10494 10499 "solvingPolicy.ml" 342 10494 10504
)
"solvingPolicy.ml" 348 10655 10674 "solvingPolicy.ml" 348 10655 10704
call(
  stack
)
type(
  Equation.transfer
)
"solvingPolicy.ml" 349 10708 10716 "solvingPolicy.ml" 349 10708 10719
type(
  'a Apron.Abstract1.t
)
ident(
  def abs "solvingPolicy.ml" 350 10734 10738 "solvingPolicy.ml" 372 11562 11574
)
"solvingPolicy.ml" 349 10708 10722 "solvingPolicy.ml" 349 10708 10726
type(
  'a Apron.Abstract1.t array
)
ident(
  int_ref tabs "solvingPolicy.ml" 343 10510 10515 "solvingPolicy.ml" 343 10510 10519
)
"solvingPolicy.ml" 349 10708 10728 "solvingPolicy.ml" 349 10708 10729
type(
  int
)
"solvingPolicy.ml" 349 10708 10722 "solvingPolicy.ml" 349 10708 10730
type(
  'a Apron.Abstract1.t
)
"solvingPolicy.ml" 350 10734 10742 "solvingPolicy.ml" 350 10734 10746
type(
  'a Apron.Abstract1.t option
)
ident(
  def dest "solvingPolicy.ml" 358 10972 10976 "solvingPolicy.ml" 372 11562 11574
)
"solvingPolicy.ml" 350 10734 10755 "solvingPolicy.ml" 350 10734 10756
type(
  (Equation.vertex, int, 'a Apron.Abstract1.t, unit) Fixpoint.output option
  ref ->
  (Equation.vertex, int, 'a Apron.Abstract1.t, unit) Fixpoint.output option
)
ident(
  ext_ref Pervasives.( ! )
)
"solvingPolicy.ml" 350 10734 10756 "solvingPolicy.ml" 350 10734 10762
type(
  (Equation.vertex, int, 'a Apron.Abstract1.t, unit) Fixpoint.output option
  ref
)
ident(
  int_ref output "solvingPolicy.ml" 339 10312 10318 "solvingPolicy.ml" 339 10312 10324
)
"solvingPolicy.ml" 350 10734 10755 "solvingPolicy.ml" 350 10734 10762
type(
  (Equation.vertex, int, 'a Apron.Abstract1.t, unit) Fixpoint.output option
)
"solvingPolicy.ml" 351 10768 10776 "solvingPolicy.ml" 351 10768 10780
type(
  (Equation.vertex, int, 'a Apron.Abstract1.t, unit) Fixpoint.output option
)
"solvingPolicy.ml" 351 10768 10784 "solvingPolicy.ml" 351 10768 10788
type(
  'a Apron.Abstract1.t option
)
"solvingPolicy.ml" 352 10789 10802 "solvingPolicy.ml" 352 10789 10808
ident(
  def output "solvingPolicy.ml" 353 10813 10816 "solvingPolicy.ml" 356 10952 10964
)
"solvingPolicy.ml" 352 10789 10801 "solvingPolicy.ml" 352 10789 10809
type(
  (Equation.vertex, int, 'a Apron.Abstract1.t, unit) Fixpoint.output
)
"solvingPolicy.ml" 352 10789 10797 "solvingPolicy.ml" 352 10789 10809
type(
  (Equation.vertex, int, 'a Apron.Abstract1.t, unit) Fixpoint.output option
)
"solvingPolicy.ml" 353 10813 10820 "solvingPolicy.ml" 353 10813 10825
type(
  Equation.vertex array
)
ident(
  def tdest "solvingPolicy.ml" 354 10863 10866 "solvingPolicy.ml" 356 10952 10964
)
"solvingPolicy.ml" 353 10813 10828 "solvingPolicy.ml" 353 10813 10847
type(
  Equation.graph -> Equation.hedge -> Equation.vertex array
)
ident(
  ext_ref PSHGraph.succvertex
)
"solvingPolicy.ml" 353 10813 10848 "solvingPolicy.ml" 353 10813 10853
type(
  Equation.graph
)
ident(
  int_ref graph "solvingPolicy.ml" 338 10285 10290 "solvingPolicy.ml" 338 10285 10295
)
"solvingPolicy.ml" 353 10813 10854 "solvingPolicy.ml" 353 10813 10859
type(
  Equation.hedge
)
ident(
  int_ref hedge "solvingPolicy.ml" 342 10494 10499 "solvingPolicy.ml" 342 10494 10504
)
"solvingPolicy.ml" 353 10813 10828 "solvingPolicy.ml" 353 10813 10859
call(
  stack
)
type(
  Equation.vertex array
)
"solvingPolicy.ml" 354 10863 10873 "solvingPolicy.ml" 354 10863 10885
type(
  Equation.vertex array -> int
)
ident(
  ext_ref Array.length
)
"solvingPolicy.ml" 354 10863 10886 "solvingPolicy.ml" 354 10863 10891
type(
  Equation.vertex array
)
ident(
  int_ref tdest "solvingPolicy.ml" 353 10813 10820 "solvingPolicy.ml" 353 10813 10825
)
"solvingPolicy.ml" 354 10863 10873 "solvingPolicy.ml" 354 10863 10891
type(
  int
)
"solvingPolicy.ml" 354 10863 10892 "solvingPolicy.ml" 354 10863 10893
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"solvingPolicy.ml" 354 10863 10894 "solvingPolicy.ml" 354 10863 10895
type(
  int
)
"solvingPolicy.ml" 354 10863 10872 "solvingPolicy.ml" 354 10863 10896
type(
  bool
)
"solvingPolicy.ml" 354 10863 10866 "solvingPolicy.ml" 354 10863 10896
type(
  unit
)
"solvingPolicy.ml" 355 10898 10905 "solvingPolicy.ml" 355 10898 10909
type(
  'a Apron.Abstract1.t
)
ident(
  def dest "solvingPolicy.ml" 356 10952 10955 "solvingPolicy.ml" 356 10952 10964
)
"solvingPolicy.ml" 355 10898 10912 "solvingPolicy.ml" 355 10898 10931
type(
  (Equation.vertex, int, 'a Apron.Abstract1.t, unit) Fixpoint.output ->
  Equation.vertex -> 'a Apron.Abstract1.t
)
ident(
  ext_ref PSHGraph.attrvertex
)
"solvingPolicy.ml" 355 10898 10932 "solvingPolicy.ml" 355 10898 10938
type(
  (Equation.vertex, int, 'a Apron.Abstract1.t, unit) Fixpoint.output
)
ident(
  int_ref output "solvingPolicy.ml" 352 10789 10801 "solvingPolicy.ml" 352 10789 10809
)
"solvingPolicy.ml" 355 10898 10939 "solvingPolicy.ml" 355 10898 10944
type(
  Equation.vertex array
)
ident(
  int_ref tdest "solvingPolicy.ml" 353 10813 10820 "solvingPolicy.ml" 353 10813 10825
)
"solvingPolicy.ml" 355 10898 10946 "solvingPolicy.ml" 355 10898 10947
type(
  int
)
"solvingPolicy.ml" 355 10898 10939 "solvingPolicy.ml" 355 10898 10948
type(
  Equation.vertex
)
"solvingPolicy.ml" 355 10898 10912 "solvingPolicy.ml" 355 10898 10948
call(
  stack
)
type(
  'a Apron.Abstract1.t
)
"solvingPolicy.ml" 356 10952 10960 "solvingPolicy.ml" 356 10952 10964
type(
  'a Apron.Abstract1.t
)
ident(
  int_ref dest "solvingPolicy.ml" 355 10898 10905 "solvingPolicy.ml" 355 10898 10909
)
"solvingPolicy.ml" 356 10952 10955 "solvingPolicy.ml" 356 10952 10964
type(
  'a Apron.Abstract1.t option
)
"solvingPolicy.ml" 355 10898 10901 "solvingPolicy.ml" 356 10952 10964
type(
  'a Apron.Abstract1.t option
)
"solvingPolicy.ml" 354 10863 10866 "solvingPolicy.ml" 356 10952 10964
type(
  'a Apron.Abstract1.t option
)
"solvingPolicy.ml" 353 10813 10816 "solvingPolicy.ml" 356 10952 10964
type(
  'a Apron.Abstract1.t option
)
"solvingPolicy.ml" 350 10734 10749 "solvingPolicy.ml" 356 10952 10964
type(
  'a Apron.Abstract1.t option
)
"solvingPolicy.ml" 358 10972 10980 "solvingPolicy.ml" 358 10972 10983
type(
  'a Apron.Abstract1.t
)
ident(
  def res "solvingPolicy.ml" 372 11562 11566 "solvingPolicy.ml" 372 11562 11574
)
"solvingPolicy.ml" 359 10986 10998 "solvingPolicy.ml" 359 10986 11006
type(
  Equation.transfer
)
ident(
  int_ref transfer "solvingPolicy.ml" 348 10655 10663 "solvingPolicy.ml" 348 10655 10671
)
"solvingPolicy.ml" 360 11012 11037 "solvingPolicy.ml" 360 11012 11040
type(
  Apron.Var.t
)
ident(
  def var "solvingPolicy.ml" 361 11050 11053 "solvingPolicy.ml" 361 11050 11109
)
"solvingPolicy.ml" 360 11012 11041 "solvingPolicy.ml" 360 11012 11045
type(
  Apron.Texpr1.t
)
ident(
  def expr "solvingPolicy.ml" 361 11050 11053 "solvingPolicy.ml" 361 11050 11109
)
"solvingPolicy.ml" 360 11012 11020 "solvingPolicy.ml" 360 11012 11046
type(
  Equation.transfer
)
"solvingPolicy.ml" 361 11050 11053 "solvingPolicy.ml" 361 11050 11083
type(
  'a Apron.Manager.t ->
  'a Apron.Abstract1.t ->
  Apron.Var.t ->
  Apron.Texpr1.t -> 'a Apron.Abstract1.t option -> 'a Apron.Abstract1.t
)
ident(
  ext_ref Solving.Backward.apply_tassign
)
"solvingPolicy.ml" 361 11050 11084 "solvingPolicy.ml" 361 11050 11091
type(
  'a Apron.Manager.t
)
ident(
  int_ref manager "solvingPolicy.ml" 347 10592 10600 "solvingPolicy.ml" 347 10592 10607
)
"solvingPolicy.ml" 361 11050 11092 "solvingPolicy.ml" 361 11050 11095
type(
  'a Apron.Abstract1.t
)
ident(
  int_ref abs "solvingPolicy.ml" 349 10708 10716 "solvingPolicy.ml" 349 10708 10719
)
"solvingPolicy.ml" 361 11050 11096 "solvingPolicy.ml" 361 11050 11099
type(
  Apron.Var.t
)
ident(
  int_ref var "solvingPolicy.ml" 360 11012 11037 "solvingPolicy.ml" 360 11012 11040
)
"solvingPolicy.ml" 361 11050 11100 "solvingPolicy.ml" 361 11050 11104
type(
  Apron.Texpr1.t
)
ident(
  int_ref expr "solvingPolicy.ml" 360 11012 11041 "solvingPolicy.ml" 360 11012 11045
)
"solvingPolicy.ml" 361 11050 11105 "solvingPolicy.ml" 361 11050 11109
type(
  'a Apron.Abstract1.t option
)
ident(
  int_ref dest "solvingPolicy.ml" 350 10734 10742 "solvingPolicy.ml" 350 10734 10746
)
"solvingPolicy.ml" 361 11050 11053 "solvingPolicy.ml" 361 11050 11109
call(
  stack
)
type(
  'a Apron.Abstract1.t
)
"solvingPolicy.ml" 362 11110 11135 "solvingPolicy.ml" 362 11110 11136
type(
  Apron.Linexpr1.t
)
type(
  Apron.Var.t
)
"solvingPolicy.ml" 362 11110 11118 "solvingPolicy.ml" 362 11110 11136
type(
  Equation.transfer
)
"solvingPolicy.ml" 363 11140 11143 "solvingPolicy.ml" 363 11140 11151
type(
  string -> 'a Apron.Abstract1.t
)
ident(
  ext_ref Pervasives.failwith
)
"solvingPolicy.ml" 363 11140 11152 "solvingPolicy.ml" 363 11140 11154
type(
  string
)
"solvingPolicy.ml" 363 11140 11143 "solvingPolicy.ml" 363 11140 11154
call(
  stack
)
type(
  'a Apron.Abstract1.t
)
"solvingPolicy.ml" 364 11155 11182 "solvingPolicy.ml" 364 11155 11186
type(
  Apron.Tcons1.earray Boolexpr.t
)
ident(
  def cond "solvingPolicy.ml" 365 11190 11193 "solvingPolicy.ml" 366 11235 11283
)
"solvingPolicy.ml" 364 11155 11163 "solvingPolicy.ml" 364 11155 11186
type(
  Equation.transfer
)
"solvingPolicy.ml" 365 11190 11197 "solvingPolicy.ml" 365 11190 11203
type(
  'a policy
)
ident(
  def policy "solvingPolicy.ml" 366 11235 11238 "solvingPolicy.ml" 366 11235 11283
)
"solvingPolicy.ml" 365 11190 11206 "solvingPolicy.ml" 365 11190 11217
type(
  (Equation.hedge, 'a policy) Hashhe.t -> Equation.hedge -> 'a policy
)
ident(
  ext_ref Hashhe.find
)
"solvingPolicy.ml" 365 11190 11218 "solvingPolicy.ml" 365 11190 11219
type(
  (Equation.hedge, 'a policy) Hashhe.t ref ->
  (Equation.hedge, 'a policy) Hashhe.t
)
ident(
  ext_ref Pervasives.( ! )
)
"solvingPolicy.ml" 365 11190 11219 "solvingPolicy.ml" 365 11190 11225
type(
  (Equation.hedge, 'a policy) Hashhe.t ref
)
ident(
  int_ref policy "solvingPolicy.ml" 340 10404 10410 "solvingPolicy.ml" 340 10404 10416
)
"solvingPolicy.ml" 365 11190 11218 "solvingPolicy.ml" 365 11190 11225
type(
  (Equation.hedge, 'a policy) Hashhe.t
)
"solvingPolicy.ml" 365 11190 11226 "solvingPolicy.ml" 365 11190 11231
type(
  Equation.hedge
)
ident(
  int_ref hedge "solvingPolicy.ml" 342 10494 10499 "solvingPolicy.ml" 342 10494 10504
)
"solvingPolicy.ml" 365 11190 11206 "solvingPolicy.ml" 365 11190 11231
call(
  stack
)
type(
  'a policy
)
"solvingPolicy.ml" 366 11235 11238 "solvingPolicy.ml" 366 11235 11253
type(
  'a Apron.Policy.man ->
  'a policy ->
  'a Apron.Abstract1.t ->
  Apron.Tcons1.earray Boolexpr.t ->
  'a Apron.Abstract1.t option -> 'a Apron.Abstract1.t
)
ident(
  int_ref apply_condition "solvingPolicy.ml" 111 3392 3396 "solvingPolicy.ml" 111 3392 3411
)
"solvingPolicy.ml" 366 11235 11254 "solvingPolicy.ml" 366 11235 11262
type(
  'a Apron.Policy.man
)
ident(
  int_ref pmanager "solvingPolicy.ml" 341 10459 10464 "solvingPolicy.ml" 341 10459 10472
)
"solvingPolicy.ml" 366 11235 11263 "solvingPolicy.ml" 366 11235 11269
type(
  'a policy
)
ident(
  int_ref policy "solvingPolicy.ml" 365 11190 11197 "solvingPolicy.ml" 365 11190 11203
)
"solvingPolicy.ml" 366 11235 11270 "solvingPolicy.ml" 366 11235 11273
type(
  'a Apron.Abstract1.t
)
ident(
  int_ref abs "solvingPolicy.ml" 349 10708 10716 "solvingPolicy.ml" 349 10708 10719
)
"solvingPolicy.ml" 366 11235 11274 "solvingPolicy.ml" 366 11235 11278
type(
  Apron.Tcons1.earray Boolexpr.t
)
ident(
  int_ref cond "solvingPolicy.ml" 364 11155 11182 "solvingPolicy.ml" 364 11155 11186
)
"solvingPolicy.ml" 366 11235 11279 "solvingPolicy.ml" 366 11235 11283
type(
  'a Apron.Abstract1.t option
)
ident(
  int_ref dest "solvingPolicy.ml" 350 10734 10742 "solvingPolicy.ml" 350 10734 10746
)
"solvingPolicy.ml" 366 11235 11238 "solvingPolicy.ml" 366 11235 11283
call(
  stack
)
type(
  'a Apron.Abstract1.t
)
"solvingPolicy.ml" 365 11190 11193 "solvingPolicy.ml" 366 11235 11283
type(
  'a Apron.Abstract1.t
)
"solvingPolicy.ml" 367 11284 11306 "solvingPolicy.ml" 367 11284 11316
type(
  Equation.procinfo
)
ident(
  def callerinfo "solvingPolicy.ml" 368 11341 11344 "solvingPolicy.ml" 368 11341 11414
)
"solvingPolicy.ml" 367 11284 11317 "solvingPolicy.ml" 367 11284 11327
type(
  Equation.procinfo
)
ident(
  def calleeinfo "solvingPolicy.ml" 368 11341 11344 "solvingPolicy.ml" 368 11341 11414
)
"solvingPolicy.ml" 367 11284 11328 "solvingPolicy.ml" 367 11284 11331
type(
  Apron.Var.t array
)
ident(
  def tin "solvingPolicy.ml" 368 11341 11344 "solvingPolicy.ml" 368 11341 11414
)
"solvingPolicy.ml" 367 11284 11332 "solvingPolicy.ml" 367 11284 11336
type(
  Apron.Var.t array
)
ident(
  def tout "solvingPolicy.ml" 368 11341 11344 "solvingPolicy.ml" 368 11341 11414
)
"solvingPolicy.ml" 367 11284 11292 "solvingPolicy.ml" 367 11284 11337
type(
  Equation.transfer
)
"solvingPolicy.ml" 368 11341 11344 "solvingPolicy.ml" 368 11341 11371
type(
  'a Apron.Manager.t ->
  'a Apron.Abstract1.t ->
  Equation.procinfo ->
  Equation.procinfo ->
  Apron.Var.t array -> 'a Apron.Abstract1.t option -> 'a Apron.Abstract1.t
)
ident(
  ext_ref Solving.Backward.apply_call
)
"solvingPolicy.ml" 368 11341 11372 "solvingPolicy.ml" 368 11341 11379
type(
  'a Apron.Manager.t
)
ident(
  int_ref manager "solvingPolicy.ml" 347 10592 10600 "solvingPolicy.ml" 347 10592 10607
)
"solvingPolicy.ml" 368 11341 11380 "solvingPolicy.ml" 368 11341 11383
type(
  'a Apron.Abstract1.t
)
ident(
  int_ref abs "solvingPolicy.ml" 349 10708 10716 "solvingPolicy.ml" 349 10708 10719
)
"solvingPolicy.ml" 368 11341 11384 "solvingPolicy.ml" 368 11341 11394
type(
  Equation.procinfo
)
ident(
  int_ref callerinfo "solvingPolicy.ml" 367 11284 11306 "solvingPolicy.ml" 367 11284 11316
)
"solvingPolicy.ml" 368 11341 11395 "solvingPolicy.ml" 368 11341 11405
type(
  Equation.procinfo
)
ident(
  int_ref calleeinfo "solvingPolicy.ml" 367 11284 11317 "solvingPolicy.ml" 367 11284 11327
)
"solvingPolicy.ml" 368 11341 11406 "solvingPolicy.ml" 368 11341 11409
type(
  Apron.Var.t array
)
ident(
  int_ref tin "solvingPolicy.ml" 367 11284 11328 "solvingPolicy.ml" 367 11284 11331
)
"solvingPolicy.ml" 368 11341 11410 "solvingPolicy.ml" 368 11341 11414
type(
  'a Apron.Abstract1.t option
)
ident(
  int_ref dest "solvingPolicy.ml" 350 10734 10742 "solvingPolicy.ml" 350 10734 10746
)
"solvingPolicy.ml" 368 11341 11344 "solvingPolicy.ml" 368 11341 11414
call(
  stack
)
type(
  'a Apron.Abstract1.t
)
"solvingPolicy.ml" 369 11415 11439 "solvingPolicy.ml" 369 11415 11449
type(
  Equation.procinfo
)
ident(
  def callerinfo "solvingPolicy.ml" 370 11474 11477 "solvingPolicy.ml" 370 11474 11554
)
"solvingPolicy.ml" 369 11415 11450 "solvingPolicy.ml" 369 11415 11460
type(
  Equation.procinfo
)
ident(
  def calleeinfo "solvingPolicy.ml" 370 11474 11477 "solvingPolicy.ml" 370 11474 11554
)
"solvingPolicy.ml" 369 11415 11461 "solvingPolicy.ml" 369 11415 11464
type(
  Apron.Var.t array
)
ident(
  def tin "solvingPolicy.ml" 370 11474 11477 "solvingPolicy.ml" 370 11474 11554
)
"solvingPolicy.ml" 369 11415 11465 "solvingPolicy.ml" 369 11415 11469
type(
  Apron.Var.t array
)
ident(
  def tout "solvingPolicy.ml" 370 11474 11477 "solvingPolicy.ml" 370 11474 11554
)
"solvingPolicy.ml" 369 11415 11423 "solvingPolicy.ml" 369 11415 11470
type(
  Equation.transfer
)
"solvingPolicy.ml" 370 11474 11477 "solvingPolicy.ml" 370 11474 11506
type(
  'a Apron.Manager.t ->
  'a Apron.Abstract1.t ->
  Equation.procinfo ->
  Equation.procinfo ->
  Apron.Var.t array ->
  Apron.Var.t array -> 'a Apron.Abstract1.t option -> 'a Apron.Abstract1.t
)
ident(
  ext_ref Solving.Backward.apply_return
)
"solvingPolicy.ml" 370 11474 11507 "solvingPolicy.ml" 370 11474 11514
type(
  'a Apron.Manager.t
)
ident(
  int_ref manager "solvingPolicy.ml" 347 10592 10600 "solvingPolicy.ml" 347 10592 10607
)
"solvingPolicy.ml" 370 11474 11515 "solvingPolicy.ml" 370 11474 11518
type(
  'a Apron.Abstract1.t
)
ident(
  int_ref abs "solvingPolicy.ml" 349 10708 10716 "solvingPolicy.ml" 349 10708 10719
)
"solvingPolicy.ml" 370 11474 11519 "solvingPolicy.ml" 370 11474 11529
type(
  Equation.procinfo
)
ident(
  int_ref callerinfo "solvingPolicy.ml" 369 11415 11439 "solvingPolicy.ml" 369 11415 11449
)
"solvingPolicy.ml" 370 11474 11530 "solvingPolicy.ml" 370 11474 11540
type(
  Equation.procinfo
)
ident(
  int_ref calleeinfo "solvingPolicy.ml" 369 11415 11450 "solvingPolicy.ml" 369 11415 11460
)
"solvingPolicy.ml" 370 11474 11541 "solvingPolicy.ml" 370 11474 11544
type(
  Apron.Var.t array
)
ident(
  int_ref tin "solvingPolicy.ml" 369 11415 11461 "solvingPolicy.ml" 369 11415 11464
)
"solvingPolicy.ml" 370 11474 11545 "solvingPolicy.ml" 370 11474 11549
type(
  Apron.Var.t array
)
ident(
  int_ref tout "solvingPolicy.ml" 369 11415 11465 "solvingPolicy.ml" 369 11415 11469
)
"solvingPolicy.ml" 370 11474 11550 "solvingPolicy.ml" 370 11474 11554
type(
  'a Apron.Abstract1.t option
)
ident(
  int_ref dest "solvingPolicy.ml" 350 10734 10742 "solvingPolicy.ml" 350 10734 10746
)
"solvingPolicy.ml" 370 11474 11477 "solvingPolicy.ml" 370 11474 11554
call(
  stack
)
type(
  'a Apron.Abstract1.t
)
"solvingPolicy.ml" 359 10986 10992 "solvingPolicy.ml" 370 11474 11554
type(
  'a Apron.Abstract1.t
)
"solvingPolicy.ml" 372 11562 11567 "solvingPolicy.ml" 372 11562 11569
type(
  unit
)
"solvingPolicy.ml" 372 11562 11570 "solvingPolicy.ml" 372 11562 11573
type(
  'a Apron.Abstract1.t
)
ident(
  int_ref res "solvingPolicy.ml" 358 10972 10980 "solvingPolicy.ml" 358 10972 10983
)
"solvingPolicy.ml" 372 11562 11566 "solvingPolicy.ml" 372 11562 11574
type(
  unit * 'a Apron.Abstract1.t
)
"solvingPolicy.ml" 358 10972 10976 "solvingPolicy.ml" 372 11562 11574
type(
  unit * 'a Apron.Abstract1.t
)
"solvingPolicy.ml" 350 10734 10738 "solvingPolicy.ml" 372 11562 11574
type(
  unit * 'a Apron.Abstract1.t
)
"solvingPolicy.ml" 349 10708 10712 "solvingPolicy.ml" 372 11562 11574
type(
  unit * 'a Apron.Abstract1.t
)
"solvingPolicy.ml" 348 10655 10659 "solvingPolicy.ml" 372 11562 11574
type(
  unit * 'a Apron.Abstract1.t
)
"solvingPolicy.ml" 347 10592 10596 "solvingPolicy.ml" 372 11562 11574
type(
  unit * 'a Apron.Abstract1.t
)
type(
  unit * 'a Apron.Abstract1.t
)
"solvingPolicy.ml" 378 11771 11777 "solvingPolicy.ml" 378 11771 11784
type(
  fmt:Format.formatter ->
  Spl_syn.program ->
  Equation.graph ->
  output:(Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
         option ->
  'a0 Apron.Policy.man ->
  debug:int ->
  (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
)
ident(
  def compute "solvingPolicy.ml" 486 14841 14848 "solvingPolicy.ml" 487 14849 14852
)
"solvingPolicy.ml" 379 11785 11793 "solvingPolicy.ml" 379 11785 11796
type(
  Format.formatter
)
ident(
  def fmt "solvingPolicy.ml" 380 11817 11823 "solvingPolicy.ml" 486 14841 14848
)
"solvingPolicy.ml" 380 11817 11824 "solvingPolicy.ml" 380 11817 11828
type(
  Spl_syn.program
)
ident(
  def prog "solvingPolicy.ml" 381 11846 11852 "solvingPolicy.ml" 486 14841 14848
)
"solvingPolicy.ml" 381 11846 11853 "solvingPolicy.ml" 381 11846 11858
type(
  Equation.graph
)
ident(
  def graph "solvingPolicy.ml" 382 11875 11881 "solvingPolicy.ml" 486 14841 14848
)
"solvingPolicy.ml" 382 11875 11883 "solvingPolicy.ml" 382 11875 11889
type(
  (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output option
)
ident(
  def output "solvingPolicy.ml" 383 11965 11971 "solvingPolicy.ml" 486 14841 14848
)
"solvingPolicy.ml" 383 11965 11972 "solvingPolicy.ml" 383 11965 11980
type(
  'a0 Apron.Policy.man
)
ident(
  def pmanager "solvingPolicy.ml" 384 12002 12008 "solvingPolicy.ml" 486 14841 14848
)
"solvingPolicy.ml" 384 12002 12010 "solvingPolicy.ml" 384 12002 12015
type(
  int
)
ident(
  def debug "solvingPolicy.ml" 385 12021 12027 "solvingPolicy.ml" 486 14841 14848
)
"solvingPolicy.ml" 388 12108 12116 "solvingPolicy.ml" 388 12108 12123
type(
  'a0 Apron.Manager.t
)
ident(
  def manager "solvingPolicy.ml" 389 12171 12175 "solvingPolicy.ml" 486 14841 14848
)
"solvingPolicy.ml" 388 12108 12126 "solvingPolicy.ml" 388 12108 12158
type(
  'a0 Apron.Policy.man -> 'a0 Apron.Manager.t
)
ident(
  ext_ref Apron.Policy.manager_get_manager
)
"solvingPolicy.ml" 388 12108 12159 "solvingPolicy.ml" 388 12108 12167
type(
  'a0 Apron.Policy.man
)
ident(
  int_ref pmanager "solvingPolicy.ml" 383 11965 11972 "solvingPolicy.ml" 383 11965 11980
)
"solvingPolicy.ml" 388 12108 12126 "solvingPolicy.ml" 388 12108 12167
type(
  'a0 Apron.Manager.t
)
"solvingPolicy.ml" 389 12171 12179 "solvingPolicy.ml" 389 12171 12183
type(
  Equation.info
)
ident(
  def info "solvingPolicy.ml" 391 12210 12214 "solvingPolicy.ml" 486 14841 14848
)
"solvingPolicy.ml" 389 12171 12186 "solvingPolicy.ml" 389 12171 12199
type(
  Equation.graph -> Equation.info
)
ident(
  ext_ref PSHGraph.info
)
"solvingPolicy.ml" 389 12171 12200 "solvingPolicy.ml" 389 12171 12205
type(
  Equation.graph
)
ident(
  int_ref graph "solvingPolicy.ml" 381 11846 11853 "solvingPolicy.ml" 381 11846 11858
)
"solvingPolicy.ml" 389 12171 12186 "solvingPolicy.ml" 389 12171 12205
call(
  stack
)
type(
  Equation.info
)
"solvingPolicy.ml" 391 12210 12218 "solvingPolicy.ml" 391 12210 12224
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref
)
ident(
  def output "solvingPolicy.ml" 392 12241 12245 "solvingPolicy.ml" 486 14841 14848
)
"solvingPolicy.ml" 391 12210 12227 "solvingPolicy.ml" 391 12210 12230
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ->
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref
)
ident(
  ext_ref Pervasives.ref
)
"solvingPolicy.ml" 391 12210 12231 "solvingPolicy.ml" 391 12210 12237
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option
)
ident(
  int_ref output "solvingPolicy.ml" 382 11875 11883 "solvingPolicy.ml" 382 11875 11889
)
"solvingPolicy.ml" 391 12210 12227 "solvingPolicy.ml" 391 12210 12237
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref
)
"solvingPolicy.ml" 392 12241 12249 "solvingPolicy.ml" 392 12241 12255
type(
  Equation.vertex PSette.t ref
)
ident(
  def sstart "solvingPolicy.ml" 393 12303 12307 "solvingPolicy.ml" 486 14841 14848
)
"solvingPolicy.ml" 392 12241 12258 "solvingPolicy.ml" 392 12241 12261
type(
  Equation.vertex PSette.t -> Equation.vertex PSette.t ref
)
ident(
  ext_ref Pervasives.ref
)
"solvingPolicy.ml" 392 12241 12263 "solvingPolicy.ml" 392 12241 12275
type(
  (Equation.vertex -> Equation.vertex -> int) -> Equation.vertex PSette.t
)
ident(
  ext_ref PSette.empty
)
"solvingPolicy.ml" 392 12241 12276 "solvingPolicy.ml" 392 12241 12298
type(
  Equation.vertex -> Equation.vertex -> int
)
ident(
  ext_ref Equation.compare_point
)
"solvingPolicy.ml" 392 12241 12262 "solvingPolicy.ml" 392 12241 12299
call(
  stack
)
type(
  Equation.vertex PSette.t
)
"solvingPolicy.ml" 392 12241 12258 "solvingPolicy.ml" 392 12241 12299
type(
  Equation.vertex PSette.t ref
)
"solvingPolicy.ml" 393 12303 12307 "solvingPolicy.ml" 393 12303 12316
type(
  (Spl_syn.procedure -> unit) -> Spl_syn.procedure list -> unit
)
ident(
  ext_ref List.iter
)
"solvingPolicy.ml" 394 12317 12334 "solvingPolicy.ml" 394 12317 12343
type(
  Spl_syn.procedure
)
ident(
  def procedure "solvingPolicy.ml" 395 12347 12348 "solvingPolicy.ml" 408 12730 12757
)
"solvingPolicy.ml" 395 12347 12348 "solvingPolicy.ml" 395 12347 12369
type(
  (Equation.vertex * Spl_syn.instr -> unit) -> Spl_syn.block -> unit
)
ident(
  ext_ref Spl_syn.iter_eltinstr
)
"solvingPolicy.ml" 396 12370 12385 "solvingPolicy.ml" 396 12370 12391
type(
  Equation.vertex
)
ident(
  def bpoint "solvingPolicy.ml" 397 12402 12407 "solvingPolicy.ml" 406 12713 12721
)
"solvingPolicy.ml" 396 12370 12392 "solvingPolicy.ml" 396 12370 12397
type(
  Spl_syn.instr
)
ident(
  def instr "solvingPolicy.ml" 397 12402 12407 "solvingPolicy.ml" 406 12713 12721
)
"solvingPolicy.ml" 396 12370 12384 "solvingPolicy.ml" 396 12370 12398
type(
  Equation.vertex * Spl_syn.instr
)
"solvingPolicy.ml" 397 12402 12410 "solvingPolicy.ml" 397 12402 12415
type(
  Spl_syn.instr
)
ident(
  int_ref instr "solvingPolicy.ml" 396 12370 12392 "solvingPolicy.ml" 396 12370 12397
)
"solvingPolicy.ml" 397 12402 12410 "solvingPolicy.ml" 397 12402 12435
type(
  Spl_syn.instruction
)
"solvingPolicy.ml" 397 12402 12436 "solvingPolicy.ml" 397 12402 12437
type(
  Spl_syn.instruction -> Spl_syn.instruction -> bool
)
ident(
  ext_ref Pervasives.( = )
)
"solvingPolicy.ml" 397 12402 12438 "solvingPolicy.ml" 397 12402 12450
type(
  Spl_syn.instruction
)
"solvingPolicy.ml" 397 12402 12410 "solvingPolicy.ml" 397 12402 12450
type(
  bool
)
"solvingPolicy.ml" 398 12462 12473 "solvingPolicy.ml" 398 12462 12475
type(
  bool
)
ident(
  def ok "solvingPolicy.ml" 404 12656 12663 "solvingPolicy.ml" 405 12674 12712
)
"solvingPolicy.ml" 398 12462 12484 "solvingPolicy.ml" 398 12462 12485
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref ->
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option
)
ident(
  ext_ref Pervasives.( ! )
)
"solvingPolicy.ml" 398 12462 12485 "solvingPolicy.ml" 398 12462 12491
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref
)
ident(
  int_ref output "solvingPolicy.ml" 391 12210 12218 "solvingPolicy.ml" 391 12210 12224
)
"solvingPolicy.ml" 398 12462 12484 "solvingPolicy.ml" 398 12462 12491
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option
)
"solvingPolicy.ml" 399 12497 12501 "solvingPolicy.ml" 399 12497 12505
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option
)
"solvingPolicy.ml" 399 12497 12509 "solvingPolicy.ml" 399 12497 12513
type(
  bool
)
"solvingPolicy.ml" 400 12514 12523 "solvingPolicy.ml" 400 12514 12529
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output
)
ident(
  def output "solvingPolicy.ml" 401 12533 12539 "solvingPolicy.ml" 402 12591 12645
)
"solvingPolicy.ml" 400 12514 12518 "solvingPolicy.ml" 400 12514 12529
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option
)
"solvingPolicy.ml" 401 12533 12543 "solvingPolicy.ml" 401 12533 12551
type(
  'a0 Apron.Abstract1.t
)
ident(
  def abstract "solvingPolicy.ml" 402 12591 12597 "solvingPolicy.ml" 402 12591 12645
)
"solvingPolicy.ml" 401 12533 12554 "solvingPolicy.ml" 401 12533 12573
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output -> Equation.vertex -> 'a0 Apron.Abstract1.t
)
ident(
  ext_ref PSHGraph.attrvertex
)
"solvingPolicy.ml" 401 12533 12574 "solvingPolicy.ml" 401 12533 12580
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output
)
ident(
  int_ref output "solvingPolicy.ml" 400 12514 12523 "solvingPolicy.ml" 400 12514 12529
)
"solvingPolicy.ml" 401 12533 12581 "solvingPolicy.ml" 401 12533 12587
type(
  Equation.vertex
)
ident(
  int_ref bpoint "solvingPolicy.ml" 396 12370 12385 "solvingPolicy.ml" 396 12370 12391
)
"solvingPolicy.ml" 401 12533 12554 "solvingPolicy.ml" 401 12533 12587
call(
  stack
)
type(
  'a0 Apron.Abstract1.t
)
"solvingPolicy.ml" 402 12591 12597 "solvingPolicy.ml" 402 12591 12600
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"solvingPolicy.ml" 402 12591 12602 "solvingPolicy.ml" 402 12591 12627
type(
  'a0 Apron.Manager.t -> 'a0 Apron.Abstract1.t -> bool
)
ident(
  ext_ref Apron.Abstract1.is_bottom
)
"solvingPolicy.ml" 402 12591 12628 "solvingPolicy.ml" 402 12591 12635
type(
  'a0 Apron.Manager.t
)
ident(
  int_ref manager "solvingPolicy.ml" 388 12108 12116 "solvingPolicy.ml" 388 12108 12123
)
"solvingPolicy.ml" 402 12591 12636 "solvingPolicy.ml" 402 12591 12644
type(
  'a0 Apron.Abstract1.t
)
ident(
  int_ref abstract "solvingPolicy.ml" 401 12533 12543 "solvingPolicy.ml" 401 12533 12551
)
"solvingPolicy.ml" 402 12591 12601 "solvingPolicy.ml" 402 12591 12645
call(
  stack
)
type(
  bool
)
"solvingPolicy.ml" 402 12591 12597 "solvingPolicy.ml" 402 12591 12645
type(
  bool
)
"solvingPolicy.ml" 401 12533 12539 "solvingPolicy.ml" 402 12591 12645
type(
  bool
)
"solvingPolicy.ml" 398 12462 12478 "solvingPolicy.ml" 402 12591 12645
type(
  bool
)
"solvingPolicy.ml" 404 12656 12666 "solvingPolicy.ml" 404 12656 12668
type(
  bool
)
ident(
  int_ref ok "solvingPolicy.ml" 398 12462 12473 "solvingPolicy.ml" 398 12462 12475
)
"solvingPolicy.ml" 405 12674 12676 "solvingPolicy.ml" 405 12674 12682
type(
  Equation.vertex PSette.t ref
)
ident(
  int_ref sstart "solvingPolicy.ml" 392 12241 12249 "solvingPolicy.ml" 392 12241 12255
)
"solvingPolicy.ml" 405 12674 12683 "solvingPolicy.ml" 405 12674 12685
type(
  Equation.vertex PSette.t ref -> Equation.vertex PSette.t -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"solvingPolicy.ml" 405 12674 12686 "solvingPolicy.ml" 405 12674 12696
type(
  Equation.vertex -> Equation.vertex PSette.t -> Equation.vertex PSette.t
)
ident(
  ext_ref PSette.add
)
"solvingPolicy.ml" 405 12674 12697 "solvingPolicy.ml" 405 12674 12703
type(
  Equation.vertex
)
ident(
  int_ref bpoint "solvingPolicy.ml" 396 12370 12385 "solvingPolicy.ml" 396 12370 12391
)
"solvingPolicy.ml" 405 12674 12704 "solvingPolicy.ml" 405 12674 12705
type(
  Equation.vertex PSette.t ref -> Equation.vertex PSette.t
)
ident(
  ext_ref Pervasives.( ! )
)
"solvingPolicy.ml" 405 12674 12705 "solvingPolicy.ml" 405 12674 12711
type(
  Equation.vertex PSette.t ref
)
ident(
  int_ref sstart "solvingPolicy.ml" 392 12241 12249 "solvingPolicy.ml" 392 12241 12255
)
"solvingPolicy.ml" 405 12674 12704 "solvingPolicy.ml" 405 12674 12711
type(
  Equation.vertex PSette.t
)
"solvingPolicy.ml" 405 12674 12686 "solvingPolicy.ml" 405 12674 12711
call(
  stack
)
type(
  Equation.vertex PSette.t
)
"solvingPolicy.ml" 405 12674 12676 "solvingPolicy.ml" 405 12674 12711
type(
  unit
)
"solvingPolicy.ml" 404 12656 12663 "solvingPolicy.ml" 405 12674 12712
type(
  unit
)
"solvingPolicy.ml" 397 12402 12456 "solvingPolicy.ml" 406 12713 12721
type(
  unit
)
"solvingPolicy.ml" 397 12402 12407 "solvingPolicy.ml" 406 12713 12721
type(
  unit
)
"solvingPolicy.ml" 396 12370 12373 "solvingPolicy.ml" 407 12722 12729
type(
  Equation.vertex * Spl_syn.instr -> unit
)
"solvingPolicy.ml" 408 12730 12733 "solvingPolicy.ml" 408 12730 12742
type(
  Spl_syn.procedure
)
ident(
  int_ref procedure "solvingPolicy.ml" 394 12317 12334 "solvingPolicy.ml" 394 12317 12343
)
"solvingPolicy.ml" 408 12730 12733 "solvingPolicy.ml" 408 12730 12756
type(
  Spl_syn.block
)
"solvingPolicy.ml" 395 12347 12348 "solvingPolicy.ml" 408 12730 12757
call(
  tail
)
type(
  unit
)
"solvingPolicy.ml" 394 12317 12323 "solvingPolicy.ml" 409 12758 12768
type(
  Spl_syn.procedure -> unit
)
"solvingPolicy.ml" 410 12769 12775 "solvingPolicy.ml" 410 12769 12779
type(
  Spl_syn.program
)
ident(
  int_ref prog "solvingPolicy.ml" 380 11817 11824 "solvingPolicy.ml" 380 11817 11828
)
"solvingPolicy.ml" 410 12769 12775 "solvingPolicy.ml" 410 12769 12798
type(
  Spl_syn.procedure list
)
"solvingPolicy.ml" 393 12303 12307 "solvingPolicy.ml" 410 12769 12798
call(
  stack
)
type(
  unit
)
"solvingPolicy.ml" 412 12801 12808 "solvingPolicy.ml" 412 12801 12823
type(
  Equation.vertex PSette.t -> bool
)
ident(
  ext_ref PSette.is_empty
)
"solvingPolicy.ml" 412 12801 12824 "solvingPolicy.ml" 412 12801 12825
type(
  Equation.vertex PSette.t ref -> Equation.vertex PSette.t
)
ident(
  ext_ref Pervasives.( ! )
)
"solvingPolicy.ml" 412 12801 12825 "solvingPolicy.ml" 412 12801 12831
type(
  Equation.vertex PSette.t ref
)
ident(
  int_ref sstart "solvingPolicy.ml" 392 12241 12249 "solvingPolicy.ml" 392 12241 12255
)
"solvingPolicy.ml" 412 12801 12824 "solvingPolicy.ml" 412 12801 12831
type(
  Equation.vertex PSette.t
)
"solvingPolicy.ml" 412 12801 12808 "solvingPolicy.ml" 412 12801 12831
call(
  stack
)
type(
  bool
)
"solvingPolicy.ml" 413 12843 12849 "solvingPolicy.ml" 413 12843 12865
type(
  Equation.graph ->
  'a0 Apron.Manager.t ->
  (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
)
ident(
  int_ref make_emptyoutput "solvingPolicy.ml" 79 2537 2541 "solvingPolicy.ml" 79 2537 2557
)
"solvingPolicy.ml" 413 12843 12866 "solvingPolicy.ml" 413 12843 12871
type(
  Equation.graph
)
ident(
  int_ref graph "solvingPolicy.ml" 381 11846 11853 "solvingPolicy.ml" 381 11846 11858
)
"solvingPolicy.ml" 413 12843 12872 "solvingPolicy.ml" 413 12843 12879
type(
  'a0 Apron.Manager.t
)
ident(
  int_ref manager "solvingPolicy.ml" 388 12108 12116 "solvingPolicy.ml" 388 12108 12123
)
"solvingPolicy.ml" 412 12801 12837 "solvingPolicy.ml" 414 12880 12887
call(
  tail
)
type(
  (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
)
"solvingPolicy.ml" 416 12903 12913 "solvingPolicy.ml" 416 12903 12926
type(
  Equation.vertex -> 'a0 Apron.Abstract1.t
)
ident(
  def abstract_init "solvingPolicy.ml" 425 13145 13151 "solvingPolicy.ml" 485 14831 14840
)
"solvingPolicy.ml" 416 12903 12939 "solvingPolicy.ml" 416 12903 12945
type(
  Equation.vertex
)
ident(
  def vertex "solvingPolicy.ml" 417 12949 12950 "solvingPolicy.ml" 422 13121 13125
)
"solvingPolicy.ml" 417 12949 12962 "solvingPolicy.ml" 417 12949 12963
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref ->
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option
)
ident(
  ext_ref Pervasives.( ! )
)
"solvingPolicy.ml" 417 12949 12963 "solvingPolicy.ml" 417 12949 12969
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref
)
ident(
  int_ref output "solvingPolicy.ml" 391 12210 12218 "solvingPolicy.ml" 391 12210 12224
)
"solvingPolicy.ml" 417 12949 12962 "solvingPolicy.ml" 417 12949 12969
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option
)
"solvingPolicy.ml" 418 12975 12978 "solvingPolicy.ml" 418 12975 12982
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option
)
"solvingPolicy.ml" 419 12986 12991 "solvingPolicy.ml" 419 12986 13010
type(
  'a0 Apron.Manager.t -> Apron.Environment.t -> 'a0 Apron.Abstract1.t
)
ident(
  ext_ref Apron.Abstract1.top
)
"solvingPolicy.ml" 419 12986 13011 "solvingPolicy.ml" 419 12986 13018
type(
  'a0 Apron.Manager.t
)
ident(
  int_ref manager "solvingPolicy.ml" 388 12108 12116 "solvingPolicy.ml" 388 12108 12123
)
"solvingPolicy.ml" 419 12986 13020 "solvingPolicy.ml" 419 12986 13031
type(
  (Equation.vertex, Apron.Environment.t) Hashhe.t ->
  Equation.vertex -> Apron.Environment.t
)
ident(
  ext_ref Hashhe.find
)
"solvingPolicy.ml" 419 12986 13032 "solvingPolicy.ml" 419 12986 13036
type(
  Equation.info
)
ident(
  int_ref info "solvingPolicy.ml" 389 12171 12179 "solvingPolicy.ml" 389 12171 12183
)
"solvingPolicy.ml" 419 12986 13032 "solvingPolicy.ml" 419 12986 13054
type(
  (Equation.vertex, Apron.Environment.t) Hashhe.t
)
"solvingPolicy.ml" 419 12986 13055 "solvingPolicy.ml" 419 12986 13061
type(
  Equation.vertex
)
ident(
  int_ref vertex "solvingPolicy.ml" 416 12903 12939 "solvingPolicy.ml" 416 12903 12945
)
"solvingPolicy.ml" 419 12986 13019 "solvingPolicy.ml" 419 12986 13062
call(
  stack
)
type(
  Apron.Environment.t
)
"solvingPolicy.ml" 419 12986 12991 "solvingPolicy.ml" 419 12986 13062
type(
  'a0 Apron.Abstract1.t
)
"solvingPolicy.ml" 420 13063 13071 "solvingPolicy.ml" 420 13063 13077
ident(
  def output "solvingPolicy.ml" 421 13082 13087 "solvingPolicy.ml" 421 13082 13120
)
"solvingPolicy.ml" 420 13063 13070 "solvingPolicy.ml" 420 13063 13078
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output
)
"solvingPolicy.ml" 420 13063 13066 "solvingPolicy.ml" 420 13063 13078
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option
)
"solvingPolicy.ml" 421 13082 13087 "solvingPolicy.ml" 421 13082 13106
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output -> Equation.vertex -> 'a0 Apron.Abstract1.t
)
ident(
  ext_ref PSHGraph.attrvertex
)
"solvingPolicy.ml" 421 13082 13107 "solvingPolicy.ml" 421 13082 13113
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output
)
ident(
  int_ref output "solvingPolicy.ml" 420 13063 13070 "solvingPolicy.ml" 420 13063 13078
)
"solvingPolicy.ml" 421 13082 13114 "solvingPolicy.ml" 421 13082 13120
type(
  Equation.vertex
)
ident(
  int_ref vertex "solvingPolicy.ml" 416 12903 12939 "solvingPolicy.ml" 416 12903 12945
)
"solvingPolicy.ml" 421 13082 13087 "solvingPolicy.ml" 421 13082 13120
call(
  tail
)
type(
  'a0 Apron.Abstract1.t
)
"solvingPolicy.ml" 417 12949 12950 "solvingPolicy.ml" 422 13121 13125
type(
  'a0 Apron.Abstract1.t
)
"solvingPolicy.ml" 416 12903 12929 "solvingPolicy.ml" 423 13126 13135
type(
  Equation.vertex -> 'a0 Apron.Abstract1.t
)
"solvingPolicy.ml" 425 13145 13155 "solvingPolicy.ml" 425 13145 13161
type(
  (Equation.hedge, 'a0 policy) Hashhe.t ref
)
ident(
  def policy "solvingPolicy.ml" 426 13201 13207 "solvingPolicy.ml" 485 14831 14840
)
"solvingPolicy.ml" 425 13145 13164 "solvingPolicy.ml" 425 13145 13175
type(
  'a0 Apron.Policy.man ->
  Equation.graph ->
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref -> (Equation.hedge, 'a0 policy) Hashhe.t ref
)
ident(
  int_ref make_policy "solvingPolicy.ml" 82 2640 2644 "solvingPolicy.ml" 82 2640 2655
)
"solvingPolicy.ml" 425 13145 13176 "solvingPolicy.ml" 425 13145 13184
type(
  'a0 Apron.Policy.man
)
ident(
  int_ref pmanager "solvingPolicy.ml" 383 11965 11972 "solvingPolicy.ml" 383 11965 11980
)
"solvingPolicy.ml" 425 13145 13185 "solvingPolicy.ml" 425 13145 13190
type(
  Equation.graph
)
ident(
  int_ref graph "solvingPolicy.ml" 381 11846 11853 "solvingPolicy.ml" 381 11846 11858
)
"solvingPolicy.ml" 425 13145 13191 "solvingPolicy.ml" 425 13145 13197
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref
)
ident(
  int_ref output "solvingPolicy.ml" 391 12210 12218 "solvingPolicy.ml" 391 12210 12224
)
"solvingPolicy.ml" 425 13145 13164 "solvingPolicy.ml" 425 13145 13197
call(
  stack
)
type(
  (Equation.hedge, 'a0 policy) Hashhe.t ref
)
"solvingPolicy.ml" 426 13201 13211 "solvingPolicy.ml" 426 13201 13220
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.manager
)
ident(
  def fpmanager "solvingPolicy.ml" 432 13329 13335 "solvingPolicy.ml" 485 14831 14840
)
"solvingPolicy.ml" 427 13223 13224 "solvingPolicy.ml" 427 13223 13238
type(
  fmt:Format.formatter ->
  output:(Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
         Fixpoint.output option ref ->
  debug:int ->
  graph:Equation.graph ->
  policy:(Equation.hedge, 'a0 policy) Hashhe.t ref ->
  pman:'a0 Apron.Policy.man ->
  abstract_init:(Equation.vertex -> 'a0 Apron.Abstract1.t) ->
  apply:(Equation.graph ->
         output:(Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit)
                Fixpoint.output option ref ->
         policy:(Equation.hedge, 'a0 policy) Hashhe.t ref ->
         'a0 Apron.Policy.man ->
         Equation.hedge ->
         'a0 Apron.Abstract1.t array -> unit * 'a0 Apron.Abstract1.t) ->
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.manager
)
ident(
  int_ref make_fpmanager "solvingPolicy.ml" 46 1396 1400 "solvingPolicy.ml" 46 1396 1414
)
"solvingPolicy.ml" 427 13223 13240 "solvingPolicy.ml" 427 13223 13243
type(
  Format.formatter
)
ident(
  int_ref fmt "solvingPolicy.ml" 379 11785 11793 "solvingPolicy.ml" 379 11785 11796
)
"solvingPolicy.ml" 427 13223 13245 "solvingPolicy.ml" 427 13223 13251
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref
)
ident(
  int_ref output "solvingPolicy.ml" 391 12210 12218 "solvingPolicy.ml" 391 12210 12224
)
"solvingPolicy.ml" 427 13223 13253 "solvingPolicy.ml" 427 13223 13258
type(
  int
)
ident(
  int_ref debug "solvingPolicy.ml" 384 12002 12010 "solvingPolicy.ml" 384 12002 12015
)
"solvingPolicy.ml" 427 13223 13260 "solvingPolicy.ml" 427 13223 13265
type(
  Equation.graph
)
ident(
  int_ref graph "solvingPolicy.ml" 381 11846 11853 "solvingPolicy.ml" 381 11846 11858
)
"solvingPolicy.ml" 428 13266 13270 "solvingPolicy.ml" 428 13266 13276
type(
  (Equation.hedge, 'a0 policy) Hashhe.t ref
)
ident(
  int_ref policy "solvingPolicy.ml" 425 13145 13155 "solvingPolicy.ml" 425 13145 13161
)
"solvingPolicy.ml" 429 13277 13286 "solvingPolicy.ml" 429 13277 13294
type(
  'a0 Apron.Policy.man
)
ident(
  int_ref pmanager "solvingPolicy.ml" 383 11965 11972 "solvingPolicy.ml" 383 11965 11980
)
"solvingPolicy.ml" 430 13295 13299 "solvingPolicy.ml" 430 13295 13312
type(
  Equation.vertex -> 'a0 Apron.Abstract1.t
)
ident(
  int_ref abstract_init "solvingPolicy.ml" 416 12903 12913 "solvingPolicy.ml" 416 12903 12926
)
"solvingPolicy.ml" 430 13295 13314 "solvingPolicy.ml" 430 13295 13319
type(
  Equation.graph ->
  output:(Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
         option ref ->
  policy:(Equation.hedge, 'a0 policy) Hashhe.t ref ->
  'a0 Apron.Policy.man ->
  Equation.hedge ->
  'a0 Apron.Abstract1.t array -> unit * 'a0 Apron.Abstract1.t
)
ident(
  int_ref apply "solvingPolicy.ml" 337 10273 10279 "solvingPolicy.ml" 337 10273 10284
)
"solvingPolicy.ml" 427 13223 13224 "solvingPolicy.ml" 430 13295 13319
call(
  stack
)
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.manager
)
"solvingPolicy.ml" 432 13329 13339 "solvingPolicy.ml" 432 13329 13345
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref
)
ident(
  def result "solvingPolicy.ml" 433 13360 13366 "solvingPolicy.ml" 485 14831 14840
)
"solvingPolicy.ml" 432 13329 13348 "solvingPolicy.ml" 432 13329 13351
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ->
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref
)
ident(
  ext_ref Pervasives.ref
)
"solvingPolicy.ml" 432 13329 13352 "solvingPolicy.ml" 432 13329 13356
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option
)
"solvingPolicy.ml" 432 13329 13348 "solvingPolicy.ml" 432 13329 13356
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref
)
"solvingPolicy.ml" 433 13360 13370 "solvingPolicy.ml" 433 13360 13374
type(
  bool ref
)
ident(
  def loop "solvingPolicy.ml" 434 13389 13395 "solvingPolicy.ml" 485 14831 14840
)
"solvingPolicy.ml" 433 13360 13377 "solvingPolicy.ml" 433 13360 13380
type(
  bool -> bool ref
)
ident(
  ext_ref Pervasives.ref
)
"solvingPolicy.ml" 433 13360 13381 "solvingPolicy.ml" 433 13360 13385
type(
  bool
)
"solvingPolicy.ml" 433 13360 13377 "solvingPolicy.ml" 433 13360 13385
type(
  bool ref
)
"solvingPolicy.ml" 434 13389 13401 "solvingPolicy.ml" 434 13389 13402
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"solvingPolicy.ml" 434 13389 13402 "solvingPolicy.ml" 434 13389 13406
type(
  bool ref
)
ident(
  int_ref loop "solvingPolicy.ml" 433 13360 13370 "solvingPolicy.ml" 433 13360 13374
)
"solvingPolicy.ml" 434 13389 13401 "solvingPolicy.ml" 434 13389 13406
type(
  bool
)
"solvingPolicy.ml" 435 13410 13415 "solvingPolicy.ml" 435 13410 13417
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output
)
ident(
  def fp "solvingPolicy.ml" 453 13909 13910 "solvingPolicy.ml" 480 14720 14739
)
"solvingPolicy.ml" 436 13420 13426 "solvingPolicy.ml" 436 13420 13427
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"solvingPolicy.ml" 436 13420 13427 "solvingPolicy.ml" 436 13420 13450
type(
  bool ref
)
ident(
  ext_ref Option.iteration_guided
)
"solvingPolicy.ml" 436 13420 13426 "solvingPolicy.ml" 436 13420 13450
type(
  bool
)
"solvingPolicy.ml" 437 13456 13461 "solvingPolicy.ml" 437 13456 13485
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.manager ->
  Equation.graph ->
  Equation.vertex PSette.t ->
  ((Equation.hedge -> bool) ->
   (Equation.vertex, Equation.hedge) Fixpoint.strategy) ->
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output
)
ident(
  ext_ref Fixpoint.analysis_guided
)
"solvingPolicy.ml" 438 13486 13493 "solvingPolicy.ml" 438 13486 13502
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.manager
)
ident(
  int_ref fpmanager "solvingPolicy.ml" 426 13201 13211 "solvingPolicy.ml" 426 13201 13220
)
"solvingPolicy.ml" 438 13486 13503 "solvingPolicy.ml" 438 13486 13508
type(
  Equation.graph
)
ident(
  int_ref graph "solvingPolicy.ml" 381 11846 11853 "solvingPolicy.ml" 381 11846 11858
)
"solvingPolicy.ml" 438 13486 13509 "solvingPolicy.ml" 438 13486 13510
type(
  Equation.vertex PSette.t ref -> Equation.vertex PSette.t
)
ident(
  ext_ref Pervasives.( ! )
)
"solvingPolicy.ml" 438 13486 13510 "solvingPolicy.ml" 438 13486 13516
type(
  Equation.vertex PSette.t ref
)
ident(
  int_ref sstart "solvingPolicy.ml" 392 12241 12249 "solvingPolicy.ml" 392 12241 12255
)
"solvingPolicy.ml" 438 13486 13509 "solvingPolicy.ml" 438 13486 13516
type(
  Equation.vertex PSette.t
)
"solvingPolicy.ml" 439 13517 13529 "solvingPolicy.ml" 439 13517 13535
type(
  Equation.hedge -> bool
)
ident(
  def filter "solvingPolicy.ml" 440 13540 13542 "solvingPolicy.ml" 444 13690 13707
)
"solvingPolicy.ml" 440 13540 13542 "solvingPolicy.ml" 440 13540 13572
type(
  ?depth:int ->
  ?widening_start:int ->
  ?widening_descend:int ->
  ?priority:Equation.hedge PSHGraph.priority ->
  vertex_dummy:Equation.vertex ->
  hedge_dummy:Equation.hedge ->
  Equation.graph ->
  Equation.vertex PSette.t ->
  (Equation.vertex, Equation.hedge) Fixpoint.strategy
)
ident(
  ext_ref Fixpoint.make_strategy_default
)
"solvingPolicy.ml" 441 13573 13591 "solvingPolicy.ml" 441 13573 13612
type(
  Equation.vertex
)
ident(
  ext_ref Equation.vertex_dummy
)
"solvingPolicy.ml" 442 13613 13630 "solvingPolicy.ml" 442 13613 13650
type(
  Equation.hedge
)
ident(
  ext_ref Equation.hedge_dummy
)
"solvingPolicy.ml" 443 13651 13682 "solvingPolicy.ml" 443 13651 13688
type(
  Equation.hedge -> bool
)
ident(
  int_ref filter "solvingPolicy.ml" 439 13517 13529 "solvingPolicy.ml" 439 13517 13535
)
"solvingPolicy.ml" 443 13651 13665 "solvingPolicy.ml" 443 13651 13689
type(
  Equation.hedge PSHGraph.priority
)
"solvingPolicy.ml" 444 13690 13694 "solvingPolicy.ml" 444 13690 13699
type(
  Equation.graph
)
ident(
  int_ref graph "solvingPolicy.ml" 381 11846 11853 "solvingPolicy.ml" 381 11846 11858
)
"solvingPolicy.ml" 444 13690 13700 "solvingPolicy.ml" 444 13690 13701
type(
  Equation.vertex PSette.t ref -> Equation.vertex PSette.t
)
ident(
  ext_ref Pervasives.( ! )
)
"solvingPolicy.ml" 444 13690 13701 "solvingPolicy.ml" 444 13690 13707
type(
  Equation.vertex PSette.t ref
)
ident(
  int_ref sstart "solvingPolicy.ml" 392 12241 12249 "solvingPolicy.ml" 392 12241 12255
)
"solvingPolicy.ml" 444 13690 13700 "solvingPolicy.ml" 444 13690 13707
type(
  Equation.vertex PSette.t
)
"solvingPolicy.ml" 440 13540 13542 "solvingPolicy.ml" 444 13690 13707
call(
  tail
)
type(
  (Equation.vertex, Equation.hedge) Fixpoint.strategy
)
"solvingPolicy.ml" 439 13517 13524 "solvingPolicy.ml" 444 13690 13708
type(
  (Equation.hedge -> bool) ->
  (Equation.vertex, Equation.hedge) Fixpoint.strategy
)
"solvingPolicy.ml" 437 13456 13461 "solvingPolicy.ml" 444 13690 13708
call(
  stack
)
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output
)
"solvingPolicy.ml" 446 13717 13722 "solvingPolicy.ml" 446 13717 13743
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.manager ->
  Equation.graph ->
  Equation.vertex PSette.t ->
  (Equation.vertex, Equation.hedge) Fixpoint.strategy ->
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output
)
ident(
  ext_ref Fixpoint.analysis_std
)
"solvingPolicy.ml" 447 13744 13751 "solvingPolicy.ml" 447 13744 13760
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.manager
)
ident(
  int_ref fpmanager "solvingPolicy.ml" 426 13201 13211 "solvingPolicy.ml" 426 13201 13220
)
"solvingPolicy.ml" 447 13744 13761 "solvingPolicy.ml" 447 13744 13766
type(
  Equation.graph
)
ident(
  int_ref graph "solvingPolicy.ml" 381 11846 11853 "solvingPolicy.ml" 381 11846 11858
)
"solvingPolicy.ml" 447 13744 13767 "solvingPolicy.ml" 447 13744 13768
type(
  Equation.vertex PSette.t ref -> Equation.vertex PSette.t
)
ident(
  ext_ref Pervasives.( ! )
)
"solvingPolicy.ml" 447 13744 13768 "solvingPolicy.ml" 447 13744 13774
type(
  Equation.vertex PSette.t ref
)
ident(
  int_ref sstart "solvingPolicy.ml" 392 12241 12249 "solvingPolicy.ml" 392 12241 12255
)
"solvingPolicy.ml" 447 13744 13767 "solvingPolicy.ml" 447 13744 13774
type(
  Equation.vertex PSette.t
)
"solvingPolicy.ml" 448 13775 13783 "solvingPolicy.ml" 448 13775 13813
type(
  ?depth:int ->
  ?widening_start:int ->
  ?widening_descend:int ->
  ?priority:Equation.hedge PSHGraph.priority ->
  vertex_dummy:Equation.vertex ->
  hedge_dummy:Equation.hedge ->
  Equation.graph ->
  Equation.vertex PSette.t ->
  (Equation.vertex, Equation.hedge) Fixpoint.strategy
)
ident(
  ext_ref Fixpoint.make_strategy_default
)
"solvingPolicy.ml" 449 13814 13830 "solvingPolicy.ml" 449 13814 13851
type(
  Equation.vertex
)
ident(
  ext_ref Equation.vertex_dummy
)
"solvingPolicy.ml" 450 13852 13867 "solvingPolicy.ml" 450 13852 13887
type(
  Equation.hedge
)
ident(
  ext_ref Equation.hedge_dummy
)
"solvingPolicy.ml" 451 13888 13890 "solvingPolicy.ml" 451 13888 13895
type(
  Equation.graph
)
ident(
  int_ref graph "solvingPolicy.ml" 381 11846 11853 "solvingPolicy.ml" 381 11846 11858
)
"solvingPolicy.ml" 451 13888 13896 "solvingPolicy.ml" 451 13888 13897
type(
  Equation.vertex PSette.t ref -> Equation.vertex PSette.t
)
ident(
  ext_ref Pervasives.( ! )
)
"solvingPolicy.ml" 451 13888 13897 "solvingPolicy.ml" 451 13888 13903
type(
  Equation.vertex PSette.t ref
)
ident(
  int_ref sstart "solvingPolicy.ml" 392 12241 12249 "solvingPolicy.ml" 392 12241 12255
)
"solvingPolicy.ml" 451 13888 13896 "solvingPolicy.ml" 451 13888 13903
type(
  Equation.vertex PSette.t
)
"solvingPolicy.ml" 448 13775 13782 "solvingPolicy.ml" 451 13888 13904
call(
  stack
)
type(
  (Equation.vertex, Equation.hedge) Fixpoint.strategy
)
"solvingPolicy.ml" 446 13717 13722 "solvingPolicy.ml" 451 13888 13904
call(
  stack
)
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output
)
"solvingPolicy.ml" 436 13420 13423 "solvingPolicy.ml" 451 13888 13904
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output
)
"solvingPolicy.ml" 453 13909 13910 "solvingPolicy.ml" 453 13909 13916
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref
)
ident(
  int_ref result "solvingPolicy.ml" 432 13329 13339 "solvingPolicy.ml" 432 13329 13345
)
"solvingPolicy.ml" 453 13909 13917 "solvingPolicy.ml" 453 13909 13919
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref ->
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"solvingPolicy.ml" 453 13909 13925 "solvingPolicy.ml" 453 13909 13927
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output
)
ident(
  int_ref fp "solvingPolicy.ml" 435 13410 13415 "solvingPolicy.ml" 435 13410 13417
)
"solvingPolicy.ml" 453 13909 13920 "solvingPolicy.ml" 453 13909 13927
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option
)
"solvingPolicy.ml" 453 13909 13910 "solvingPolicy.ml" 453 13909 13927
type(
  unit
)
"solvingPolicy.ml" 455 13944 13948 "solvingPolicy.ml" 455 13944 13949
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"solvingPolicy.ml" 455 13944 13949 "solvingPolicy.ml" 455 13944 13961
type(
  int ref
)
ident(
  ext_ref Option.debug
)
"solvingPolicy.ml" 455 13944 13948 "solvingPolicy.ml" 455 13944 13961
type(
  int
)
"solvingPolicy.ml" 455 13944 13962 "solvingPolicy.ml" 455 13944 13963
type(
  int -> int -> bool
)
ident(
  ext_ref Pervasives.( > )
)
"solvingPolicy.ml" 455 13944 13963 "solvingPolicy.ml" 455 13944 13964
type(
  int
)
"solvingPolicy.ml" 455 13944 13948 "solvingPolicy.ml" 455 13944 13964
type(
  bool
)
"solvingPolicy.ml" 456 13976 13979 "solvingPolicy.ml" 456 13976 13985
type(
  ((Format.formatter -> (Equation.hedge, 'a0 policy) Hashhe.t -> unit) ->
   (Equation.hedge, 'a0 policy) Hashhe.t -> unit, Format.formatter, unit)
  format ->
  (Format.formatter -> (Equation.hedge, 'a0 policy) Hashhe.t -> unit) ->
  (Equation.hedge, 'a0 policy) Hashhe.t -> unit
)
ident(
  ext_ref Format.printf
)
"solvingPolicy.ml" 456 13976 13986 "solvingPolicy.ml" 456 13976 13997
type(
  ((Format.formatter -> (Equation.hedge, 'a0 policy) Hashhe.t -> unit) ->
   (Equation.hedge, 'a0 policy) Hashhe.t -> unit, Format.formatter, unit)
  format
)
"solvingPolicy.ml" 456 13976 13999 "solvingPolicy.ml" 456 13976 14016
type(
  'a0 Apron.Policy.man ->
  Format.formatter -> (Equation.hedge, 'a0 policy) Hashhe.t -> unit
)
ident(
  int_ref hash_policy_print "solvingPolicy.ml" 21 530 534 "solvingPolicy.ml" 21 530 551
)
"solvingPolicy.ml" 456 13976 14017 "solvingPolicy.ml" 456 13976 14025
type(
  'a0 Apron.Policy.man
)
ident(
  int_ref pmanager "solvingPolicy.ml" 383 11965 11972 "solvingPolicy.ml" 383 11965 11980
)
"solvingPolicy.ml" 456 13976 13998 "solvingPolicy.ml" 456 13976 14026
call(
  stack
)
type(
  Format.formatter -> (Equation.hedge, 'a0 policy) Hashhe.t -> unit
)
"solvingPolicy.ml" 456 13976 14027 "solvingPolicy.ml" 456 13976 14028
type(
  (Equation.hedge, 'a0 policy) Hashhe.t ref ->
  (Equation.hedge, 'a0 policy) Hashhe.t
)
ident(
  ext_ref Pervasives.( ! )
)
"solvingPolicy.ml" 456 13976 14028 "solvingPolicy.ml" 456 13976 14034
type(
  (Equation.hedge, 'a0 policy) Hashhe.t ref
)
ident(
  int_ref policy "solvingPolicy.ml" 425 13145 13155 "solvingPolicy.ml" 425 13145 13161
)
"solvingPolicy.ml" 456 13976 14027 "solvingPolicy.ml" 456 13976 14034
type(
  (Equation.hedge, 'a0 policy) Hashhe.t
)
"solvingPolicy.ml" 456 13976 13979 "solvingPolicy.ml" 456 13976 14034
call(
  stack
)
type(
  unit
)
"solvingPolicy.ml" 457 14036 14039 "solvingPolicy.ml" 457 14036 14059
type(
  Spl_syn.program ->
  Format.formatter ->
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output -> unit
)
ident(
  ext_ref Solving.print_output
)
"solvingPolicy.ml" 457 14036 14060 "solvingPolicy.ml" 457 14036 14064
type(
  Spl_syn.program
)
ident(
  int_ref prog "solvingPolicy.ml" 380 11817 11824 "solvingPolicy.ml" 380 11817 11828
)
"solvingPolicy.ml" 457 14036 14065 "solvingPolicy.ml" 457 14036 14068
type(
  Format.formatter
)
ident(
  int_ref fmt "solvingPolicy.ml" 379 11785 11793 "solvingPolicy.ml" 379 11785 11796
)
"solvingPolicy.ml" 457 14036 14069 "solvingPolicy.ml" 457 14036 14071
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output
)
ident(
  int_ref fp "solvingPolicy.ml" 435 13410 13415 "solvingPolicy.ml" 435 13410 13417
)
"solvingPolicy.ml" 457 14036 14039 "solvingPolicy.ml" 457 14036 14072
call(
  stack
)
type(
  unit
)
"solvingPolicy.ml" 455 13944 13970 "solvingPolicy.ml" 458 14073 14077
type(
  unit
)
"solvingPolicy.ml" 455 13944 13945 "solvingPolicy.ml" 458 14073 14077
type(
  unit
)
"solvingPolicy.ml" 460 14115 14116 "solvingPolicy.ml" 460 14115 14120
type(
  bool ref
)
ident(
  int_ref loop "solvingPolicy.ml" 433 13360 13370 "solvingPolicy.ml" 433 13360 13374
)
"solvingPolicy.ml" 460 14115 14121 "solvingPolicy.ml" 460 14115 14123
type(
  bool ref -> bool -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"solvingPolicy.ml" 460 14115 14124 "solvingPolicy.ml" 460 14115 14129
type(
  bool
)
"solvingPolicy.ml" 460 14115 14116 "solvingPolicy.ml" 460 14115 14129
type(
  unit
)
"solvingPolicy.ml" 461 14131 14132 "solvingPolicy.ml" 461 14131 14138
type(
  (Equation.hedge, 'a0 policy) Hashhe.t ref
)
ident(
  int_ref policy "solvingPolicy.ml" 425 13145 13155 "solvingPolicy.ml" 425 13145 13161
)
"solvingPolicy.ml" 461 14131 14139 "solvingPolicy.ml" 461 14131 14141
type(
  (Equation.hedge, 'a0 policy) Hashhe.t ref ->
  (Equation.hedge, 'a0 policy) Hashhe.t -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"solvingPolicy.ml" 462 14142 14145 "solvingPolicy.ml" 462 14142 14155
type(
  (Equation.hedge -> 'a0 policy -> 'a0 policy) ->
  (Equation.hedge, 'a0 policy) Hashhe.t ->
  (Equation.hedge, 'a0 policy) Hashhe.t
)
ident(
  ext_ref Hashhe.map
)
"solvingPolicy.ml" 463 14156 14172 "solvingPolicy.ml" 463 14156 14177
type(
  Equation.hedge
)
ident(
  def hedge "solvingPolicy.ml" 463 14156 14178 "solvingPolicy.ml" 475 14618 14631
)
"solvingPolicy.ml" 463 14156 14178 "solvingPolicy.ml" 463 14156 14187
type(
  'a0 policy
)
ident(
  def oldpolicy "solvingPolicy.ml" 464 14191 14198 "solvingPolicy.ml" 475 14618 14631
)
"solvingPolicy.ml" 464 14191 14202 "solvingPolicy.ml" 464 14191 14212
type(
  Equation.vertex
)
ident(
  def predvertex "solvingPolicy.ml" 465 14256 14263 "solvingPolicy.ml" 475 14618 14631
)
"solvingPolicy.ml" 464 14191 14216 "solvingPolicy.ml" 464 14191 14235
type(
  Equation.graph -> Equation.hedge -> Equation.vertex array
)
ident(
  ext_ref PSHGraph.predvertex
)
"solvingPolicy.ml" 464 14191 14236 "solvingPolicy.ml" 464 14191 14241
type(
  Equation.graph
)
ident(
  int_ref graph "solvingPolicy.ml" 381 11846 11853 "solvingPolicy.ml" 381 11846 11858
)
"solvingPolicy.ml" 464 14191 14242 "solvingPolicy.ml" 464 14191 14247
type(
  Equation.hedge
)
ident(
  int_ref hedge "solvingPolicy.ml" 463 14156 14172 "solvingPolicy.ml" 463 14156 14177
)
"solvingPolicy.ml" 464 14191 14215 "solvingPolicy.ml" 464 14191 14248
call(
  stack
)
type(
  Equation.vertex array
)
"solvingPolicy.ml" 464 14191 14250 "solvingPolicy.ml" 464 14191 14251
type(
  int
)
"solvingPolicy.ml" 464 14191 14215 "solvingPolicy.ml" 464 14191 14252
type(
  Equation.vertex
)
"solvingPolicy.ml" 465 14256 14267 "solvingPolicy.ml" 465 14256 14270
type(
  'a0 Apron.Abstract1.t
)
ident(
  def abs "solvingPolicy.ml" 466 14310 14317 "solvingPolicy.ml" 475 14618 14631
)
"solvingPolicy.ml" 465 14256 14273 "solvingPolicy.ml" 465 14256 14292
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output -> Equation.vertex -> 'a0 Apron.Abstract1.t
)
ident(
  ext_ref PSHGraph.attrvertex
)
"solvingPolicy.ml" 465 14256 14293 "solvingPolicy.ml" 465 14256 14295
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output
)
ident(
  int_ref fp "solvingPolicy.ml" 435 13410 13415 "solvingPolicy.ml" 435 13410 13417
)
"solvingPolicy.ml" 465 14256 14296 "solvingPolicy.ml" 465 14256 14306
type(
  Equation.vertex
)
ident(
  int_ref predvertex "solvingPolicy.ml" 464 14191 14202 "solvingPolicy.ml" 464 14191 14212
)
"solvingPolicy.ml" 465 14256 14273 "solvingPolicy.ml" 465 14256 14306
call(
  stack
)
type(
  'a0 Apron.Abstract1.t
)
"solvingPolicy.ml" 466 14310 14321 "solvingPolicy.ml" 466 14310 14329
type(
  Equation.transfer
)
ident(
  def transfer "solvingPolicy.ml" 467 14366 14373 "solvingPolicy.ml" 475 14618 14631
)
"solvingPolicy.ml" 466 14310 14332 "solvingPolicy.ml" 466 14310 14350
type(
  Equation.graph -> Equation.hedge -> Equation.transfer
)
ident(
  ext_ref PSHGraph.attrhedge
)
"solvingPolicy.ml" 466 14310 14351 "solvingPolicy.ml" 466 14310 14356
type(
  Equation.graph
)
ident(
  int_ref graph "solvingPolicy.ml" 381 11846 11853 "solvingPolicy.ml" 381 11846 11858
)
"solvingPolicy.ml" 466 14310 14357 "solvingPolicy.ml" 466 14310 14362
type(
  Equation.hedge
)
ident(
  int_ref hedge "solvingPolicy.ml" 463 14156 14172 "solvingPolicy.ml" 463 14156 14177
)
"solvingPolicy.ml" 466 14310 14332 "solvingPolicy.ml" 466 14310 14362
call(
  stack
)
type(
  Equation.transfer
)
"solvingPolicy.ml" 467 14366 14377 "solvingPolicy.ml" 467 14366 14383
type(
  'a0 Apron.Policy.t Boolexpr.t
)
ident(
  def policy "solvingPolicy.ml" 474 14546 14553 "solvingPolicy.ml" 475 14618 14631
)
"solvingPolicy.ml" 468 14386 14400 "solvingPolicy.ml" 468 14386 14408
type(
  Equation.transfer
)
ident(
  int_ref transfer "solvingPolicy.ml" 466 14310 14321 "solvingPolicy.ml" 466 14310 14329
)
"solvingPolicy.ml" 469 14414 14437 "solvingPolicy.ml" 469 14414 14441
type(
  Apron.Tcons1.earray Boolexpr.t
)
ident(
  def cond "solvingPolicy.ml" 470 14445 14451 "solvingPolicy.ml" 470 14445 14508
)
"solvingPolicy.ml" 469 14414 14418 "solvingPolicy.ml" 469 14414 14441
type(
  Equation.transfer
)
"solvingPolicy.ml" 470 14445 14451 "solvingPolicy.ml" 470 14445 14468
type(
  'a0 Apron.Policy.man ->
  'a0 policy option ->
  'a0 Apron.Abstract1.t ->
  Apron.Tcons1.earray Boolexpr.t ->
  'a0 Apron.Abstract1.t option -> 'a0 Apron.Policy.t Boolexpr.t
)
ident(
  int_ref improve_condition "solvingPolicy.ml" 146 4337 4341 "solvingPolicy.ml" 146 4337 4358
)
"solvingPolicy.ml" 470 14445 14469 "solvingPolicy.ml" 470 14445 14477
type(
  'a0 Apron.Policy.man
)
ident(
  int_ref pmanager "solvingPolicy.ml" 383 11965 11972 "solvingPolicy.ml" 383 11965 11980
)
"solvingPolicy.ml" 470 14445 14484 "solvingPolicy.ml" 470 14445 14493
type(
  'a0 policy
)
ident(
  int_ref oldpolicy "solvingPolicy.ml" 463 14156 14178 "solvingPolicy.ml" 463 14156 14187
)
"solvingPolicy.ml" 470 14445 14478 "solvingPolicy.ml" 470 14445 14494
type(
  'a0 policy option
)
"solvingPolicy.ml" 470 14445 14495 "solvingPolicy.ml" 470 14445 14498
type(
  'a0 Apron.Abstract1.t
)
ident(
  int_ref abs "solvingPolicy.ml" 465 14256 14267 "solvingPolicy.ml" 465 14256 14270
)
"solvingPolicy.ml" 470 14445 14499 "solvingPolicy.ml" 470 14445 14503
type(
  Apron.Tcons1.earray Boolexpr.t
)
ident(
  int_ref cond "solvingPolicy.ml" 469 14414 14437 "solvingPolicy.ml" 469 14414 14441
)
"solvingPolicy.ml" 470 14445 14504 "solvingPolicy.ml" 470 14445 14508
type(
  'a0 Apron.Abstract1.t option
)
"solvingPolicy.ml" 470 14445 14451 "solvingPolicy.ml" 470 14445 14508
call(
  stack
)
type(
  'a0 Apron.Policy.t Boolexpr.t
)
"solvingPolicy.ml" 471 14509 14513 "solvingPolicy.ml" 471 14509 14514
type(
  Equation.transfer
)
"solvingPolicy.ml" 471 14509 14518 "solvingPolicy.ml" 471 14509 14526
type(
  string -> 'a0 Apron.Policy.t Boolexpr.t
)
ident(
  ext_ref Pervasives.failwith
)
"solvingPolicy.ml" 471 14509 14527 "solvingPolicy.ml" 471 14509 14529
type(
  string
)
"solvingPolicy.ml" 471 14509 14518 "solvingPolicy.ml" 471 14509 14529
call(
  stack
)
type(
  'a0 Apron.Policy.t Boolexpr.t
)
"solvingPolicy.ml" 468 14386 14388 "solvingPolicy.ml" 472 14530 14535
type(
  'a0 Apron.Policy.t Boolexpr.t
)
"solvingPolicy.ml" 474 14546 14553 "solvingPolicy.ml" 474 14546 14557
type(
  bool ref
)
ident(
  int_ref loop "solvingPolicy.ml" 433 13360 13370 "solvingPolicy.ml" 433 13360 13374
)
"solvingPolicy.ml" 474 14546 14558 "solvingPolicy.ml" 474 14546 14560
type(
  bool ref -> bool -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"solvingPolicy.ml" 474 14546 14561 "solvingPolicy.ml" 474 14546 14562
type(
  bool ref -> bool
)
ident(
  ext_ref Pervasives.( ! )
)
"solvingPolicy.ml" 474 14546 14562 "solvingPolicy.ml" 474 14546 14566
type(
  bool ref
)
ident(
  int_ref loop "solvingPolicy.ml" 433 13360 13370 "solvingPolicy.ml" 433 13360 13374
)
"solvingPolicy.ml" 474 14546 14561 "solvingPolicy.ml" 474 14546 14566
type(
  bool
)
"solvingPolicy.ml" 474 14546 14567 "solvingPolicy.ml" 474 14546 14569
type(
  bool -> bool -> bool
)
ident(
  ext_ref Pervasives.( || )
)
"solvingPolicy.ml" 474 14546 14571 "solvingPolicy.ml" 474 14546 14574
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"solvingPolicy.ml" 474 14546 14576 "solvingPolicy.ml" 474 14546 14588
type(
  'a0 Apron.Policy.man -> 'a0 policy -> 'a0 Apron.Policy.t Boolexpr.t -> bool
)
ident(
  int_ref policy_equal "solvingPolicy.ml" 13 302 306 "solvingPolicy.ml" 13 302 318
)
"solvingPolicy.ml" 474 14546 14589 "solvingPolicy.ml" 474 14546 14597
type(
  'a0 Apron.Policy.man
)
ident(
  int_ref pmanager "solvingPolicy.ml" 383 11965 11972 "solvingPolicy.ml" 383 11965 11980
)
"solvingPolicy.ml" 474 14546 14598 "solvingPolicy.ml" 474 14546 14607
type(
  'a0 policy
)
ident(
  int_ref oldpolicy "solvingPolicy.ml" 463 14156 14178 "solvingPolicy.ml" 463 14156 14187
)
"solvingPolicy.ml" 474 14546 14608 "solvingPolicy.ml" 474 14546 14614
type(
  'a0 Apron.Policy.t Boolexpr.t
)
ident(
  int_ref policy "solvingPolicy.ml" 467 14366 14377 "solvingPolicy.ml" 467 14366 14383
)
"solvingPolicy.ml" 474 14546 14575 "solvingPolicy.ml" 474 14546 14615
call(
  stack
)
type(
  bool
)
"solvingPolicy.ml" 474 14546 14570 "solvingPolicy.ml" 474 14546 14616
type(
  bool
)
"solvingPolicy.ml" 474 14546 14561 "solvingPolicy.ml" 474 14546 14616
type(
  bool
)
"solvingPolicy.ml" 474 14546 14553 "solvingPolicy.ml" 474 14546 14616
type(
  unit
)
"solvingPolicy.ml" 475 14618 14625 "solvingPolicy.ml" 475 14618 14631
type(
  'a0 policy
)
ident(
  int_ref policy "solvingPolicy.ml" 467 14366 14377 "solvingPolicy.ml" 467 14366 14383
)
"solvingPolicy.ml" 474 14546 14553 "solvingPolicy.ml" 475 14618 14631
type(
  'a0 policy
)
"solvingPolicy.ml" 467 14366 14373 "solvingPolicy.ml" 475 14618 14631
type(
  'a0 policy
)
"solvingPolicy.ml" 466 14310 14317 "solvingPolicy.ml" 475 14618 14631
type(
  'a0 policy
)
"solvingPolicy.ml" 465 14256 14263 "solvingPolicy.ml" 475 14618 14631
type(
  'a0 policy
)
"solvingPolicy.ml" 464 14191 14198 "solvingPolicy.ml" 475 14618 14631
type(
  'a0 policy
)
"solvingPolicy.ml" 463 14156 14161 "solvingPolicy.ml" 476 14632 14641
type(
  Equation.hedge -> 'a0 policy -> 'a0 policy
)
"solvingPolicy.ml" 477 14642 14647 "solvingPolicy.ml" 477 14642 14648
type(
  (Equation.hedge, 'a0 policy) Hashhe.t ref ->
  (Equation.hedge, 'a0 policy) Hashhe.t
)
ident(
  ext_ref Pervasives.( ! )
)
"solvingPolicy.ml" 477 14642 14648 "solvingPolicy.ml" 477 14642 14654
type(
  (Equation.hedge, 'a0 policy) Hashhe.t ref
)
ident(
  int_ref policy "solvingPolicy.ml" 425 13145 13155 "solvingPolicy.ml" 425 13145 13161
)
"solvingPolicy.ml" 477 14642 14647 "solvingPolicy.ml" 477 14642 14654
type(
  (Equation.hedge, 'a0 policy) Hashhe.t
)
"solvingPolicy.ml" 462 14142 14145 "solvingPolicy.ml" 477 14642 14654
call(
  stack
)
type(
  (Equation.hedge, 'a0 policy) Hashhe.t
)
"solvingPolicy.ml" 461 14131 14132 "solvingPolicy.ml" 477 14642 14654
type(
  unit
)
"solvingPolicy.ml" 480 14720 14721 "solvingPolicy.ml" 480 14720 14727
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref
)
ident(
  int_ref output "solvingPolicy.ml" 391 12210 12218 "solvingPolicy.ml" 391 12210 12224
)
"solvingPolicy.ml" 480 14720 14728 "solvingPolicy.ml" 480 14720 14730
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref ->
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option -> unit
)
ident(
  ext_ref Pervasives.( := )
)
"solvingPolicy.ml" 480 14720 14731 "solvingPolicy.ml" 480 14720 14732
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref ->
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option
)
ident(
  ext_ref Pervasives.( ! )
)
"solvingPolicy.ml" 480 14720 14732 "solvingPolicy.ml" 480 14720 14738
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref
)
ident(
  int_ref result "solvingPolicy.ml" 432 13329 13339 "solvingPolicy.ml" 432 13329 13345
)
"solvingPolicy.ml" 480 14720 14731 "solvingPolicy.ml" 480 14720 14738
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option
)
"solvingPolicy.ml" 480 14720 14721 "solvingPolicy.ml" 480 14720 14739
type(
  unit
)
"solvingPolicy.ml" 461 14131 14132 "solvingPolicy.ml" 480 14720 14739
type(
  unit
)
"solvingPolicy.ml" 460 14115 14116 "solvingPolicy.ml" 480 14720 14739
type(
  unit
)
"solvingPolicy.ml" 455 13944 13945 "solvingPolicy.ml" 480 14720 14739
type(
  unit
)
"solvingPolicy.ml" 453 13909 13910 "solvingPolicy.ml" 480 14720 14739
type(
  unit
)
"solvingPolicy.ml" 435 13410 13411 "solvingPolicy.ml" 480 14720 14739
type(
  unit
)
"solvingPolicy.ml" 434 13389 13395 "solvingPolicy.ml" 481 14740 14750
type(
  unit
)
"solvingPolicy.ml" 482 14752 14770 "solvingPolicy.ml" 482 14752 14771
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref ->
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option
)
ident(
  ext_ref Pervasives.( ! )
)
"solvingPolicy.ml" 482 14752 14771 "solvingPolicy.ml" 482 14752 14777
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option ref
)
ident(
  int_ref result "solvingPolicy.ml" 432 13329 13339 "solvingPolicy.ml" 432 13329 13345
)
"solvingPolicy.ml" 482 14752 14770 "solvingPolicy.ml" 482 14752 14777
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option
)
"solvingPolicy.ml" 483 14783 14796 "solvingPolicy.ml" 483 14783 14797
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output
)
ident(
  def x "solvingPolicy.ml" 483 14783 14801 "solvingPolicy.ml" 483 14783 14802
)
"solvingPolicy.ml" 483 14783 14791 "solvingPolicy.ml" 483 14783 14797
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option
)
"solvingPolicy.ml" 483 14783 14801 "solvingPolicy.ml" 483 14783 14802
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output
)
ident(
  int_ref x "solvingPolicy.ml" 483 14783 14796 "solvingPolicy.ml" 483 14783 14797
)
"solvingPolicy.ml" 484 14803 14811 "solvingPolicy.ml" 484 14803 14815
type(
  (Equation.vertex, Equation.hedge, 'a0 Apron.Abstract1.t, unit)
  Fixpoint.output option
)
"solvingPolicy.ml" 484 14803 14819 "solvingPolicy.ml" 484 14803 14827
type(
  string -> (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
)
ident(
  ext_ref Pervasives.failwith
)
"solvingPolicy.ml" 484 14803 14828 "solvingPolicy.ml" 484 14803 14830
type(
  string
)
"solvingPolicy.ml" 484 14803 14819 "solvingPolicy.ml" 484 14803 14830
call(
  tail
)
type(
  (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
)
"solvingPolicy.ml" 482 14752 14758 "solvingPolicy.ml" 485 14831 14840
type(
  (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
)
"solvingPolicy.ml" 434 13389 13395 "solvingPolicy.ml" 485 14831 14840
type(
  (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
)
"solvingPolicy.ml" 433 13360 13366 "solvingPolicy.ml" 485 14831 14840
type(
  (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
)
"solvingPolicy.ml" 432 13329 13335 "solvingPolicy.ml" 485 14831 14840
type(
  (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
)
"solvingPolicy.ml" 426 13201 13207 "solvingPolicy.ml" 485 14831 14840
type(
  (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
)
"solvingPolicy.ml" 425 13145 13151 "solvingPolicy.ml" 485 14831 14840
type(
  (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
)
"solvingPolicy.ml" 415 12888 12897 "solvingPolicy.ml" 486 14841 14848
type(
  (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
)
"solvingPolicy.ml" 412 12801 12805 "solvingPolicy.ml" 486 14841 14848
type(
  (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
)
"solvingPolicy.ml" 393 12303 12307 "solvingPolicy.ml" 486 14841 14848
type(
  (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
)
"solvingPolicy.ml" 392 12241 12245 "solvingPolicy.ml" 486 14841 14848
type(
  (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
)
"solvingPolicy.ml" 391 12210 12214 "solvingPolicy.ml" 486 14841 14848
type(
  (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
)
"solvingPolicy.ml" 389 12171 12175 "solvingPolicy.ml" 486 14841 14848
type(
  (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
)
"solvingPolicy.ml" 388 12108 12112 "solvingPolicy.ml" 486 14841 14848
type(
  (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
)
type(
  (Spl_syn.point, int, 'a0 Apron.Abstract1.t, unit) Fixpoint.output
)
