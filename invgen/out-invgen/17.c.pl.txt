INVGEN 0.1
{agupta,rybal}@mpi-sws.mpg.de
reading input from frontend-out/17.c.pl...done.
creating straight line code between cutpoints...done.

path([14,13,19,10,8]): pc(main-9-10) pc(main-1-8) {j>=i,n'=n,k'=k,j'=j,i'=i+1}
[j>=i] [n'=n,k'=k,j'=j,i'=i+1]
path([12,11,9,8]): pc(main-9-10) pc(main-9-10) {j+1=<i,n'=n,k'=k+(i-j),j'=j+1,i'=i}
[j+1=<i] [n'=n,k'=k+(i-j),j'=j+1,i'=i]
path([18,17,15,20,6,4]): pc(main-1-8) pc(main-ret-0) {i>=n,k>=n,n'=n,k'=k,j'=j,i'=i}
[i>=n,k>=n] [n'=n,k'=k,j'=j,i'=i]
path([16,15,20,6,4]): pc(main-1-8) pc(main-err-0) {i>=n,k+1=<n,n'=n,k'=k,j'=j,i'=i}
[i>=n,k+1=<n] [n'=n,k'=k,j'=j,i'=i]
path([7,5,4]): pc(main-1-8) pc(main-9-10) {i+1=<n,n'=n,k'=k,j'=0,i'=i}
[i+1=<n] [n'=n,k'=k,j'=0,i'=i]
path([3,2,1]): pc(main-0-7) pc(main-1-8) {n'=n,k'=1,j'=0,i'=1}
[] [n'=n,k'=1,j'=0,i'=1]

#Printing Strengthening ==
#pc(main-9-10): [j-i=<1,i>=1,j>=0,n>=2]
#pc(main-1-8): [j-2*i=< -2,j-i=<0,j-i>= -1]
#=========================
#Start Tracing for depth 0...#.. done in 0 ms
#=========================
#solving for path to error: path([16,15,20,6,4])..# cleared. 
#=========================
#contributed facts:
#pc(main-1-8): [k-i>=0]
#pc(main-9-10): [k-j-i>=0]
#=========================
#unproven: path([18,17,15,20,6,4])
#=========================
#Invariant:
#pc(main-1-8): [j-i>= -1,j-2*i=< -2,k-i>=0]
#pc(main-9-10): [i>=1,j-i=<1,k-j-i>=0]
#Total Solving time: 60 ms
