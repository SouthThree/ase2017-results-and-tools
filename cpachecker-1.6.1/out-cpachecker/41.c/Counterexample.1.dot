digraph ARG {
node [style="filled" shape="box" color="white"]
0 [fillcolor="cornflowerblue" label="0 @ N8\nmain entry\nAbstractionState: ABS0: true\n" id="0"]
30 [label="30 @ N30\nmain\n" id="30"]
31 [label="31 @ N9\nmain\n" id="31"]
32 [label="32 @ N1\n__VERIFIER_assume entry\n" id="32"]
33 [label="33 @ N2\n__VERIFIER_assume\n" id="33"]
60 [fillcolor="cornflowerblue" label="60 @ N3\n__VERIFIER_assume\nAbstractionState: ABS9\n" id="60"]
62 [label="62 @ N5\n__VERIFIER_assume\n" id="62"]
63 [label="63 @ N0\n__VERIFIER_assume exit\n" id="63"]
64 [label="64 @ N10\nmain\n" id="64"]
67 [label="67 @ N11\nmain\n" id="67"]
73 [label="73 @ N12\nmain\n" id="73"]
74 [label="74 @ N17\nmain\n" id="74"]
76 [fillcolor="cornflowerblue" label="76 @ N18\nmain\nAbstractionState: ABS11\n" id="76"]
77 [label="77 @ N19\nmain\n" id="77"]
84 [label="84 @ N24\nmain\n" id="84"]
86 [fillcolor="cornflowerblue" label="86 @ N18\nmain\nAbstractionState: ABS13: true\n" id="86"]
88 [label="88 @ N20\nmain\n" id="88"]
89 [label="89 @ N25\nmain\n" id="89"]
91 [label="91 @ N27\nmain\n" id="91"]
93 [fillcolor="red" label="93 @ N28\nmain\nAbstractionState: ABS14\n AutomatonState: ErrorLabelAutomaton: _predefinedState_ERROR\n" id="93"]
69 [label="69 @ N13\nmain\n" id="69"]
70 [label="70 @ N14\nmain\n" id="70"]
71 [label="71 @ N15\nmain\n" id="71"]
0 -> 30 [color="red" label="Line 0: \lINIT GLOBAL VARS\l" id="0 -> 30"]
30 -> 31 [color="red" label="Lines 1 - 0: \lint __VERIFIER_nondet_int();\lvoid __VERIFIER_assume(int i);\lint main(int n, int flag);\lFunction start dummy edge\l" id="30 -> 31"]
31 -> 32 [color="red" label="Line 13: \l__VERIFIER_assume(n >= 0)\l" id="31 -> 32"]
32 -> 33 [color="red" label="Line 0: \lFunction start dummy edge\l" id="32 -> 33"]
33 -> 60 [color="red" label="Line 5: \lwhile\l" id="33 -> 60"]
66 -> 60 [style="dashed" weight="0" label="covered by"]
60 -> 61 [label="Line 5: \l[i == 0]\l" id="60 -> 61"]
60 -> 62 [color="red" label="Line 5: \l[!(i == 0)]\l" id="60 -> 62"]
62 -> 63 [color="red" label="Line 6: \lreturn;\l" id="62 -> 63"]
63 -> 64 [color="red" label="Line 13: \lReturn edge from __VERIFIER_assume to main\l" id="63 -> 64"]
64 -> 67 [color="red" label="Line 14: \lint k = 1;\l" id="64 -> 67"]
67 -> 69 [color="red" label="Line 15: \l[!(flag == 0)]\l" id="67 -> 69"]
67 -> 73 [label="Line 15: \l[flag == 0]\l" id="67 -> 73"]
73 -> 74 [color="red" label="Lines 19 - 19: \lint i = 0;\lint j = 0;\l" id="73 -> 74"]
74 -> 76 [color="red" label="Line 20: \lwhile\l" id="74 -> 76"]
76 -> 77 [color="red" label="Line 20: \l[i <= n]\l" id="76 -> 77"]
76 -> 78 [label="Line 20: \l[!(i <= n)]\l" id="76 -> 78"]
77 -> 84 [color="red" label="Lines 21 - 22: \lint __CPAchecker_TMP_0 = i;\li = i + 1;\l__CPAchecker_TMP_0;\lj = j + i;\l" id="77 -> 84"]
84 -> 86 [color="red" label="Line 0: \l\l" id="84 -> 86"]
86 -> 87 [label="Line 20: \l[i <= n]\l" id="86 -> 87"]
86 -> 88 [color="red" label="Line 20: \l[!(i <= n)]\l" id="86 -> 88"]
88 -> 89 [color="red" label="Line 24: \lint z = (k + i) + j;\l" id="88 -> 89"]
89 -> 90 [label="Line 25: \l[z > (2 * n)]\l" id="89 -> 90"]
89 -> 91 [color="red" label="Line 25: \l[!(z > (2 * n))]\l" id="89 -> 91"]
91 -> 93 [color="red" label="Line 26: \lLabel: ERROR\l" id="91 -> 93"]
69 -> 70 [color="red" label="Line 16: \lk = __VERIFIER_nondet_int();\l" id="69 -> 70"]
70 -> 71 [color="red" label="Line 17: \lassume(k >= 0);\l" id="70 -> 71"]
71 -> 73 [color="red" label="Line 0: \l\l" id="71 -> 73"]
}
