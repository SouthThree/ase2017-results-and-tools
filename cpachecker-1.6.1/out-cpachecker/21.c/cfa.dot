digraph CFA {
8 [shape="circle" label="N8\n39"]
45 [shape="circle" label="N45\n38"]
46 [shape="circle" label="N46\n37"]
47 [shape="circle" label="N47\n36"]
48 [shape="circle" label="N48\n35"]
9 [shape="circle" label="N9\n34"]
10 [shape="circle" label="N10\n33"]
11 [shape="circle" label="N11\n32"]
12 [shape="circle" label="N12\n31"]
13 [shape="circle" label="N13\n30"]
14 [shape="circle" label="N14\n29"]
15 [shape="circle" label="N15\n28"]
16 [shape="circle" label="N16\n27"]
17 [shape="circle" label="N17\n26"]
1 [shape="circle" label="N1\n5"]
2 [shape="circle" label="N2\n4"]
3 [shape="doublecircle" label="N3\n3"]
5 [shape="circle" label="N5\n2"]
0 [shape="circle" label="N0\n1"]
19 [shape="circle" label="N19\n24"]
20 [shape="circle" label="N20\n23"]
21 [shape="circle" label="N21\n22"]
22 [shape="doublecircle" label="N22\n21"]
24 [shape="diamond" label="N24\n20"]
41 [shape="circle" label="N41\n19"]
42 [shape="doublecircle" label="N42\n18"]
40 [shape="circle" label="N40\n17"]
7 [shape="circle" label="N7\n16"]
23 [shape="circle" label="N23\n15"]
25 [shape="circle" label="N25\n14"]
26 [shape="circle" label="N26\n13"]
27 [shape="circle" label="N27\n12"]
31 [shape="circle" label="N31\n11"]
32 [shape="diamond" label="N32\n10"]
30 [shape="circle" label="N30\n9"]
34 [shape="circle" label="N34\n8"]
28 [shape="diamond" label="N28\n5"]
37 [shape="circle" label="N37\n4"]
39 [shape="circle" label="N39\n3"]
35 [shape="circle" label="N35\n0"]
36 [shape="circle" label="N36\n2"]
38 [shape="circle" label="N38\n1"]
29 [shape="circle" label="N29\n7"]
33 [shape="circle" label="N33\n6"]
18 [shape="circle" label="N18\n25"]
4 [shape="circle" label="N4\n0"]
node [shape="circle"]
subgraph cluster___VERIFIER_assume {
label="__VERIFIER_assume()"
1 -> 2 [label="Function start dummy edge"]
2 -> 3 [label="while"]
3 -> 4 [label="[i == 0]"]
3 -> 5 [label="[!(i == 0)]"]
5 -> 0 [label="return;"]
4 -> 3 [label=""]}
subgraph cluster_main {
label="main()"
8 -> 45 [label="INIT GLOBAL VARS"]
45 -> 46 [label="int __VERIFIER_nondet_int();"]
46 -> 47 [label="void __VERIFIER_assume(int i);"]
47 -> 48 [label="int main(int argc, char *argv[]);"]
48 -> 9 [label="Function start dummy edge"]
9 -> 10 [label="int c1 = 4000;"]
10 -> 11 [label="int c2 = 2000;"]
11 -> 12 [label="int v;"]
12 -> 13 [label="int i;"]
13 -> 14 [label="int k;"]
14 -> 15 [label="int j;"]
15 -> 16 [label="int n;"]
16 -> 17 [label="n = __VERIFIER_nondet_int();"]
17 -> 18 [label="__VERIFIER_assume(n > 0);" style="dotted" arrowhead="empty"]
19 -> 20 [label="k = 0;"]
20 -> 21 [label="i = 0;"]
21 -> 22 [label="while"]
22 -> 23 [label="[i < n]"]
22 -> 24 [label="[!(i < n)]"]
24 -> 40 [label="[k > n]"]
24 -> 41 [label="[!(k > n)]"]
41 -> 42 [label="Label: ERROR"]
42 -> 42 [label="Goto: ERROR"]
40 -> 7 [label="return 0;"]
23 -> 25 [label="int __CPAchecker_TMP_0 = i;"]
25 -> 26 [label="i = i + 1;"]
26 -> 27 [label="__CPAchecker_TMP_0;"]
27 -> 31 [label="int __CPAchecker_TMP_1;"]
31 -> 32 [label="__CPAchecker_TMP_1 = __VERIFIER_nondet_int();"]
32 -> 29 [label="[(__CPAchecker_TMP_1 % 2) == 0]"]
32 -> 30 [label="[!((__CPAchecker_TMP_1 % 2) == 0)]"]
30 -> 34 [label="v = 1;"]
34 -> 28 [label=""]
28 -> 36 [label="[v == 0]"]
28 -> 37 [label="[!(v == 0)]"]
37 -> 39 [label="k = k + c2;"]
39 -> 35 [label=""]
35 -> 22 [label=""]
36 -> 38 [label="k = k + c1;"]
38 -> 35 [label=""]
29 -> 33 [label="v = 0;"]
33 -> 28 [label=""]
18 -> 19 [label="__VERIFIER_assume(n < 10);" style="dotted" arrowhead="empty"]}
17 -> 1 [label="__VERIFIER_assume(n > 0)"]
0 -> 18 [label="Return edge from __VERIFIER_assume to main"]
0 -> 19 [label="Return edge from __VERIFIER_assume to main"]
18 -> 1 [label="__VERIFIER_assume(n < 10)"]}