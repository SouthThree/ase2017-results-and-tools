(declare-fun |main::x| () Int)
(declare-fun |main::n| () Int)

0 (9) @1:
(assert true)

13 (15) @4:
(assert (let ((.cse0 (not (<= (+ (- |main::x|) |main::n| 1) 0)))) (ite (<= |main::x| 0) (and (<= |main::x| 1) .cse0) .cse0)))

11 (13) @4:
(assert (and (<= |main::x| 1) (not (<= (+ (- |main::x|) |main::n| 1) 0))))

9 (11) @4:
(assert (let ((.cse0 (<= |main::x| 0)) (.cse1 (<= |main::x| 1))) (ite (= |main::x| |main::n|) (and .cse0 .cse1 (not (<= (+ (- |main::x|) |main::n| 1) 0))) (and .cse0 .cse1))))

15 () @4:
(assert (let ((.cse0 (not (<= (+ (- |main::x|) |main::n| 1) 0)))) (ite (<= |main::x| 0) (and (<= |main::x| 1) .cse0) .cse0)))

