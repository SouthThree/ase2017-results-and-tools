digraph CFA {
1 [shape="circle" label="N1\n27"]
27 [shape="circle" label="N27\n26"]
28 [shape="circle" label="N28\n25"]
2 [shape="circle" label="N2\n24"]
3 [shape="circle" label="N3\n23"]
4 [shape="circle" label="N4\n22"]
5 [shape="circle" label="N5\n21"]
6 [shape="circle" label="N6\n20"]
7 [shape="doublecircle" label="N7\n19"]
9 [shape="diamond" label="N9\n18"]
21 [shape="circle" label="N21\n13"]
0 [shape="circle" label="N0\n12"]
22 [shape="diamond" label="N22\n17"]
24 [shape="circle" label="N24\n16"]
25 [shape="doublecircle" label="N25\n15"]
23 [shape="circle" label="N23\n14"]
8 [shape="circle" label="N8\n11"]
10 [shape="circle" label="N10\n10"]
11 [shape="circle" label="N11\n9"]
12 [shape="circle" label="N12\n8"]
13 [shape="circle" label="N13\n7"]
14 [shape="circle" label="N14\n6"]
15 [shape="diamond" label="N15\n5"]
16 [shape="circle" label="N16\n0"]
17 [shape="circle" label="N17\n4"]
18 [shape="circle" label="N18\n3"]
19 [shape="circle" label="N19\n2"]
20 [shape="circle" label="N20\n1"]
node [shape="circle"]
subgraph cluster_main {
label="main()"
1 -> 27 [label="INIT GLOBAL VARS"]
27 -> 28 [label="void main(int n);"]
28 -> 2 [label="Function start dummy edge"]
2 -> 3 [label="int x = 0;"]
3 -> 4 [label="int y = 0;"]
4 -> 5 [label="int i = 0;"]
5 -> 6 [label="int m = 10;"]
6 -> 7 [label="while"]
7 -> 8 [label="[i < n]"]
7 -> 9 [label="[!(i < n)]"]
9 -> 22 [label="[i == m]"]
9 -> 21 [label="[!(i == m)]"]
21 -> 0 [label="default return"]
22 -> 23 [label="[x == (2 * y)]"]
22 -> 24 [label="[!(x == (2 * y))]"]
24 -> 25 [label="Label: ERROR"]
25 -> 25 [label="Goto: ERROR"]
23 -> 21 [label=""]
8 -> 10 [label="int __CPAchecker_TMP_0 = i;"]
10 -> 11 [label="i = i + 1;"]
11 -> 12 [label="__CPAchecker_TMP_0;"]
12 -> 13 [label="int __CPAchecker_TMP_1 = x;"]
13 -> 14 [label="x = x + 1;"]
14 -> 15 [label="__CPAchecker_TMP_1;"]
15 -> 17 [label="[(i % 2) == 0]"]
15 -> 16 [label="[!((i % 2) == 0)]"]
16 -> 7 [label=""]
17 -> 18 [label="int __CPAchecker_TMP_2 = y;"]
18 -> 19 [label="y = y + 1;"]
19 -> 20 [label="__CPAchecker_TMP_2;"]
20 -> 16 [label=""]}
}