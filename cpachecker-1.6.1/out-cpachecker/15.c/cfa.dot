digraph CFA {
8 [shape="circle" label="N8\n26"]
32 [shape="circle" label="N32\n25"]
33 [shape="circle" label="N33\n24"]
34 [shape="circle" label="N34\n23"]
35 [shape="circle" label="N35\n22"]
9 [shape="circle" label="N9\n21"]
10 [shape="circle" label="N10\n20"]
11 [shape="circle" label="N11\n19"]
12 [shape="circle" label="N12\n18"]
13 [shape="circle" label="N13\n17"]
14 [shape="circle" label="N14\n16"]
1 [shape="circle" label="N1\n5"]
2 [shape="circle" label="N2\n4"]
3 [shape="doublecircle" label="N3\n3"]
5 [shape="circle" label="N5\n2"]
0 [shape="circle" label="N0\n1"]
16 [shape="circle" label="N16\n14"]
17 [shape="circle" label="N17\n13"]
18 [shape="doublecircle" label="N18\n12"]
20 [shape="diamond" label="N20\n11"]
28 [shape="circle" label="N28\n10"]
29 [shape="doublecircle" label="N29\n9"]
27 [shape="circle" label="N27\n8"]
7 [shape="circle" label="N7\n7"]
19 [shape="circle" label="N19\n6"]
21 [shape="circle" label="N21\n5"]
22 [shape="circle" label="N22\n4"]
23 [shape="circle" label="N23\n3"]
24 [shape="circle" label="N24\n2"]
25 [shape="circle" label="N25\n1"]
26 [shape="circle" label="N26\n0"]
15 [shape="circle" label="N15\n15"]
4 [shape="circle" label="N4\n0"]
node [shape="circle"]
subgraph cluster___VERIFIER_assume {
label="__VERIFIER_assume()"
1 -> 2 [label="Function start dummy edge"]
2 -> 3 [label="while"]
3 -> 4 [label="[i == 0]"]
3 -> 5 [label="[!(i == 0)]"]
5 -> 0 [label="return;"]
4 -> 3 [label=""]}
subgraph cluster_main {
label="main()"
8 -> 32 [label="INIT GLOBAL VARS"]
32 -> 33 [label="int __VERIFIER_nondet_int();"]
33 -> 34 [label="void __VERIFIER_assume(int i);"]
34 -> 35 [label="int main(int argc, char *argv[]);"]
35 -> 9 [label="Function start dummy edge"]
9 -> 10 [label="int i;"]
10 -> 11 [label="int k;"]
11 -> 12 [label="int j;"]
12 -> 13 [label="int n;"]
13 -> 14 [label="n = __VERIFIER_nondet_int();"]
14 -> 15 [label="__VERIFIER_assume(n > 0);" style="dotted" arrowhead="empty"]
16 -> 17 [label="j = 0;"]
17 -> 18 [label="while"]
18 -> 19 [label="[j < n]"]
18 -> 20 [label="[!(j < n)]"]
20 -> 27 [label="[k >= 0]"]
20 -> 28 [label="[!(k >= 0)]"]
28 -> 29 [label="Label: ERROR"]
29 -> 29 [label="Goto: ERROR"]
27 -> 7 [label="return 0;"]
19 -> 21 [label="int __CPAchecker_TMP_0 = j;"]
21 -> 22 [label="j = j + 1;"]
22 -> 23 [label="__CPAchecker_TMP_0;"]
23 -> 24 [label="int __CPAchecker_TMP_1 = k;"]
24 -> 25 [label="k = k - 1;"]
25 -> 26 [label="__CPAchecker_TMP_1;"]
26 -> 18 [label=""]
15 -> 16 [label="__VERIFIER_assume(k > n);" style="dotted" arrowhead="empty"]}
14 -> 1 [label="__VERIFIER_assume(n > 0)"]
0 -> 15 [label="Return edge from __VERIFIER_assume to main"]
0 -> 16 [label="Return edge from __VERIFIER_assume to main"]
15 -> 1 [label="__VERIFIER_assume(k > n)"]}