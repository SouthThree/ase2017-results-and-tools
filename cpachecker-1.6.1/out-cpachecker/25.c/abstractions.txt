(declare-fun |main::i| () Int)
(declare-fun |main::j| () Int)
(declare-fun |main::x| () Int)
(declare-fun |main::y| () Int)

18 () @19:
(assert (let ((.cse0 (- |main::x|))) (and (>= |main::i| |main::j|) (<= |main::y| |main::x|) (<= (+ |main::y| .cse0) 0) (<= |main::x| |main::y|) (not (<= (+ |main::y| .cse0 1) 0)) (<= |main::j| |main::i|) (<= |main::j| (+ |main::i| (- 1))))))

19 () @14:
(assert (let ((.cse0 (- |main::x|))) (and (>= |main::i| |main::j|) (<= |main::y| |main::x|) (<= (+ |main::y| .cse0) 0) (<= |main::x| |main::y|) (not (<= (+ |main::y| .cse0 1) 0)) (<= |main::j| |main::i|) (not (<= |main::j| (+ |main::i| (- 1)))))))

21 () @19:
(assert (let ((.cse0 (- |main::x|))) (and (>= |main::i| |main::j|) (<= |main::y| |main::x|) (<= (+ |main::y| .cse0) 0) (<= |main::x| |main::y|) (not (<= (+ |main::y| .cse0 1) 0)) (<= |main::j| |main::i|) (<= |main::j| (+ |main::i| (- 1))))))

17 (18,20) @19:
(assert (let ((.cse0 (- |main::x|))) (and (>= |main::i| |main::j|) (<= |main::y| |main::x|) (<= (+ |main::y| .cse0) 0) (<= |main::x| |main::y|) (not (<= (+ |main::y| .cse0 1) 0)) (<= |main::j| |main::i|) (<= |main::j| (+ |main::i| (- 1))))))

15 (16) @14:
(assert (let ((.cse0 (- |main::x|))) (and (>= |main::i| |main::j|) (<= |main::y| |main::x|) (<= (+ |main::y| .cse0) 0) (<= |main::x| |main::y|) (not (<= (+ |main::y| .cse0 1) 0)) (<= |main::j| |main::i|) (not (<= |main::j| (+ |main::i| (- 1)))))))

20 (21) @14:
(assert (let ((.cse0 (- |main::x|))) (and (>= |main::i| |main::j|) (<= |main::y| |main::x|) (<= (+ |main::y| .cse0) 0) (<= |main::x| |main::y|) (not (<= (+ |main::y| .cse0 1) 0)) (<= |main::j| |main::i|) (<= |main::j| (+ |main::i| (- 1))))))

0 (15) @8:
(assert true)

16 (19,17) @19:
(assert (let ((.cse0 (- |main::x|))) (and (>= |main::i| |main::j|) (<= |main::y| |main::x|) (<= (+ |main::y| .cse0) 0) (<= |main::x| |main::y|) (not (<= (+ |main::y| .cse0 1) 0)) (<= |main::j| |main::i|) (not (<= |main::j| (+ |main::i| (- 1)))))))

