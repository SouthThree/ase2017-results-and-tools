digraph main {
1 [shape="circle" label="N1\n34"]
33 [shape="circle" label="N33\n33"]
7 [shape="doublecircle" label="N7\n25"]
10 [shape="circle" label="N10\n24"]
11 [shape="diamond" label="N11\n23"]
9 [shape="diamond" label="N9\n4"]
8 [shape="circle" label="N8\n22"]
12 [shape="doublecircle" label="N12\n21"]
15 [shape="circle" label="N15\n20"]
16 [shape="diamond" label="N16\n19"]
14 [shape="circle" label="N14\n7"]
13 [shape="diamond" label="N13\n18"]
18 [shape="circle" label="N18\n17"]
17 [shape="diamond" label="N17\n13"]
23 [shape="circle" label="N23\n12"]
22 [shape="circle" label="N22\n8"]
19 [shape="circle" label="N19\n16"]
27 [shape="circle" label="N27\n6"]
29 [shape="circle" label="N29\n1"]
30 [shape="circle" label="N30\n3"]
31 [shape="doublecircle" label="N31\n2"]
0 [shape="circle" label="N0\n0"]
33 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">33</td><td align="left">int __VERIFIER_nondet_int();</td></tr><tr><td align="right">34</td><td align="left">void main();</td></tr><tr><td align="right">35</td><td align="left">Function start dummy edge</td></tr><tr><td align="right">2</td><td align="left">int w = 1;</td></tr><tr><td align="right">3</td><td align="left">int x = 0;</td></tr><tr><td align="right">4</td><td align="left">int y = 0;</td></tr><tr><td align="right">5</td><td align="left">int z = 0;</td></tr><tr><td align="right">6</td><td align="left">while</td></tr></table>>]
33 -> 7[label=""]
23 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">23</td><td align="left">int __CPAchecker_TMP_3 = y;</td></tr><tr><td align="right">24</td><td align="left">y = y + 1;</td></tr><tr><td align="right">25</td><td align="left">__CPAchecker_TMP_3;</td></tr><tr><td align="right">26</td><td align="left"></td></tr></table>>]
23 -> 22[label=""]
19 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">19</td><td align="left">x = x + 1;</td></tr><tr><td align="right">20</td><td align="left">__CPAchecker_TMP_2;</td></tr><tr><td align="right">21</td><td align="left"></td></tr></table>>]
19 -> 17[label=""]
27 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">27</td><td align="left">w = z + 1;</td></tr><tr><td align="right">28</td><td align="left"></td></tr></table>>]
27 -> 7[label=""]
1 -> 33 [label="INIT GLOBAL VARS" fontname="Courier New"]
7 -> 10 [label="int __CPAchecker_TMP_0;" fontname="Courier New"]
11 -> 9 [label="[__CPAchecker_TMP_0 == 0]" fontname="Courier New"]
11 -> 8 [label="[!(__CPAchecker_TMP_0 == 0)]" fontname="Courier New"]
12 -> 15 [label="int __CPAchecker_TMP_1;" fontname="Courier New"]
16 -> 14 [label="[__CPAchecker_TMP_1 == 0]" fontname="Courier New"]
16 -> 13 [label="[!(__CPAchecker_TMP_1 == 0)]" fontname="Courier New"]
13 -> 18 [label="[(w % 2) == 1]" fontname="Courier New"]
13 -> 17 [label="[!((w % 2) == 1)]" fontname="Courier New"]
17 -> 23 [label="[(z % 2) == 0]" fontname="Courier New"]
17 -> 22 [label="[!((z % 2) == 0)]" fontname="Courier New"]
22 -> 12 [label="" fontname="Courier New"]
18 -> 19 [label="int __CPAchecker_TMP_2 = x;" fontname="Courier New"]
14 -> 27 [label="z = x + y;" fontname="Courier New"]
9 -> 29 [label="[x == y]" fontname="Courier New"]
9 -> 30 [label="[!(x == y)]" fontname="Courier New"]
31 -> 31 [label="Goto: ERROR" fontname="Courier New"]
10 -> 11 [label="__CPAchecker_TMP_0 = __VERIFIER_nondet_int();" fontname="Courier New"]
8 -> 12 [label="while" fontname="Courier New"]
15 -> 16 [label="__CPAchecker_TMP_1 = __VERIFIER_nondet_int();" fontname="Courier New"]
30 -> 31 [label="Label: ERROR" fontname="Courier New"]
29 -> 0 [label="default return" fontname="Courier New"]
}