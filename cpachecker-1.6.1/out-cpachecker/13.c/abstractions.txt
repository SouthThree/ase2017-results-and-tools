(declare-fun |main::k| () Int)
(declare-fun |main::j| () Int)
(declare-fun |main::flag| () Int)

0 (16) @1:
(assert true)

18 () @5:
(assert (let ((.cse12 (* 2 |main::k|))) (let ((.cse10 (- |main::k|)) (.cse11 (- |main::j|)) (.cse0 (+ .cse12 2))) (let ((.cse1 (<= .cse12 (+ |main::j| (- 2)))) (.cse2 (<= |main::j| .cse0)) (.cse3 (<= 0 |main::k|)) (.cse4 (<= |main::k| 0)) (.cse5 (<= (+ .cse11 .cse12 2) 0)) (.cse6 (<= (+ .cse11 .cse12 3) 0)) (.cse7 (<= .cse10 0)) (.cse8 (<= (+ .cse10 1) 0)) (.cse9 (= |main::flag| 0))) (ite (= |main::j| .cse0) (and .cse1 .cse2 .cse3 (not .cse4) .cse5 (not .cse6) .cse7 .cse8 .cse9) (and .cse1 (not .cse2) .cse3 .cse4 .cse5 .cse6 .cse7 (not .cse8) (not .cse9)))))))

17 (18) @5:
(assert (let ((.cse12 (* 2 |main::k|))) (let ((.cse10 (- |main::k|)) (.cse11 (- |main::j|)) (.cse0 (+ .cse12 2))) (let ((.cse1 (<= .cse12 (+ |main::j| (- 2)))) (.cse2 (<= |main::j| .cse0)) (.cse3 (<= 0 |main::k|)) (.cse4 (<= |main::k| 0)) (.cse5 (<= (+ .cse11 .cse12 2) 0)) (.cse6 (<= (+ .cse11 .cse12 3) 0)) (.cse7 (<= .cse10 0)) (.cse8 (<= (+ .cse10 1) 0)) (.cse9 (= |main::flag| 0))) (ite (= |main::j| .cse0) (and .cse1 .cse2 .cse3 (not .cse4) .cse5 (not .cse6) .cse7 .cse8 .cse9) (and .cse1 (not .cse2) .cse3 .cse4 .cse5 .cse6 .cse7 (not .cse8) (not .cse9)))))))

16 (17) @5:
(assert (let ((.cse1 (* 2 |main::k|))) (let ((.cse0 (+ .cse1 2)) (.cse2 (- |main::j|)) (.cse3 (- |main::k|))) (and (= |main::j| .cse0) (<= .cse1 (+ |main::j| (- 2))) (<= |main::j| .cse0) (<= 0 |main::k|) (<= |main::k| 0) (<= (+ .cse2 .cse1 2) 0) (not (<= (+ .cse2 .cse1 3) 0)) (<= .cse3 0) (not (<= (+ .cse3 1) 0))))))

