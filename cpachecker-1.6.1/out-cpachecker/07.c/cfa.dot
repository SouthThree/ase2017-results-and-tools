digraph CFA {
8 [shape="circle" label="N8\n27"]
32 [shape="circle" label="N32\n26"]
33 [shape="circle" label="N33\n25"]
34 [shape="circle" label="N34\n24"]
35 [shape="circle" label="N35\n23"]
9 [shape="circle" label="N9\n22"]
10 [shape="circle" label="N10\n21"]
1 [shape="circle" label="N1\n5"]
2 [shape="circle" label="N2\n4"]
3 [shape="doublecircle" label="N3\n3"]
5 [shape="circle" label="N5\n2"]
0 [shape="circle" label="N0\n1"]
11 [shape="circle" label="N11\n20"]
12 [shape="circle" label="N12\n19"]
13 [shape="circle" label="N13\n18"]
14 [shape="circle" label="N14\n17"]
15 [shape="doublecircle" label="N15\n16"]
17 [shape="diamond" label="N17\n15"]
29 [shape="circle" label="N29\n14"]
30 [shape="doublecircle" label="N30\n13"]
28 [shape="circle" label="N28\n12"]
7 [shape="circle" label="N7\n11"]
16 [shape="circle" label="N16\n10"]
21 [shape="circle" label="N21\n9"]
22 [shape="diamond" label="N22\n8"]
19 [shape="circle" label="N19\n7"]
23 [shape="circle" label="N23\n6"]
24 [shape="circle" label="N24\n5"]
18 [shape="circle" label="N18\n1"]
27 [shape="circle" label="N27\n0"]
20 [shape="circle" label="N20\n4"]
25 [shape="circle" label="N25\n3"]
26 [shape="circle" label="N26\n2"]
4 [shape="circle" label="N4\n0"]
node [shape="circle"]
subgraph cluster___VERIFIER_assume {
label="__VERIFIER_assume()"
1 -> 2 [label="Function start dummy edge"]
2 -> 3 [label="while"]
3 -> 4 [label="[i == 0]"]
3 -> 5 [label="[!(i == 0)]"]
5 -> 0 [label="return;"]
4 -> 3 [label=""]}
subgraph cluster_main {
label="main()"
8 -> 32 [label="INIT GLOBAL VARS"]
32 -> 33 [label="int __VERIFIER_nondet_int();"]
33 -> 34 [label="void __VERIFIER_assume(int i);"]
34 -> 35 [label="void main();"]
35 -> 9 [label="Function start dummy edge"]
9 -> 10 [label="int n;"]
10 -> 11 [label="__VERIFIER_assume(n >= 0);" style="dotted" arrowhead="empty"]
11 -> 12 [label="int i = 0;"]
12 -> 13 [label="int a = 0;"]
13 -> 14 [label="int b = 0;"]
14 -> 15 [label="while"]
15 -> 16 [label="[i < n]"]
15 -> 17 [label="[!(i < n)]"]
17 -> 28 [label="[(a + b) == (3 * n)]"]
17 -> 29 [label="[!((a + b) == (3 * n))]"]
29 -> 30 [label="Label: ERROR"]
30 -> 30 [label="Goto: ERROR"]
28 -> 7 [label="default return"]
16 -> 21 [label="int __CPAchecker_TMP_0;"]
21 -> 22 [label="__CPAchecker_TMP_0 = __VERIFIER_nondet_int();"]
22 -> 20 [label="[__CPAchecker_TMP_0 == 0]"]
22 -> 19 [label="[!(__CPAchecker_TMP_0 == 0)]"]
19 -> 23 [label="a = a + 1;"]
23 -> 24 [label="b = b + 2;"]
24 -> 18 [label=""]
18 -> 27 [label="i = i + 1;"]
27 -> 15 [label=""]
20 -> 25 [label="a = a + 2;"]
25 -> 26 [label="b = b + 1;"]
26 -> 18 [label=""]}
10 -> 1 [label="__VERIFIER_assume(n >= 0)"]
0 -> 11 [label="Return edge from __VERIFIER_assume to main"]}