digraph CFA {
8 [shape="circle" label="N8\n24"]
30 [shape="circle" label="N30\n23"]
31 [shape="circle" label="N31\n22"]
32 [shape="circle" label="N32\n21"]
9 [shape="circle" label="N9\n20"]
1 [shape="circle" label="N1\n5"]
2 [shape="circle" label="N2\n4"]
3 [shape="doublecircle" label="N3\n3"]
5 [shape="circle" label="N5\n2"]
0 [shape="circle" label="N0\n1"]
12 [shape="circle" label="N12\n17"]
13 [shape="circle" label="N13\n16"]
14 [shape="circle" label="N14\n15"]
15 [shape="doublecircle" label="N15\n14"]
17 [shape="diamond" label="N17\n13"]
27 [shape="circle" label="N27\n12"]
28 [shape="doublecircle" label="N28\n11"]
26 [shape="circle" label="N26\n10"]
7 [shape="circle" label="N7\n9"]
16 [shape="circle" label="N16\n8"]
18 [shape="circle" label="N18\n7"]
19 [shape="circle" label="N19\n6"]
20 [shape="diamond" label="N20\n5"]
21 [shape="circle" label="N21\n0"]
22 [shape="circle" label="N22\n4"]
23 [shape="circle" label="N23\n3"]
24 [shape="circle" label="N24\n2"]
25 [shape="circle" label="N25\n1"]
11 [shape="circle" label="N11\n18"]
10 [shape="circle" label="N10\n19"]
4 [shape="circle" label="N4\n0"]
node [shape="circle"]
subgraph cluster___VERIFIER_assume {
label="__VERIFIER_assume()"
1 -> 2 [label="Function start dummy edge"]
2 -> 3 [label="while"]
3 -> 4 [label="[i == 0]"]
3 -> 5 [label="[!(i == 0)]"]
5 -> 0 [label="return;"]
4 -> 3 [label=""]}
subgraph cluster_main {
label="main()"
8 -> 30 [label="INIT GLOBAL VARS"]
30 -> 31 [label="void __VERIFIER_assume(int i);"]
31 -> 32 [label="void main(int n, int m);"]
32 -> 9 [label="Function start dummy edge"]
9 -> 10 [label="__VERIFIER_assume(n >= 0);" style="dotted" arrowhead="empty"]
12 -> 13 [label="int x = 0;"]
13 -> 14 [label="int y = m;"]
14 -> 15 [label="while"]
15 -> 16 [label="[x < n]"]
15 -> 17 [label="[!(x < n)]"]
17 -> 26 [label="[y == n]"]
17 -> 27 [label="[!(y == n)]"]
27 -> 28 [label="Label: ERROR"]
28 -> 28 [label="Goto: ERROR"]
26 -> 7 [label="default return"]
16 -> 18 [label="int __CPAchecker_TMP_0 = x;"]
18 -> 19 [label="x = x + 1;"]
19 -> 20 [label="__CPAchecker_TMP_0;"]
20 -> 22 [label="[x > m]"]
20 -> 21 [label="[!(x > m)]"]
21 -> 15 [label=""]
22 -> 23 [label="int __CPAchecker_TMP_1 = y;"]
23 -> 24 [label="y = y + 1;"]
24 -> 25 [label="__CPAchecker_TMP_1;"]
25 -> 21 [label=""]
11 -> 12 [label="__VERIFIER_assume(m < n);" style="dotted" arrowhead="empty"]
10 -> 11 [label="__VERIFIER_assume(m >= 0);" style="dotted" arrowhead="empty"]}
9 -> 1 [label="__VERIFIER_assume(n >= 0)"]
0 -> 10 [label="Return edge from __VERIFIER_assume to main"]
0 -> 11 [label="Return edge from __VERIFIER_assume to main"]
0 -> 12 [label="Return edge from __VERIFIER_assume to main"]
11 -> 1 [label="__VERIFIER_assume(m < n)"]
10 -> 1 [label="__VERIFIER_assume(m >= 0)"]}